{"version":3,"file":"quais.umd.js","sources":["../lib/esm/_version.js","../lib/esm/utils/properties.js","../lib/esm/utils/errors.js","../lib/esm/utils/data.js","../lib/esm/utils/events.js","../lib/esm/encoding/base64-browser.js","../lib/esm/encoding/bytes32.js","../lib/esm/utils/maths.js","../lib/esm/encoding/base58.js","../lib/esm/encoding/protoc/proto_common.js","../lib/esm/encoding/protoc/proto_block.js","../lib/esm/encoding/proto-encode.js","../lib/esm/encoding/proto-decode.js","../lib/esm/encoding/utf8.js","../lib/esm/utils/geturl-browser.js","../lib/esm/utils/fetch.js","../lib/esm/utils/fixednumber.js","../lib/esm/utils/units.js","../lib/esm/utils/uuid.js","../lib/esm/constants/zones.js","../node_modules/@noble/hashes/esm/_assert.js","../node_modules/@noble/hashes/esm/crypto.js","../node_modules/@noble/hashes/esm/utils.js","../node_modules/@noble/hashes/esm/hmac.js","../node_modules/@noble/hashes/esm/pbkdf2.js","../node_modules/@noble/hashes/esm/_sha2.js","../node_modules/@noble/hashes/esm/sha256.js","../node_modules/@noble/hashes/esm/_u64.js","../node_modules/@noble/hashes/esm/sha512.js","../lib/esm/crypto/crypto-browser.js","../lib/esm/crypto/hmac.js","../node_modules/@noble/hashes/esm/sha3.js","../lib/esm/crypto/keccak.js","../node_modules/@noble/hashes/esm/ripemd160.js","../lib/esm/crypto/ripemd160.js","../lib/esm/crypto/pbkdf2.js","../lib/esm/crypto/random.js","../node_modules/@noble/hashes/esm/scrypt.js","../lib/esm/crypto/scrypt.js","../lib/esm/crypto/sha2.js","../node_modules/@noble/curves/esm/abstract/utils.js","../node_modules/@noble/curves/esm/abstract/modular.js","../node_modules/@noble/curves/esm/abstract/curve.js","../node_modules/@noble/curves/esm/abstract/weierstrass.js","../node_modules/@noble/curves/esm/_shortw_utils.js","../node_modules/@noble/curves/esm/secp256k1.js","../lib/esm/constants/addresses.js","../lib/esm/constants/hashes.js","../lib/esm/constants/numbers.js","../lib/esm/constants/strings.js","../lib/esm/constants/shards.js","../lib/esm/crypto/signature.js","../lib/esm/crypto/signing-key.js","../lib/esm/crypto/musig.js","../lib/esm/crypto/index.js","../lib/esm/address/address.js","../lib/esm/address/checks.js","../lib/esm/utils/shards.js","../lib/esm/abi/coders/abstract-coder.js","../lib/esm/address/contract-address.js","../lib/esm/abi/typed.js","../lib/esm/abi/coders/address.js","../lib/esm/abi/coders/anonymous.js","../lib/esm/abi/coders/array.js","../lib/esm/abi/coders/boolean.js","../lib/esm/abi/coders/bytes.js","../lib/esm/abi/coders/fixed-bytes.js","../lib/esm/abi/coders/null.js","../lib/esm/abi/coders/number.js","../lib/esm/abi/coders/string.js","../lib/esm/abi/coders/tuple.js","../lib/esm/hash/id.js","../lib/esm/hash/message.js","../lib/esm/hash/solidity.js","../lib/esm/hash/typed-data.js","../lib/esm/abi/fragments.js","../lib/esm/abi/abi-coder.js","../lib/esm/abi/interface.js","../lib/esm/transaction/accesslist.js","../lib/esm/transaction/abstract-transaction.js","../lib/esm/transaction/abstract-coinselector.js","../lib/esm/transaction/utxo.js","../lib/esm/transaction/coinselector-fewest.js","../lib/esm/providers/format.js","../lib/esm/transaction/qi-transaction.js","../lib/esm/transaction/quai-transaction.js","../lib/esm/providers/provider.js","../lib/esm/contract/wrappers.js","../lib/esm/contract/contract.js","../lib/esm/signers/abstract-signer.js","../lib/esm/wallet/base-wallet.js","../lib/esm/wordlists/decode-owl.js","../lib/esm/wordlists/wordlist.js","../lib/esm/wordlists/wordlist-owl.js","../lib/esm/wordlists/lang-en.js","../lib/esm/wallet/mnemonic.js","../node_modules/aes-js/lib.esm/aes.js","../node_modules/aes-js/lib.esm/mode.js","../node_modules/aes-js/lib.esm/mode-ctr.js","../lib/esm/wallet/utils.js","../lib/esm/wallet/json-keystore.js","../lib/esm/wallet/hdnodewallet.js","../lib/esm/wallet/hdwallet.js","../lib/esm/wallet/quai-hdwallet.js","../lib/esm/wallet/wallet.js","../node_modules/@brandonblack/musig/lib/esm/index.js","../node_modules/@scure/base/lib/esm/index.js","../lib/esm/wallet/bip32/crypto.js","../lib/esm/wallet/payment-codes.js","../lib/esm/wallet/bip32/uint8array-utils.js","../lib/esm/wallet/bip32/testecc.js","../lib/esm/wallet/bip32/bip32.js","../lib/esm/wallet/bip32/types.js","../lib/esm/wallet/qi-hdwallet.js","../lib/esm/providers/network.js","../lib/esm/providers/subscriber-polling.js","../lib/esm/providers/abstract-provider.js","../lib/esm/providers/subscriber-filterid.js","../lib/esm/providers/provider-jsonrpc.js","../lib/esm/contract/factory.js","../lib/esm/providers/provider-browser.js","../lib/esm/providers/provider-socket.js","../lib/esm/providers/ws-browser.js","../lib/esm/providers/provider-websocket.js","../lib/esm/wordlists/bit-reader.js","../lib/esm/wordlists/decode-owla.js","../lib/esm/wordlists/wordlist-owla.js","../lib/esm/wordlists/lang-es.js","../lib/esm/wordlists/wordlists-browser.js","../lib/esm/quais.js"],"sourcesContent":["/* Do NOT modify this file; see /src/_admin/update-version.ts */\n/**\n * The current version of quais.\n *\n * @ignore\n */\nexport const version = '1.0.0-alpha.5';\n//# sourceMappingURL=_version.js.map","/**\n * Property helper functions.\n */\nfunction checkType(value, type, name) {\n    const types = type.split('|').map((t) => t.trim());\n    for (let i = 0; i < types.length; i++) {\n        switch (type) {\n            case 'any':\n                return;\n            case 'bigint':\n            case 'boolean':\n            case 'number':\n            case 'string':\n                if (typeof value === type) {\n                    return;\n                }\n        }\n    }\n    const error = new Error(`invalid value for type ${type}`);\n    error.code = 'INVALID_ARGUMENT';\n    error.argument = `value.${name}`;\n    error.value = value;\n    throw error;\n}\n/**\n * Resolves to a new object that is a copy of `value`, but with all values resolved.\n *\n * @category Utils\n * @param {Object} value - The object to resolve.\n * @returns {Promise<Object>} The resolved object.\n */\nexport async function resolveProperties(value) {\n    const keys = Object.keys(value);\n    const results = await Promise.all(keys.map((k) => Promise.resolve(value[k])));\n    return results.reduce((accum, v, index) => {\n        accum[keys[index]] = v;\n        return accum;\n    }, {});\n}\n// Crawl up the constructor chain to find a static method\nexport function getStatic(ctor, key) {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) {\n            return ctor[key];\n        }\n        if (!ctor.prototype || typeof ctor.prototype !== 'object') {\n            break;\n        }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\n/**\n * Assigns the `values` to `target` as read-only values.\n *\n * It `types` is specified, the values are checked.\n *\n * @category Utils\n * @param {Object} target - The target object to assign to.\n * @param {Object} values - The values to assign.\n * @param {Object} types - The types to check.\n */\nexport function defineProperties(target, values, types) {\n    for (const key in values) {\n        const value = values[key];\n        const type = types ? types[key] : null;\n        if (type) {\n            checkType(value, type, key);\n        }\n        Object.defineProperty(target, key, { enumerable: true, value, writable: false });\n    }\n}\n//# sourceMappingURL=properties.js.map","/**\n * All errors in quais include properties to ensure they are both human-readable (i.e. `.message`) and machine-readable\n * (i.e. `.code`).\n *\n * The {@link isError | **isError**} function can be used to check the error `code` and provide a type guard for the\n * properties present on that error interface.\n */\nimport { version } from '../_version.js';\nimport { defineProperties } from './properties.js';\nfunction stringify(value) {\n    if (value == null) {\n        return 'null';\n    }\n    if (Array.isArray(value)) {\n        return '[ ' + value.map(stringify).join(', ') + ' ]';\n    }\n    if (value instanceof Uint8Array) {\n        const HEX = '0123456789abcdef';\n        let result = '0x';\n        for (let i = 0; i < value.length; i++) {\n            result += HEX[value[i] >> 4];\n            result += HEX[value[i] & 0xf];\n        }\n        return result;\n    }\n    if (typeof value === 'object' && typeof value.toJSON === 'function') {\n        return stringify(value.toJSON());\n    }\n    switch (typeof value) {\n        case 'boolean':\n        case 'symbol':\n            return value.toString();\n        case 'bigint':\n            return BigInt(value).toString();\n        case 'number':\n            return value.toString();\n        case 'string':\n            return JSON.stringify(value);\n        case 'object': {\n            const keys = Object.keys(value);\n            keys.sort();\n            return '{ ' + keys.map((k) => `${stringify(k)}: ${stringify(value[k])}`).join(', ') + ' }';\n        }\n    }\n    return `[ COULD NOT SERIALIZE ]`;\n}\n/**\n * Returns true if the `error` matches an error thrown by quais that matches the error `code`.\n *\n * In TypeScript environments, this can be used to check that `error` matches an quaisError type, which means the\n * expected properties will be set.\n *\n * @category Utils\n * @example\n *\n * ```ts\n * try {\n *     // code....\n * } catch (e) {\n *     if (isError(e, 'CALL_EXCEPTION')) {\n *         // The Type Guard has validated this object\n *         console.log(e.data);\n *     }\n * }\n * ```\n *\n * @see [ErrorCodes](api:ErrorCode)\n */\nexport function isError(error, code) {\n    return error && error.code === code;\n}\n/**\n * Returns true if `error` is a {@link CallExceptionError | **CallExceptionError**}.\n *\n * @category Utils\n */\nexport function isCallException(error) {\n    return isError(error, 'CALL_EXCEPTION');\n}\n/**\n * Returns a new Error configured to the format quais emits errors, with the `message`, {@link ErrorCode | **ErrorCode**}\n * `code` and additional properties for the corresponding quaisError.\n *\n * Each error in quais includes the version of quais, a machine-readable {@link ErrorCode | **ErrorCode**}, and depending\n * on `code`, additional required properties. The error message will also include the `message`, quais version, `code`\n * and all additional properties, serialized.\n *\n * @category Utils\n * @param {string} message - The error message.\n * @param {ErrorCode} code - The error code.\n * @param {ErrorInfo<T>} [info] - Additional properties for the error.\n * @returns {T} The new error.\n */\nexport function makeError(message, code, info) {\n    const shortMessage = message;\n    {\n        const details = [];\n        if (info) {\n            if ('message' in info || 'code' in info || 'name' in info) {\n                throw new Error(`value will overwrite populated values: ${stringify(info)}`);\n            }\n            for (const key in info) {\n                if (key === 'shortMessage') {\n                    continue;\n                }\n                const value = info[key];\n                details.push(key + '=' + stringify(value));\n            }\n        }\n        details.push(`code=${code}`);\n        details.push(`version=${version}`);\n        if (details.length) {\n            message += ' (' + details.join(', ') + ')';\n        }\n    }\n    let error;\n    switch (code) {\n        case 'INVALID_ARGUMENT':\n            error = new TypeError(message);\n            break;\n        case 'NUMERIC_FAULT':\n        case 'BUFFER_OVERRUN':\n            error = new RangeError(message);\n            break;\n        default:\n            error = new Error(message);\n    }\n    defineProperties(error, { code });\n    if (info) {\n        Object.assign(error, info);\n    }\n    if (error.shortMessage == null) {\n        defineProperties(error, { shortMessage });\n    }\n    return error;\n}\n/**\n * Throws an quaisError with `message`, `code` and additional error `info` when `check` is falsish..\n *\n * @category Utils\n * @param {unknown} check - The value to check.\n * @param {string} message - The error message.\n * @param {ErrorCode} code - The error code.\n * @param {ErrorInfo<T>} [info] - Additional properties for the error.\n * @throws {T} Throws the error if `check` is falsish.\n */\nexport function assert(check, message, code, info) {\n    if (!check) {\n        throw makeError(message, code, info);\n    }\n}\n/**\n * A simple helper to simply ensuring provided arguments match expected constraints, throwing if not.\n *\n * In TypeScript environments, the `check` has been asserted true, so any further code does not need additional\n * compile-time checks.\n *\n * @category Utils\n * @param {unknown} check - The value to check.\n * @param {string} message - The error message.\n * @param {string} name - The name of the argument.\n * @param {unknown} value - The value of the argument.\n * @throws {InvalidArgumentError} Throws if `check` is falsish.\n */\nexport function assertArgument(check, message, name, value) {\n    assert(check, message, 'INVALID_ARGUMENT', { argument: name, value: value });\n}\nexport function assertArgumentCount(count, expectedCount, message) {\n    if (message == null) {\n        message = '';\n    }\n    if (message) {\n        message = ': ' + message;\n    }\n    assert(count >= expectedCount, 'missing arguemnt' + message, 'MISSING_ARGUMENT', {\n        count: count,\n        expectedCount: expectedCount,\n    });\n    assert(count <= expectedCount, 'too many arguemnts' + message, 'UNEXPECTED_ARGUMENT', {\n        count: count,\n        expectedCount: expectedCount,\n    });\n}\nconst _normalizeForms = ['NFD', 'NFC', 'NFKD', 'NFKC'].reduce((accum, form) => {\n    try {\n        // General test for normalize\n        /* c8 ignore start */\n        if ('test'.normalize(form) !== 'test') {\n            throw new Error('bad');\n        }\n        /* c8 ignore stop */\n        if (form === 'NFD') {\n            const check = String.fromCharCode(0xe9).normalize('NFD');\n            const expected = String.fromCharCode(0x65, 0x0301);\n            /* c8 ignore start */\n            if (check !== expected) {\n                throw new Error('broken');\n            }\n            /* c8 ignore stop */\n        }\n        accum.push(form);\n        // eslint-disable-next-line no-empty\n    }\n    catch (error) { }\n    return accum;\n}, []);\n/**\n * Throws if the normalization `form` is not supported.\n *\n * @category Utils\n * @param {string} form - The normalization form.\n * @throws {UnsupportedOperationError} Throws if the form is not supported.\n */\nexport function assertNormalize(form) {\n    assert(_normalizeForms.indexOf(form) >= 0, 'platform missing String.prototype.normalize', 'UNSUPPORTED_OPERATION', {\n        operation: 'String.prototype.normalize',\n        info: { form },\n    });\n}\n/**\n * Many classes use file-scoped values to guard the constructor, making it effectively private. This facilitates that\n * pattern by ensuring the `givenGuard` matches the file-scoped `guard`, throwing if not, indicating the `className%% if\n * provided.\n *\n * @category Utils\n * @param {any} givenGuard - The guard provided to the constructor.\n * @param {any} guard - The file-scoped guard.\n * @param {string} [className] - The class name.\n * @throws {UnsupportedOperationError} Throws if the guards do not match.\n */\nexport function assertPrivate(givenGuard, guard, className) {\n    if (className == null) {\n        className = '';\n    }\n    if (givenGuard !== guard) {\n        let method = className, operation = 'new';\n        if (className) {\n            method += '.';\n            operation += ' ' + className;\n        }\n        assert(false, `private constructor; use ${method}from* methods`, 'UNSUPPORTED_OPERATION', {\n            operation,\n        });\n    }\n}\n//# sourceMappingURL=errors.js.map","/**\n * Some data helpers.\n */\nimport { assert, assertArgument } from './errors.js';\n/**\n * Converts a BytesLike value to a Uint8Array.\n *\n * @ignore\n * @category Utils\n * @param {BytesLike} value - The value to convert.\n * @param {string} [name] - The name of the value for error context.\n * @param {boolean} [copy] - Whether to create a copy of the value.\n * @returns {Uint8Array} The converted Uint8Array.\n * @throws {Error} If the value is not a valid BytesLike.\n */\nfunction _getBytes(value, name, copy) {\n    if (value instanceof Uint8Array) {\n        if (copy) {\n            return new Uint8Array(value);\n        }\n        return value;\n    }\n    if (typeof value === 'string' && value.match(/^0x([0-9a-f][0-9a-f])*$/i)) {\n        const result = new Uint8Array((value.length - 2) / 2);\n        let offset = 2;\n        for (let i = 0; i < result.length; i++) {\n            result[i] = parseInt(value.substring(offset, offset + 2), 16);\n            offset += 2;\n        }\n        return result;\n    }\n    assertArgument(false, 'invalid BytesLike value', name || 'value', value);\n}\n/**\n * Get a typed Uint8Array for `value`. If already a Uint8Array the original `value` is returned; if a copy is required\n * use {@link getBytesCopy | **getBytesCopy**}.\n *\n * @category Utils\n * @param {BytesLike} value - The value to convert to a Uint8Array.\n * @param {string} [name] - The name of the value for error context.\n * @returns {Uint8Array} The typed Uint8Array.\n */\nexport function getBytes(value, name) {\n    return _getBytes(value, name, false);\n}\n/**\n * Get a typed Uint8Array for `value`, creating a copy if necessary to prevent any modifications of the returned value\n * from being reflected elsewhere.\n *\n * @category Utils\n * @param {BytesLike} value - The value to convert to a Uint8Array.\n * @param {string} [name] - The name of the value for error context.\n * @returns {Uint8Array} The typed Uint8Array.\n */\nexport function getBytesCopy(value, name) {\n    return _getBytes(value, name, true);\n}\n/**\n * Returns true if `value` is a valid {@link HexString | **HexString**}.\n *\n * If `length` is `true` or a number, it also checks that `value` is a valid {@link DataHexString | **DataHexString**} of\n * `length` (if a number) bytes of data (e.g. `0x1234` is 2 bytes).\n *\n * @category Utils\n * @param {any} value - The value to check.\n * @param {number | boolean} [length] - The expected length of the data.\n * @returns {boolean} True if the value is a valid {@link HexString | **HexString**}.\n */\nexport function isHexString(value, length) {\n    if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (typeof length === 'number' && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    if (length === true && value.length % 2 !== 0) {\n        return false;\n    }\n    return true;\n}\n/**\n * Returns true if `value` is a valid representation of arbitrary data (i.e. a valid\n * {@link DataHexString | **DataHexString**} or a Uint8Array).\n *\n * @category Utils\n * @param {any} value - The value to check.\n * @returns {boolean} True if the value is a valid {@link DataHexString | **DataHexString**}.\n */\nexport function isBytesLike(value) {\n    return isHexString(value, true) || value instanceof Uint8Array;\n}\nconst HexCharacters = '0123456789abcdef';\n/**\n * Returns a {@link DataHexString | **DataHexString**} representation of `data`.\n *\n * @category Utils\n * @param {BytesLike} data - The data to convert to a hex string.\n * @returns {string} The hex string.\n */\nexport function hexlify(data) {\n    const bytes = getBytes(data);\n    let result = '0x';\n    for (let i = 0; i < bytes.length; i++) {\n        const v = bytes[i];\n        result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n    }\n    return result;\n}\n/**\n * Returns a {@link DataHexString | **DataHexString** } by concatenating all values within `data`.\n *\n * @category Utils\n * @param {ReadonlyArray<BytesLike>} datas - The data to concatenate.\n * @returns {string} The concatenated data.\n */\nexport function concat(datas) {\n    return '0x' + datas.map((d) => hexlify(d).substring(2)).join('');\n}\n/**\n * Returns the length of `data`, in bytes.\n *\n * @category Utils\n * @param {BytesLike} data - The data to get the length of.\n * @returns {number} The length of the data.\n */\nexport function dataLength(data) {\n    if (isHexString(data, true)) {\n        return (data.length - 2) / 2;\n    }\n    return getBytes(data).length;\n}\n/**\n * Returns a {@link DataHexString | **DataHexString** } by slicing `data` from the `start` offset to the `end` offset.\n *\n * By default `start` is 0 and `end` is the length of `data`.\n *\n * @category Utils\n * @param {BytesLike} data - The data to slice.\n * @param {number} [start] - The start offset.\n * @param {number} [end] - The end offset.\n * @returns {string} The sliced data.\n * @throws {Error} If the end offset is beyond the data bounds.\n */\nexport function dataSlice(data, start, end) {\n    const bytes = getBytes(data);\n    if (end != null && end > bytes.length) {\n        assert(false, 'cannot slice beyond data bounds', 'BUFFER_OVERRUN', {\n            buffer: bytes,\n            length: bytes.length,\n            offset: end,\n        });\n    }\n    return hexlify(bytes.slice(start == null ? 0 : start, end == null ? bytes.length : end));\n}\n/**\n * Return the {@link DataHexString | **DataHexString**} result by stripping all **leading** zero bytes from `data`.\n *\n * @category Utils\n * @param {BytesLike} data - The data to strip.\n * @returns {string} The stripped data.\n */\nexport function stripZerosLeft(data) {\n    let bytes = hexlify(data).substring(2);\n    while (bytes.startsWith('00')) {\n        bytes = bytes.substring(2);\n    }\n    return '0x' + bytes;\n}\n/**\n * Pads the data to the specified length.\n *\n * @ignore\n * @category Utils\n * @param {BytesLike} data - The data to pad.\n * @param {number} length - The length to pad to.\n * @param {boolean} left - Whether to pad on the left.\n * @returns {string} The padded data.\n * @throws {Error} If the padding exceeds data length.\n */\nfunction zeroPad(data, length, left) {\n    const bytes = getBytes(data);\n    assert(length >= bytes.length, 'padding exceeds data length', 'BUFFER_OVERRUN', {\n        buffer: new Uint8Array(bytes),\n        length: length,\n        offset: length + 1,\n    });\n    const result = new Uint8Array(length);\n    result.fill(0);\n    if (left) {\n        result.set(bytes, length - bytes.length);\n    }\n    else {\n        result.set(bytes, 0);\n    }\n    return hexlify(result);\n}\n/**\n * Return the {@link DataHexString | **DataHexString**} of `data` padded on the **left** to `length` bytes.\n *\n * If `data` already exceeds `length`, a [BufferOverrunError](../interfaces/BufferOverrunError) is thrown.\n *\n * This pads data the same as **values** are in Solidity (e.g. `uint128`).\n *\n * @category Utils\n * @param {BytesLike} data - The data to pad.\n * @param {number} length - The length to pad to.\n * @returns {string} The padded data.\n */\nexport function zeroPadValue(data, length) {\n    return zeroPad(data, length, true);\n}\n/**\n * Return the {@link DataHexString | **DataHexString**} of `data` padded on the **right** to `length` bytes.\n *\n * If `data` already exceeds %%length%%, a [BufferOverrunError](../interfaces/BufferOverrunError) is thrown.\n *\n * This pads data the same as **bytes** are in Solidity (e.g. `bytes16`).\n *\n * @category Utils\n * @param {BytesLike} data - The data to pad.\n * @param {number} length - The length to pad to.\n * @returns {string} The padded data.\n */\nexport function zeroPadBytes(data, length) {\n    return zeroPad(data, length, false);\n}\n/**\n * XOR two Uint8Array values.\n *\n * @category Utils\n * @param {Uint8Array} a - The first Uint8Array.\n * @param {Uint8Array} b - The second Uint8Array.\n *\n * @returns {Uint8Array} The XOR result.\n */\nexport function xorUint8Arrays(a, b) {\n    if (a.length !== b.length) {\n        throw new Error('Uint8Arrays are not of the same length');\n    }\n    const result = new Uint8Array(a.length);\n    // eslint-disable-next-line unicorn/no-for-loop\n    for (let i = 0; i < a.length; i++) {\n        result[i] = a[i] ^ b[i];\n    }\n    return result;\n}\n//# sourceMappingURL=data.js.map","import { defineProperties } from './properties.js';\n/**\n * When an {@link EventEmitterable | **EventEmitterable**} triggers a Listener, the callback always ahas one additional\n * argument passed, which is an **EventPayload**.\n *\n * @category Utils\n */\nexport class EventPayload {\n    /**\n     * The event filter.\n     */\n    filter;\n    /**\n     * The **EventEmitterable**.\n     */\n    emitter;\n    #listener;\n    /**\n     * Create a new **EventPayload** for `emitter` with the `listener` and for `filter`.\n     */\n    constructor(emitter, listener, filter) {\n        this.#listener = listener;\n        defineProperties(this, { emitter, filter });\n    }\n    /**\n     * Unregister the triggered listener for future events.\n     */\n    async removeListener() {\n        if (this.#listener == null) {\n            return;\n        }\n        await this.emitter.off(this.filter, this.#listener);\n    }\n}\n//# sourceMappingURL=events.js.map","import { getBytes } from '../utils/data.js';\nexport function decodeBase64(textData) {\n    textData = atob(textData);\n    const data = new Uint8Array(textData.length);\n    for (let i = 0; i < textData.length; i++) {\n        data[i] = textData.charCodeAt(i);\n    }\n    return getBytes(data);\n}\nexport function encodeBase64(_data) {\n    const data = getBytes(_data);\n    let textData = '';\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n//# sourceMappingURL=base64-browser.js.map","/**\n * Provides utility functions for encoding and decoding strings in the Bytes32 format.\n *\n * @category Application Binary Interface\n */\nimport { getBytes, zeroPadBytes } from '../utils/index.js';\nimport { toUtf8Bytes, toUtf8String } from './index.js';\n/**\n * Encodes a string as a Bytes32 string. This is used to encode ABI data.\n *\n * @category Encoding\n * @param {string} text - The string to encode.\n * @returns {string} The Bytes32-encoded string.\n * @throws {Error} If the string is too long to fit in a Bytes32 format.\n */\nexport function encodeBytes32(text) {\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n    // Check we have room for null-termination\n    if (bytes.length > 31) {\n        throw new Error('bytes32 string must be less than 32 bytes');\n    }\n    // Zero-pad (implicitly null-terminates)\n    return zeroPadBytes(bytes, 32);\n}\n/**\n * Decodes a Bytes32-encoded string into a regular string. This is used to decode ABI-encoded data.\n *\n * @category Encoding\n * @param {BytesLike} _bytes - The Bytes32-encoded data.\n * @returns {string} The decoded string.\n * @throws {Error} If the input is not exactly 32 bytes long or lacks a null terminator.\n */\nexport function decodeBytes32(_bytes) {\n    const data = getBytes(_bytes, 'bytes');\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) {\n        throw new Error('invalid bytes32 - not 32 bytes long');\n    }\n    if (data[31] !== 0) {\n        throw new Error('invalid bytes32 string - no null terminator');\n    }\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) {\n        length--;\n    }\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n//# sourceMappingURL=bytes32.js.map","/**\n * Some mathematic operations.\n */\nimport { hexlify, isBytesLike } from './data.js';\nimport { assert, assertArgument } from './errors.js';\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\n//const BN_Max256 = (BN_1 << BigInt(256)) - BN_1;\n// IEEE 754 support 53-bits of mantissa\nconst maxValue = 0x1fffffffffffff;\n/**\n * Convert `value` from a twos-compliment representation of `width` bits to its value.\n *\n * If the highest bit is `1`, the result will be negative.\n *\n * @category Utils\n * @param {BigNumberish} _value - The value to convert.\n * @param {Numeric} _width - The width of the value in bits.\n * @returns {bigint} The value.\n * @throws {Error} If the value is too large for the width.\n */\nexport function fromTwos(_value, _width) {\n    const value = getUint(_value, 'value');\n    const width = BigInt(getNumber(_width, 'width'));\n    assert(value >> width === BN_0, 'overflow', 'NUMERIC_FAULT', {\n        operation: 'fromTwos',\n        fault: 'overflow',\n        value: _value,\n    });\n    // Top bit set; treat as a negative value\n    if (value >> (width - BN_1)) {\n        const mask = (BN_1 << width) - BN_1;\n        return -((~value & mask) + BN_1);\n    }\n    return value;\n}\n/**\n * Convert `value` to a twos-compliment representation of `width` bits.\n *\n * The result will always be positive.\n *\n * @category Utils\n * @param {BigNumberish} _value - The value to convert.\n * @param {Numeric} _width - The width of the value in bits.\n * @returns {bigint} The value.\n * @throws {Error} If the value is too large for the width.\n */\nexport function toTwos(_value, _width) {\n    let value = getBigInt(_value, 'value');\n    const width = BigInt(getNumber(_width, 'width'));\n    const limit = BN_1 << (width - BN_1);\n    if (value < BN_0) {\n        value = -value;\n        assert(value <= limit, 'too low', 'NUMERIC_FAULT', {\n            operation: 'toTwos',\n            fault: 'overflow',\n            value: _value,\n        });\n        const mask = (BN_1 << width) - BN_1;\n        return (~value & mask) + BN_1;\n    }\n    else {\n        assert(value < limit, 'too high', 'NUMERIC_FAULT', {\n            operation: 'toTwos',\n            fault: 'overflow',\n            value: _value,\n        });\n    }\n    return value;\n}\n/**\n * Mask `value` with a bitmask of `bits` ones.\n *\n * @category Utils\n * @param {BigNumberish} _value - The value to mask.\n * @param {Numeric} _bits - The number of bits to mask.\n * @returns {bigint} The masked value.\n */\nexport function mask(_value, _bits) {\n    const value = getUint(_value, 'value');\n    const bits = BigInt(getNumber(_bits, 'bits'));\n    return value & ((BN_1 << bits) - BN_1);\n}\n/**\n * Gets a BigInt from `value`. If it is an invalid value for a BigInt, then an ArgumentError will be thrown for `name`.\n *\n * @category Utils\n * @param {BigNumberish} value - The value to convert.\n * @param {string} name - The name of the value.\n * @returns {bigint} The value.\n */\nexport function getBigInt(value, name) {\n    switch (typeof value) {\n        case 'bigint':\n            return value;\n        case 'number':\n            assertArgument(Number.isInteger(value), 'underflow', name || 'value', value);\n            assertArgument(value >= -maxValue && value <= maxValue, 'overflow', name || 'value', value);\n            return BigInt(value);\n        case 'string':\n            try {\n                if (value === '') {\n                    throw new Error('empty string');\n                }\n                if (value[0] === '-' && value[1] !== '-') {\n                    return -BigInt(value.substring(1));\n                }\n                return BigInt(value);\n            }\n            catch (e) {\n                assertArgument(false, `invalid BigNumberish string: ${e.message}`, name || 'value', value);\n            }\n    }\n    assertArgument(false, 'invalid BigNumberish value', name || 'value', value);\n}\n/**\n * Returns absolute value of bigint `value`.\n *\n * @category Utils\n * @param {BigNumberish} value - The value to convert.\n * @returns {bigint} The absolute value.\n */\nexport function bigIntAbs(value) {\n    value = getBigInt(value);\n    // if value is negative (including -0), return -value, else return value\n    if (value === -BN_0 || value < BN_0) {\n        return -value;\n    }\n    return value;\n}\n/**\n * Returns `value` as a bigint, validating it is valid as a bigint value and that it is positive.\n *\n * @category Utils\n * @param {BigNumberish} value - The value to convert.\n * @param {string} name - The name of the value.\n * @returns {bigint} The value.\n * @throws {Error} If the value is negative.\n */\nexport function getUint(value, name) {\n    const result = getBigInt(value, name);\n    assert(result >= BN_0, 'unsigned value cannot be negative', 'NUMERIC_FAULT', {\n        fault: 'overflow',\n        operation: 'getUint',\n        value,\n    });\n    return result;\n}\nconst Nibbles = '0123456789abcdef';\n/**\n * Converts `value` to a BigInt. If `value` is a Uint8Array, it is treated as Big Endian data.\n *\n * @category Utils\n * @param {BigNumberish | Uint8Array} value - The value to convert.\n * @returns {bigint} The value.\n */\nexport function toBigInt(value) {\n    if (value instanceof Uint8Array) {\n        let result = '0x0';\n        for (const v of value) {\n            result += Nibbles[v >> 4];\n            result += Nibbles[v & 0x0f];\n        }\n        return BigInt(result);\n    }\n    return getBigInt(value);\n}\n/**\n * Gets a number from `value`. If it is an invalid value for a number, then an ArgumentError will be thrown for `name`.\n *\n * @category Utils\n * @param {BigNumberish} value - The value to convert.\n * @param {string} name - The name of the value.\n * @returns {number} The value.\n * @throws {Error} If the value is invalid.\n * @throws {Error} If the value is too large.\n */\nexport function getNumber(value, name) {\n    switch (typeof value) {\n        case 'bigint':\n            assertArgument(value >= -maxValue && value <= maxValue, 'overflow', name || 'value', value);\n            return Number(value);\n        case 'number':\n            assertArgument(Number.isInteger(value), 'underflow', name || 'value', value);\n            assertArgument(value >= -maxValue && value <= maxValue, 'overflow', name || 'value', value);\n            return value;\n        case 'string':\n            try {\n                if (value === '') {\n                    throw new Error('empty string');\n                }\n                return getNumber(BigInt(value), name);\n            }\n            catch (e) {\n                assertArgument(false, `invalid numeric string: ${e.message}`, name || 'value', value);\n            }\n    }\n    assertArgument(false, 'invalid numeric value', name || 'value', value);\n}\n/**\n * Converts `value` to a number. If `value` is a Uint8Array, it is treated as Big Endian data. Throws if the value is\n * not safe.\n *\n * @category Utils\n * @param {BigNumberish | Uint8Array} value - The value to convert.\n * @returns {number} The value.\n * @throws {Error} If the value is not safe to convert to a number.\n */\nexport function toNumber(value) {\n    return getNumber(toBigInt(value));\n}\n/**\n * Converts `value` to a Big Endian hexstring, optionally padded to `width` bytes.\n *\n * @category Utils\n * @param {BigNumberish} _value - The value to convert.\n * @param {Numeric} _width - The width of the value in bytes.\n * @returns {string} The hexstring.\n * @throws {Error} If the value exceeds the width.\n */\nexport function toBeHex(_value, _width) {\n    const value = getUint(_value, 'value');\n    let result = value.toString(16);\n    if (_width == null) {\n        // Ensure the value is of even length\n        if (result.length % 2) {\n            result = '0' + result;\n        }\n    }\n    else {\n        const width = getNumber(_width, 'width');\n        assert(width * 2 >= result.length, `value exceeds width (${width} bytes)`, 'NUMERIC_FAULT', {\n            operation: 'toBeHex',\n            fault: 'overflow',\n            value: _value,\n        });\n        // Pad the value to the required width\n        while (result.length < width * 2) {\n            result = '0' + result;\n        }\n    }\n    return '0x' + result;\n}\n/**\n * Converts `value` to a Big Endian Uint8Array.\n *\n * @category Utils\n * @param {BigNumberish} _value - The value to convert.\n * @returns {Uint8Array} The value.\n */\nexport function toBeArray(_value) {\n    const value = getUint(_value, 'value');\n    if (value === BN_0) {\n        return new Uint8Array([]);\n    }\n    let hex = value.toString(16);\n    if (hex.length % 2) {\n        hex = '0' + hex;\n    }\n    const result = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < result.length; i++) {\n        const offset = i * 2;\n        result[i] = parseInt(hex.substring(offset, offset + 2), 16);\n    }\n    return result;\n}\n/**\n * Returns a `HexString` for `value` safe to use as a Quantity.\n *\n * A Quantity does not have and leading 0 values unless the value is the literal value `0x0`. This is most commonly used\n * for JSSON-RPC numeric values.\n *\n * @category Utils\n * @param {BigNumberish | Uint8Array} value - The value to convert.\n * @returns {string} The quantity.\n */\nexport function toQuantity(value) {\n    let result = hexlify(isBytesLike(value) ? value : toBeArray(value)).substring(2);\n    while (result.startsWith('0')) {\n        result = result.substring(1);\n    }\n    if (result === '') {\n        result = '0';\n    }\n    return '0x' + result;\n}\n//# sourceMappingURL=maths.js.map","/**\n * The [Base58 Encoding](https://en.bitcoinwiki.org/wiki/Base58) scheme allows a **numeric** value to be encoded as a\n * compact string using a radix of 58 using only alpha-numeric characters. Confusingly similar characters are omitted\n * (i.e. `\"l0O\"`).\n *\n * Note that Base58 encodes a **numeric** value, not arbitrary bytes, since any zero-bytes on the left would get\n * removed. To mitigate this issue most schemes that use Base58 choose specific high-order values to ensure non-zero\n * prefixes.\n */\nimport { getBytes } from '../utils/data.js';\nimport { assertArgument } from '../utils/errors.js';\nimport { toBigInt } from '../utils/maths.js';\nconst Alphabet = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nlet Lookup = null;\nfunction getAlpha(letter) {\n    if (Lookup == null) {\n        Lookup = {};\n        for (let i = 0; i < Alphabet.length; i++) {\n            Lookup[Alphabet[i]] = BigInt(i);\n        }\n    }\n    const result = Lookup[letter];\n    assertArgument(result != null, `invalid base58 value`, 'letter', letter);\n    return result;\n}\nconst BN_0 = BigInt(0);\nconst BN_58 = BigInt(58);\n/**\n * Encode `value` as a Base58-encoded string.\n *\n * @category Encoding\n * @param {BytesLike} _value - The value to encode.\n * @returns {string} The Base58-encoded string.\n */\nexport function encodeBase58(_value) {\n    const bytes = getBytes(_value);\n    let value = toBigInt(bytes);\n    let result = '';\n    while (value) {\n        result = Alphabet[Number(value % BN_58)] + result;\n        value /= BN_58;\n    }\n    // Account for leading padding zeros\n    for (let i = 0; i < bytes.length; i++) {\n        if (bytes[i]) {\n            break;\n        }\n        result = Alphabet[0] + result;\n    }\n    return result;\n}\n/**\n * Decode the Base58-encoded `value`.\n *\n * @category Encoding\n * @param {string} value - The Base58-encoded value.\n * @returns {bigint} The decoded value.\n */\nexport function decodeBase58(value) {\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result *= BN_58;\n        result += getAlpha(value[i]);\n    }\n    return result;\n}\n//# sourceMappingURL=base58.js.map","/**\n * Generated by the protoc-gen-ts.  DO NOT EDIT!\n * compiler version: 5.28.2\n * source: proto_common.proto\n * git: https://github.com/thesayyn/protoc-gen-ts */\nimport * as pb_1 from \"google-protobuf\";\nexport var common;\n(function (common) {\n    class ProtoLocation extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"value\" in data && data.value != undefined) {\n                    this.value = data.value;\n                }\n            }\n        }\n        get value() {\n            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));\n        }\n        set value(value) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoLocation({});\n            if (data.value != null) {\n                message.value = data.value;\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.value != null) {\n                data.value = this.value;\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.value.length)\n                writer.writeBytes(1, this.value);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoLocation();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.value = reader.readBytes();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoLocation.deserialize(bytes);\n        }\n    }\n    common.ProtoLocation = ProtoLocation;\n    class ProtoHash extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"value\" in data && data.value != undefined) {\n                    this.value = data.value;\n                }\n            }\n        }\n        get value() {\n            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));\n        }\n        set value(value) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoHash({});\n            if (data.value != null) {\n                message.value = data.value;\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.value != null) {\n                data.value = this.value;\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.value.length)\n                writer.writeBytes(1, this.value);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoHash();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.value = reader.readBytes();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoHash.deserialize(bytes);\n        }\n    }\n    common.ProtoHash = ProtoHash;\n    class ProtoHashes extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"hashes\" in data && data.hashes != undefined) {\n                    this.hashes = data.hashes;\n                }\n            }\n        }\n        get hashes() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoHash, 1);\n        }\n        set hashes(value) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoHashes({});\n            if (data.hashes != null) {\n                message.hashes = data.hashes.map(item => ProtoHash.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.hashes != null) {\n                data.hashes = this.hashes.map((item) => item.toObject());\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.hashes.length)\n                writer.writeRepeatedMessage(1, this.hashes, (item) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoHashes();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.hashes, () => pb_1.Message.addToRepeatedWrapperField(message, 1, ProtoHash.deserialize(reader), ProtoHash));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoHashes.deserialize(bytes);\n        }\n    }\n    common.ProtoHashes = ProtoHashes;\n    class ProtoAddress extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"value\" in data && data.value != undefined) {\n                    this.value = data.value;\n                }\n            }\n        }\n        get value() {\n            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));\n        }\n        set value(value) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoAddress({});\n            if (data.value != null) {\n                message.value = data.value;\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.value != null) {\n                data.value = this.value;\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.value.length)\n                writer.writeBytes(1, this.value);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoAddress();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.value = reader.readBytes();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoAddress.deserialize(bytes);\n        }\n    }\n    common.ProtoAddress = ProtoAddress;\n    class ProtoNumber extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"value\" in data && data.value != undefined) {\n                    this.value = data.value;\n                }\n            }\n        }\n        get value() {\n            return pb_1.Message.getFieldWithDefault(this, 1, 0);\n        }\n        set value(value) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoNumber({});\n            if (data.value != null) {\n                message.value = data.value;\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.value != null) {\n                data.value = this.value;\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.value != 0)\n                writer.writeUint64(1, this.value);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoNumber();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.value = reader.readUint64();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoNumber.deserialize(bytes);\n        }\n    }\n    common.ProtoNumber = ProtoNumber;\n    class ProtoLocations extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"locations\" in data && data.locations != undefined) {\n                    this.locations = data.locations;\n                }\n            }\n        }\n        get locations() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoLocation, 1);\n        }\n        set locations(value) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoLocations({});\n            if (data.locations != null) {\n                message.locations = data.locations.map(item => ProtoLocation.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.locations != null) {\n                data.locations = this.locations.map((item) => item.toObject());\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.locations.length)\n                writer.writeRepeatedMessage(1, this.locations, (item) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoLocations();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.locations, () => pb_1.Message.addToRepeatedWrapperField(message, 1, ProtoLocation.deserialize(reader), ProtoLocation));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoLocations.deserialize(bytes);\n        }\n    }\n    common.ProtoLocations = ProtoLocations;\n})(common || (common = {}));\n//# sourceMappingURL=proto_common.js.map","/**\n * Generated by the protoc-gen-ts.  DO NOT EDIT!\n * compiler version: 5.28.2\n * source: proto_block.proto\n * git: https://github.com/thesayyn/protoc-gen-ts */\nimport * as dependency_1 from \"./proto_common.js\";\nimport * as pb_1 from \"google-protobuf\";\nexport var block;\n(function (block) {\n    class ProtoHeader extends pb_1.Message {\n        #one_of_decls = [[2], [3], [4], [5], [6], [8], [9], [13], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36]];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1, 7, 10, 11, 12, 14], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"parent_hash\" in data && data.parent_hash != undefined) {\n                    this.parent_hash = data.parent_hash;\n                }\n                if (\"uncle_hash\" in data && data.uncle_hash != undefined) {\n                    this.uncle_hash = data.uncle_hash;\n                }\n                if (\"evm_root\" in data && data.evm_root != undefined) {\n                    this.evm_root = data.evm_root;\n                }\n                if (\"tx_hash\" in data && data.tx_hash != undefined) {\n                    this.tx_hash = data.tx_hash;\n                }\n                if (\"outbound_etx_hash\" in data && data.outbound_etx_hash != undefined) {\n                    this.outbound_etx_hash = data.outbound_etx_hash;\n                }\n                if (\"etx_rollup_hash\" in data && data.etx_rollup_hash != undefined) {\n                    this.etx_rollup_hash = data.etx_rollup_hash;\n                }\n                if (\"manifest_hash\" in data && data.manifest_hash != undefined) {\n                    this.manifest_hash = data.manifest_hash;\n                }\n                if (\"receipt_hash\" in data && data.receipt_hash != undefined) {\n                    this.receipt_hash = data.receipt_hash;\n                }\n                if (\"difficulty\" in data && data.difficulty != undefined) {\n                    this.difficulty = data.difficulty;\n                }\n                if (\"parent_entropy\" in data && data.parent_entropy != undefined) {\n                    this.parent_entropy = data.parent_entropy;\n                }\n                if (\"parent_delta_entropy\" in data && data.parent_delta_entropy != undefined) {\n                    this.parent_delta_entropy = data.parent_delta_entropy;\n                }\n                if (\"parent_uncled_delta_entropy\" in data && data.parent_uncled_delta_entropy != undefined) {\n                    this.parent_uncled_delta_entropy = data.parent_uncled_delta_entropy;\n                }\n                if (\"uncled_entropy\" in data && data.uncled_entropy != undefined) {\n                    this.uncled_entropy = data.uncled_entropy;\n                }\n                if (\"number\" in data && data.number != undefined) {\n                    this.number = data.number;\n                }\n                if (\"gas_limit\" in data && data.gas_limit != undefined) {\n                    this.gas_limit = data.gas_limit;\n                }\n                if (\"gas_used\" in data && data.gas_used != undefined) {\n                    this.gas_used = data.gas_used;\n                }\n                if (\"base_fee\" in data && data.base_fee != undefined) {\n                    this.base_fee = data.base_fee;\n                }\n                if (\"location\" in data && data.location != undefined) {\n                    this.location = data.location;\n                }\n                if (\"extra\" in data && data.extra != undefined) {\n                    this.extra = data.extra;\n                }\n                if (\"mix_hash\" in data && data.mix_hash != undefined) {\n                    this.mix_hash = data.mix_hash;\n                }\n                if (\"nonce\" in data && data.nonce != undefined) {\n                    this.nonce = data.nonce;\n                }\n                if (\"utxo_root\" in data && data.utxo_root != undefined) {\n                    this.utxo_root = data.utxo_root;\n                }\n                if (\"etx_set_root\" in data && data.etx_set_root != undefined) {\n                    this.etx_set_root = data.etx_set_root;\n                }\n                if (\"efficiency_score\" in data && data.efficiency_score != undefined) {\n                    this.efficiency_score = data.efficiency_score;\n                }\n                if (\"threshold_count\" in data && data.threshold_count != undefined) {\n                    this.threshold_count = data.threshold_count;\n                }\n                if (\"expansion_number\" in data && data.expansion_number != undefined) {\n                    this.expansion_number = data.expansion_number;\n                }\n                if (\"etx_eligible_slices\" in data && data.etx_eligible_slices != undefined) {\n                    this.etx_eligible_slices = data.etx_eligible_slices;\n                }\n                if (\"prime_terminus_hash\" in data && data.prime_terminus_hash != undefined) {\n                    this.prime_terminus_hash = data.prime_terminus_hash;\n                }\n                if (\"interlink_root_hash\" in data && data.interlink_root_hash != undefined) {\n                    this.interlink_root_hash = data.interlink_root_hash;\n                }\n                if (\"state_limit\" in data && data.state_limit != undefined) {\n                    this.state_limit = data.state_limit;\n                }\n                if (\"state_used\" in data && data.state_used != undefined) {\n                    this.state_used = data.state_used;\n                }\n                if (\"quai_state_size\" in data && data.quai_state_size != undefined) {\n                    this.quai_state_size = data.quai_state_size;\n                }\n                if (\"secondary_coinbase\" in data && data.secondary_coinbase != undefined) {\n                    this.secondary_coinbase = data.secondary_coinbase;\n                }\n                if (\"exchange_rate\" in data && data.exchange_rate != undefined) {\n                    this.exchange_rate = data.exchange_rate;\n                }\n                if (\"quai_to_qi\" in data && data.quai_to_qi != undefined) {\n                    this.quai_to_qi = data.quai_to_qi;\n                }\n                if (\"qi_to_quai\" in data && data.qi_to_quai != undefined) {\n                    this.qi_to_quai = data.qi_to_quai;\n                }\n            }\n        }\n        get parent_hash() {\n            return pb_1.Message.getRepeatedWrapperField(this, dependency_1.common.ProtoHash, 1);\n        }\n        set parent_hash(value) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        get uncle_hash() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoHash, 2);\n        }\n        set uncle_hash(value) {\n            pb_1.Message.setOneofWrapperField(this, 2, this.#one_of_decls[0], value);\n        }\n        get has_uncle_hash() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get evm_root() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoHash, 3);\n        }\n        set evm_root(value) {\n            pb_1.Message.setOneofWrapperField(this, 3, this.#one_of_decls[1], value);\n        }\n        get has_evm_root() {\n            return pb_1.Message.getField(this, 3) != null;\n        }\n        get tx_hash() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoHash, 4);\n        }\n        set tx_hash(value) {\n            pb_1.Message.setOneofWrapperField(this, 4, this.#one_of_decls[2], value);\n        }\n        get has_tx_hash() {\n            return pb_1.Message.getField(this, 4) != null;\n        }\n        get outbound_etx_hash() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoHash, 5);\n        }\n        set outbound_etx_hash(value) {\n            pb_1.Message.setOneofWrapperField(this, 5, this.#one_of_decls[3], value);\n        }\n        get has_outbound_etx_hash() {\n            return pb_1.Message.getField(this, 5) != null;\n        }\n        get etx_rollup_hash() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoHash, 6);\n        }\n        set etx_rollup_hash(value) {\n            pb_1.Message.setOneofWrapperField(this, 6, this.#one_of_decls[4], value);\n        }\n        get has_etx_rollup_hash() {\n            return pb_1.Message.getField(this, 6) != null;\n        }\n        get manifest_hash() {\n            return pb_1.Message.getRepeatedWrapperField(this, dependency_1.common.ProtoHash, 7);\n        }\n        set manifest_hash(value) {\n            pb_1.Message.setRepeatedWrapperField(this, 7, value);\n        }\n        get receipt_hash() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoHash, 8);\n        }\n        set receipt_hash(value) {\n            pb_1.Message.setOneofWrapperField(this, 8, this.#one_of_decls[5], value);\n        }\n        get has_receipt_hash() {\n            return pb_1.Message.getField(this, 8) != null;\n        }\n        get difficulty() {\n            return pb_1.Message.getFieldWithDefault(this, 9, new Uint8Array(0));\n        }\n        set difficulty(value) {\n            pb_1.Message.setOneofField(this, 9, this.#one_of_decls[6], value);\n        }\n        get has_difficulty() {\n            return pb_1.Message.getField(this, 9) != null;\n        }\n        get parent_entropy() {\n            return pb_1.Message.getFieldWithDefault(this, 10, []);\n        }\n        set parent_entropy(value) {\n            pb_1.Message.setField(this, 10, value);\n        }\n        get parent_delta_entropy() {\n            return pb_1.Message.getFieldWithDefault(this, 11, []);\n        }\n        set parent_delta_entropy(value) {\n            pb_1.Message.setField(this, 11, value);\n        }\n        get parent_uncled_delta_entropy() {\n            return pb_1.Message.getFieldWithDefault(this, 12, []);\n        }\n        set parent_uncled_delta_entropy(value) {\n            pb_1.Message.setField(this, 12, value);\n        }\n        get uncled_entropy() {\n            return pb_1.Message.getFieldWithDefault(this, 13, new Uint8Array(0));\n        }\n        set uncled_entropy(value) {\n            pb_1.Message.setOneofField(this, 13, this.#one_of_decls[7], value);\n        }\n        get has_uncled_entropy() {\n            return pb_1.Message.getField(this, 13) != null;\n        }\n        get number() {\n            return pb_1.Message.getFieldWithDefault(this, 14, []);\n        }\n        set number(value) {\n            pb_1.Message.setField(this, 14, value);\n        }\n        get gas_limit() {\n            return pb_1.Message.getFieldWithDefault(this, 15, 0);\n        }\n        set gas_limit(value) {\n            pb_1.Message.setOneofField(this, 15, this.#one_of_decls[8], value);\n        }\n        get has_gas_limit() {\n            return pb_1.Message.getField(this, 15) != null;\n        }\n        get gas_used() {\n            return pb_1.Message.getFieldWithDefault(this, 16, 0);\n        }\n        set gas_used(value) {\n            pb_1.Message.setOneofField(this, 16, this.#one_of_decls[9], value);\n        }\n        get has_gas_used() {\n            return pb_1.Message.getField(this, 16) != null;\n        }\n        get base_fee() {\n            return pb_1.Message.getFieldWithDefault(this, 17, new Uint8Array(0));\n        }\n        set base_fee(value) {\n            pb_1.Message.setOneofField(this, 17, this.#one_of_decls[10], value);\n        }\n        get has_base_fee() {\n            return pb_1.Message.getField(this, 17) != null;\n        }\n        get location() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoLocation, 18);\n        }\n        set location(value) {\n            pb_1.Message.setOneofWrapperField(this, 18, this.#one_of_decls[11], value);\n        }\n        get has_location() {\n            return pb_1.Message.getField(this, 18) != null;\n        }\n        get extra() {\n            return pb_1.Message.getFieldWithDefault(this, 19, new Uint8Array(0));\n        }\n        set extra(value) {\n            pb_1.Message.setOneofField(this, 19, this.#one_of_decls[12], value);\n        }\n        get has_extra() {\n            return pb_1.Message.getField(this, 19) != null;\n        }\n        get mix_hash() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoHash, 20);\n        }\n        set mix_hash(value) {\n            pb_1.Message.setOneofWrapperField(this, 20, this.#one_of_decls[13], value);\n        }\n        get has_mix_hash() {\n            return pb_1.Message.getField(this, 20) != null;\n        }\n        get nonce() {\n            return pb_1.Message.getFieldWithDefault(this, 21, 0);\n        }\n        set nonce(value) {\n            pb_1.Message.setOneofField(this, 21, this.#one_of_decls[14], value);\n        }\n        get has_nonce() {\n            return pb_1.Message.getField(this, 21) != null;\n        }\n        get utxo_root() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoHash, 22);\n        }\n        set utxo_root(value) {\n            pb_1.Message.setOneofWrapperField(this, 22, this.#one_of_decls[15], value);\n        }\n        get has_utxo_root() {\n            return pb_1.Message.getField(this, 22) != null;\n        }\n        get etx_set_root() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoHash, 23);\n        }\n        set etx_set_root(value) {\n            pb_1.Message.setOneofWrapperField(this, 23, this.#one_of_decls[16], value);\n        }\n        get has_etx_set_root() {\n            return pb_1.Message.getField(this, 23) != null;\n        }\n        get efficiency_score() {\n            return pb_1.Message.getFieldWithDefault(this, 24, 0);\n        }\n        set efficiency_score(value) {\n            pb_1.Message.setOneofField(this, 24, this.#one_of_decls[17], value);\n        }\n        get has_efficiency_score() {\n            return pb_1.Message.getField(this, 24) != null;\n        }\n        get threshold_count() {\n            return pb_1.Message.getFieldWithDefault(this, 25, 0);\n        }\n        set threshold_count(value) {\n            pb_1.Message.setOneofField(this, 25, this.#one_of_decls[18], value);\n        }\n        get has_threshold_count() {\n            return pb_1.Message.getField(this, 25) != null;\n        }\n        get expansion_number() {\n            return pb_1.Message.getFieldWithDefault(this, 26, 0);\n        }\n        set expansion_number(value) {\n            pb_1.Message.setOneofField(this, 26, this.#one_of_decls[19], value);\n        }\n        get has_expansion_number() {\n            return pb_1.Message.getField(this, 26) != null;\n        }\n        get etx_eligible_slices() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoHash, 27);\n        }\n        set etx_eligible_slices(value) {\n            pb_1.Message.setOneofWrapperField(this, 27, this.#one_of_decls[20], value);\n        }\n        get has_etx_eligible_slices() {\n            return pb_1.Message.getField(this, 27) != null;\n        }\n        get prime_terminus_hash() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoHash, 28);\n        }\n        set prime_terminus_hash(value) {\n            pb_1.Message.setOneofWrapperField(this, 28, this.#one_of_decls[21], value);\n        }\n        get has_prime_terminus_hash() {\n            return pb_1.Message.getField(this, 28) != null;\n        }\n        get interlink_root_hash() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoHash, 29);\n        }\n        set interlink_root_hash(value) {\n            pb_1.Message.setOneofWrapperField(this, 29, this.#one_of_decls[22], value);\n        }\n        get has_interlink_root_hash() {\n            return pb_1.Message.getField(this, 29) != null;\n        }\n        get state_limit() {\n            return pb_1.Message.getFieldWithDefault(this, 30, 0);\n        }\n        set state_limit(value) {\n            pb_1.Message.setOneofField(this, 30, this.#one_of_decls[23], value);\n        }\n        get has_state_limit() {\n            return pb_1.Message.getField(this, 30) != null;\n        }\n        get state_used() {\n            return pb_1.Message.getFieldWithDefault(this, 31, 0);\n        }\n        set state_used(value) {\n            pb_1.Message.setOneofField(this, 31, this.#one_of_decls[24], value);\n        }\n        get has_state_used() {\n            return pb_1.Message.getField(this, 31) != null;\n        }\n        get quai_state_size() {\n            return pb_1.Message.getFieldWithDefault(this, 32, new Uint8Array(0));\n        }\n        set quai_state_size(value) {\n            pb_1.Message.setOneofField(this, 32, this.#one_of_decls[25], value);\n        }\n        get has_quai_state_size() {\n            return pb_1.Message.getField(this, 32) != null;\n        }\n        get secondary_coinbase() {\n            return pb_1.Message.getFieldWithDefault(this, 33, new Uint8Array(0));\n        }\n        set secondary_coinbase(value) {\n            pb_1.Message.setOneofField(this, 33, this.#one_of_decls[26], value);\n        }\n        get has_secondary_coinbase() {\n            return pb_1.Message.getField(this, 33) != null;\n        }\n        get exchange_rate() {\n            return pb_1.Message.getFieldWithDefault(this, 34, new Uint8Array(0));\n        }\n        set exchange_rate(value) {\n            pb_1.Message.setOneofField(this, 34, this.#one_of_decls[27], value);\n        }\n        get has_exchange_rate() {\n            return pb_1.Message.getField(this, 34) != null;\n        }\n        get quai_to_qi() {\n            return pb_1.Message.getFieldWithDefault(this, 35, new Uint8Array(0));\n        }\n        set quai_to_qi(value) {\n            pb_1.Message.setOneofField(this, 35, this.#one_of_decls[28], value);\n        }\n        get has_quai_to_qi() {\n            return pb_1.Message.getField(this, 35) != null;\n        }\n        get qi_to_quai() {\n            return pb_1.Message.getFieldWithDefault(this, 36, new Uint8Array(0));\n        }\n        set qi_to_quai(value) {\n            pb_1.Message.setOneofField(this, 36, this.#one_of_decls[29], value);\n        }\n        get has_qi_to_quai() {\n            return pb_1.Message.getField(this, 36) != null;\n        }\n        get _uncle_hash() {\n            const cases = {\n                0: \"none\",\n                2: \"uncle_hash\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        get _evm_root() {\n            const cases = {\n                0: \"none\",\n                3: \"evm_root\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [3])];\n        }\n        get _tx_hash() {\n            const cases = {\n                0: \"none\",\n                4: \"tx_hash\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [4])];\n        }\n        get _outbound_etx_hash() {\n            const cases = {\n                0: \"none\",\n                5: \"outbound_etx_hash\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [5])];\n        }\n        get _etx_rollup_hash() {\n            const cases = {\n                0: \"none\",\n                6: \"etx_rollup_hash\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [6])];\n        }\n        get _receipt_hash() {\n            const cases = {\n                0: \"none\",\n                8: \"receipt_hash\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [8])];\n        }\n        get _difficulty() {\n            const cases = {\n                0: \"none\",\n                9: \"difficulty\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [9])];\n        }\n        get _uncled_entropy() {\n            const cases = {\n                0: \"none\",\n                13: \"uncled_entropy\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [13])];\n        }\n        get _gas_limit() {\n            const cases = {\n                0: \"none\",\n                15: \"gas_limit\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [15])];\n        }\n        get _gas_used() {\n            const cases = {\n                0: \"none\",\n                16: \"gas_used\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [16])];\n        }\n        get _base_fee() {\n            const cases = {\n                0: \"none\",\n                17: \"base_fee\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [17])];\n        }\n        get _location() {\n            const cases = {\n                0: \"none\",\n                18: \"location\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [18])];\n        }\n        get _extra() {\n            const cases = {\n                0: \"none\",\n                19: \"extra\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [19])];\n        }\n        get _mix_hash() {\n            const cases = {\n                0: \"none\",\n                20: \"mix_hash\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [20])];\n        }\n        get _nonce() {\n            const cases = {\n                0: \"none\",\n                21: \"nonce\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [21])];\n        }\n        get _utxo_root() {\n            const cases = {\n                0: \"none\",\n                22: \"utxo_root\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [22])];\n        }\n        get _etx_set_root() {\n            const cases = {\n                0: \"none\",\n                23: \"etx_set_root\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [23])];\n        }\n        get _efficiency_score() {\n            const cases = {\n                0: \"none\",\n                24: \"efficiency_score\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [24])];\n        }\n        get _threshold_count() {\n            const cases = {\n                0: \"none\",\n                25: \"threshold_count\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [25])];\n        }\n        get _expansion_number() {\n            const cases = {\n                0: \"none\",\n                26: \"expansion_number\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [26])];\n        }\n        get _etx_eligible_slices() {\n            const cases = {\n                0: \"none\",\n                27: \"etx_eligible_slices\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [27])];\n        }\n        get _prime_terminus_hash() {\n            const cases = {\n                0: \"none\",\n                28: \"prime_terminus_hash\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [28])];\n        }\n        get _interlink_root_hash() {\n            const cases = {\n                0: \"none\",\n                29: \"interlink_root_hash\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [29])];\n        }\n        get _state_limit() {\n            const cases = {\n                0: \"none\",\n                30: \"state_limit\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [30])];\n        }\n        get _state_used() {\n            const cases = {\n                0: \"none\",\n                31: \"state_used\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [31])];\n        }\n        get _quai_state_size() {\n            const cases = {\n                0: \"none\",\n                32: \"quai_state_size\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [32])];\n        }\n        get _secondary_coinbase() {\n            const cases = {\n                0: \"none\",\n                33: \"secondary_coinbase\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [33])];\n        }\n        get _exchange_rate() {\n            const cases = {\n                0: \"none\",\n                34: \"exchange_rate\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [34])];\n        }\n        get _quai_to_qi() {\n            const cases = {\n                0: \"none\",\n                35: \"quai_to_qi\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [35])];\n        }\n        get _qi_to_quai() {\n            const cases = {\n                0: \"none\",\n                36: \"qi_to_quai\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [36])];\n        }\n        static fromObject(data) {\n            const message = new ProtoHeader({});\n            if (data.parent_hash != null) {\n                message.parent_hash = data.parent_hash.map(item => dependency_1.common.ProtoHash.fromObject(item));\n            }\n            if (data.uncle_hash != null) {\n                message.uncle_hash = dependency_1.common.ProtoHash.fromObject(data.uncle_hash);\n            }\n            if (data.evm_root != null) {\n                message.evm_root = dependency_1.common.ProtoHash.fromObject(data.evm_root);\n            }\n            if (data.tx_hash != null) {\n                message.tx_hash = dependency_1.common.ProtoHash.fromObject(data.tx_hash);\n            }\n            if (data.outbound_etx_hash != null) {\n                message.outbound_etx_hash = dependency_1.common.ProtoHash.fromObject(data.outbound_etx_hash);\n            }\n            if (data.etx_rollup_hash != null) {\n                message.etx_rollup_hash = dependency_1.common.ProtoHash.fromObject(data.etx_rollup_hash);\n            }\n            if (data.manifest_hash != null) {\n                message.manifest_hash = data.manifest_hash.map(item => dependency_1.common.ProtoHash.fromObject(item));\n            }\n            if (data.receipt_hash != null) {\n                message.receipt_hash = dependency_1.common.ProtoHash.fromObject(data.receipt_hash);\n            }\n            if (data.difficulty != null) {\n                message.difficulty = data.difficulty;\n            }\n            if (data.parent_entropy != null) {\n                message.parent_entropy = data.parent_entropy;\n            }\n            if (data.parent_delta_entropy != null) {\n                message.parent_delta_entropy = data.parent_delta_entropy;\n            }\n            if (data.parent_uncled_delta_entropy != null) {\n                message.parent_uncled_delta_entropy = data.parent_uncled_delta_entropy;\n            }\n            if (data.uncled_entropy != null) {\n                message.uncled_entropy = data.uncled_entropy;\n            }\n            if (data.number != null) {\n                message.number = data.number;\n            }\n            if (data.gas_limit != null) {\n                message.gas_limit = data.gas_limit;\n            }\n            if (data.gas_used != null) {\n                message.gas_used = data.gas_used;\n            }\n            if (data.base_fee != null) {\n                message.base_fee = data.base_fee;\n            }\n            if (data.location != null) {\n                message.location = dependency_1.common.ProtoLocation.fromObject(data.location);\n            }\n            if (data.extra != null) {\n                message.extra = data.extra;\n            }\n            if (data.mix_hash != null) {\n                message.mix_hash = dependency_1.common.ProtoHash.fromObject(data.mix_hash);\n            }\n            if (data.nonce != null) {\n                message.nonce = data.nonce;\n            }\n            if (data.utxo_root != null) {\n                message.utxo_root = dependency_1.common.ProtoHash.fromObject(data.utxo_root);\n            }\n            if (data.etx_set_root != null) {\n                message.etx_set_root = dependency_1.common.ProtoHash.fromObject(data.etx_set_root);\n            }\n            if (data.efficiency_score != null) {\n                message.efficiency_score = data.efficiency_score;\n            }\n            if (data.threshold_count != null) {\n                message.threshold_count = data.threshold_count;\n            }\n            if (data.expansion_number != null) {\n                message.expansion_number = data.expansion_number;\n            }\n            if (data.etx_eligible_slices != null) {\n                message.etx_eligible_slices = dependency_1.common.ProtoHash.fromObject(data.etx_eligible_slices);\n            }\n            if (data.prime_terminus_hash != null) {\n                message.prime_terminus_hash = dependency_1.common.ProtoHash.fromObject(data.prime_terminus_hash);\n            }\n            if (data.interlink_root_hash != null) {\n                message.interlink_root_hash = dependency_1.common.ProtoHash.fromObject(data.interlink_root_hash);\n            }\n            if (data.state_limit != null) {\n                message.state_limit = data.state_limit;\n            }\n            if (data.state_used != null) {\n                message.state_used = data.state_used;\n            }\n            if (data.quai_state_size != null) {\n                message.quai_state_size = data.quai_state_size;\n            }\n            if (data.secondary_coinbase != null) {\n                message.secondary_coinbase = data.secondary_coinbase;\n            }\n            if (data.exchange_rate != null) {\n                message.exchange_rate = data.exchange_rate;\n            }\n            if (data.quai_to_qi != null) {\n                message.quai_to_qi = data.quai_to_qi;\n            }\n            if (data.qi_to_quai != null) {\n                message.qi_to_quai = data.qi_to_quai;\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.parent_hash != null) {\n                data.parent_hash = this.parent_hash.map((item) => item.toObject());\n            }\n            if (this.uncle_hash != null) {\n                data.uncle_hash = this.uncle_hash.toObject();\n            }\n            if (this.evm_root != null) {\n                data.evm_root = this.evm_root.toObject();\n            }\n            if (this.tx_hash != null) {\n                data.tx_hash = this.tx_hash.toObject();\n            }\n            if (this.outbound_etx_hash != null) {\n                data.outbound_etx_hash = this.outbound_etx_hash.toObject();\n            }\n            if (this.etx_rollup_hash != null) {\n                data.etx_rollup_hash = this.etx_rollup_hash.toObject();\n            }\n            if (this.manifest_hash != null) {\n                data.manifest_hash = this.manifest_hash.map((item) => item.toObject());\n            }\n            if (this.receipt_hash != null) {\n                data.receipt_hash = this.receipt_hash.toObject();\n            }\n            if (this.difficulty != null) {\n                data.difficulty = this.difficulty;\n            }\n            if (this.parent_entropy != null) {\n                data.parent_entropy = this.parent_entropy;\n            }\n            if (this.parent_delta_entropy != null) {\n                data.parent_delta_entropy = this.parent_delta_entropy;\n            }\n            if (this.parent_uncled_delta_entropy != null) {\n                data.parent_uncled_delta_entropy = this.parent_uncled_delta_entropy;\n            }\n            if (this.uncled_entropy != null) {\n                data.uncled_entropy = this.uncled_entropy;\n            }\n            if (this.number != null) {\n                data.number = this.number;\n            }\n            if (this.gas_limit != null) {\n                data.gas_limit = this.gas_limit;\n            }\n            if (this.gas_used != null) {\n                data.gas_used = this.gas_used;\n            }\n            if (this.base_fee != null) {\n                data.base_fee = this.base_fee;\n            }\n            if (this.location != null) {\n                data.location = this.location.toObject();\n            }\n            if (this.extra != null) {\n                data.extra = this.extra;\n            }\n            if (this.mix_hash != null) {\n                data.mix_hash = this.mix_hash.toObject();\n            }\n            if (this.nonce != null) {\n                data.nonce = this.nonce;\n            }\n            if (this.utxo_root != null) {\n                data.utxo_root = this.utxo_root.toObject();\n            }\n            if (this.etx_set_root != null) {\n                data.etx_set_root = this.etx_set_root.toObject();\n            }\n            if (this.efficiency_score != null) {\n                data.efficiency_score = this.efficiency_score;\n            }\n            if (this.threshold_count != null) {\n                data.threshold_count = this.threshold_count;\n            }\n            if (this.expansion_number != null) {\n                data.expansion_number = this.expansion_number;\n            }\n            if (this.etx_eligible_slices != null) {\n                data.etx_eligible_slices = this.etx_eligible_slices.toObject();\n            }\n            if (this.prime_terminus_hash != null) {\n                data.prime_terminus_hash = this.prime_terminus_hash.toObject();\n            }\n            if (this.interlink_root_hash != null) {\n                data.interlink_root_hash = this.interlink_root_hash.toObject();\n            }\n            if (this.state_limit != null) {\n                data.state_limit = this.state_limit;\n            }\n            if (this.state_used != null) {\n                data.state_used = this.state_used;\n            }\n            if (this.quai_state_size != null) {\n                data.quai_state_size = this.quai_state_size;\n            }\n            if (this.secondary_coinbase != null) {\n                data.secondary_coinbase = this.secondary_coinbase;\n            }\n            if (this.exchange_rate != null) {\n                data.exchange_rate = this.exchange_rate;\n            }\n            if (this.quai_to_qi != null) {\n                data.quai_to_qi = this.quai_to_qi;\n            }\n            if (this.qi_to_quai != null) {\n                data.qi_to_quai = this.qi_to_quai;\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.parent_hash.length)\n                writer.writeRepeatedMessage(1, this.parent_hash, (item) => item.serialize(writer));\n            if (this.has_uncle_hash)\n                writer.writeMessage(2, this.uncle_hash, () => this.uncle_hash.serialize(writer));\n            if (this.has_evm_root)\n                writer.writeMessage(3, this.evm_root, () => this.evm_root.serialize(writer));\n            if (this.has_tx_hash)\n                writer.writeMessage(4, this.tx_hash, () => this.tx_hash.serialize(writer));\n            if (this.has_outbound_etx_hash)\n                writer.writeMessage(5, this.outbound_etx_hash, () => this.outbound_etx_hash.serialize(writer));\n            if (this.has_etx_rollup_hash)\n                writer.writeMessage(6, this.etx_rollup_hash, () => this.etx_rollup_hash.serialize(writer));\n            if (this.manifest_hash.length)\n                writer.writeRepeatedMessage(7, this.manifest_hash, (item) => item.serialize(writer));\n            if (this.has_receipt_hash)\n                writer.writeMessage(8, this.receipt_hash, () => this.receipt_hash.serialize(writer));\n            if (this.has_difficulty)\n                writer.writeBytes(9, this.difficulty);\n            if (this.parent_entropy.length)\n                writer.writeRepeatedBytes(10, this.parent_entropy);\n            if (this.parent_delta_entropy.length)\n                writer.writeRepeatedBytes(11, this.parent_delta_entropy);\n            if (this.parent_uncled_delta_entropy.length)\n                writer.writeRepeatedBytes(12, this.parent_uncled_delta_entropy);\n            if (this.has_uncled_entropy)\n                writer.writeBytes(13, this.uncled_entropy);\n            if (this.number.length)\n                writer.writeRepeatedBytes(14, this.number);\n            if (this.has_gas_limit)\n                writer.writeUint64(15, this.gas_limit);\n            if (this.has_gas_used)\n                writer.writeUint64(16, this.gas_used);\n            if (this.has_base_fee)\n                writer.writeBytes(17, this.base_fee);\n            if (this.has_location)\n                writer.writeMessage(18, this.location, () => this.location.serialize(writer));\n            if (this.has_extra)\n                writer.writeBytes(19, this.extra);\n            if (this.has_mix_hash)\n                writer.writeMessage(20, this.mix_hash, () => this.mix_hash.serialize(writer));\n            if (this.has_nonce)\n                writer.writeUint64(21, this.nonce);\n            if (this.has_utxo_root)\n                writer.writeMessage(22, this.utxo_root, () => this.utxo_root.serialize(writer));\n            if (this.has_etx_set_root)\n                writer.writeMessage(23, this.etx_set_root, () => this.etx_set_root.serialize(writer));\n            if (this.has_efficiency_score)\n                writer.writeUint64(24, this.efficiency_score);\n            if (this.has_threshold_count)\n                writer.writeUint64(25, this.threshold_count);\n            if (this.has_expansion_number)\n                writer.writeUint64(26, this.expansion_number);\n            if (this.has_etx_eligible_slices)\n                writer.writeMessage(27, this.etx_eligible_slices, () => this.etx_eligible_slices.serialize(writer));\n            if (this.has_prime_terminus_hash)\n                writer.writeMessage(28, this.prime_terminus_hash, () => this.prime_terminus_hash.serialize(writer));\n            if (this.has_interlink_root_hash)\n                writer.writeMessage(29, this.interlink_root_hash, () => this.interlink_root_hash.serialize(writer));\n            if (this.has_state_limit)\n                writer.writeUint64(30, this.state_limit);\n            if (this.has_state_used)\n                writer.writeUint64(31, this.state_used);\n            if (this.has_quai_state_size)\n                writer.writeBytes(32, this.quai_state_size);\n            if (this.has_secondary_coinbase)\n                writer.writeBytes(33, this.secondary_coinbase);\n            if (this.has_exchange_rate)\n                writer.writeBytes(34, this.exchange_rate);\n            if (this.has_quai_to_qi)\n                writer.writeBytes(35, this.quai_to_qi);\n            if (this.has_qi_to_quai)\n                writer.writeBytes(36, this.qi_to_quai);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoHeader();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.parent_hash, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_1.common.ProtoHash.deserialize(reader), dependency_1.common.ProtoHash));\n                        break;\n                    case 2:\n                        reader.readMessage(message.uncle_hash, () => message.uncle_hash = dependency_1.common.ProtoHash.deserialize(reader));\n                        break;\n                    case 3:\n                        reader.readMessage(message.evm_root, () => message.evm_root = dependency_1.common.ProtoHash.deserialize(reader));\n                        break;\n                    case 4:\n                        reader.readMessage(message.tx_hash, () => message.tx_hash = dependency_1.common.ProtoHash.deserialize(reader));\n                        break;\n                    case 5:\n                        reader.readMessage(message.outbound_etx_hash, () => message.outbound_etx_hash = dependency_1.common.ProtoHash.deserialize(reader));\n                        break;\n                    case 6:\n                        reader.readMessage(message.etx_rollup_hash, () => message.etx_rollup_hash = dependency_1.common.ProtoHash.deserialize(reader));\n                        break;\n                    case 7:\n                        reader.readMessage(message.manifest_hash, () => pb_1.Message.addToRepeatedWrapperField(message, 7, dependency_1.common.ProtoHash.deserialize(reader), dependency_1.common.ProtoHash));\n                        break;\n                    case 8:\n                        reader.readMessage(message.receipt_hash, () => message.receipt_hash = dependency_1.common.ProtoHash.deserialize(reader));\n                        break;\n                    case 9:\n                        message.difficulty = reader.readBytes();\n                        break;\n                    case 10:\n                        pb_1.Message.addToRepeatedField(message, 10, reader.readBytes());\n                        break;\n                    case 11:\n                        pb_1.Message.addToRepeatedField(message, 11, reader.readBytes());\n                        break;\n                    case 12:\n                        pb_1.Message.addToRepeatedField(message, 12, reader.readBytes());\n                        break;\n                    case 13:\n                        message.uncled_entropy = reader.readBytes();\n                        break;\n                    case 14:\n                        pb_1.Message.addToRepeatedField(message, 14, reader.readBytes());\n                        break;\n                    case 15:\n                        message.gas_limit = reader.readUint64();\n                        break;\n                    case 16:\n                        message.gas_used = reader.readUint64();\n                        break;\n                    case 17:\n                        message.base_fee = reader.readBytes();\n                        break;\n                    case 18:\n                        reader.readMessage(message.location, () => message.location = dependency_1.common.ProtoLocation.deserialize(reader));\n                        break;\n                    case 19:\n                        message.extra = reader.readBytes();\n                        break;\n                    case 20:\n                        reader.readMessage(message.mix_hash, () => message.mix_hash = dependency_1.common.ProtoHash.deserialize(reader));\n                        break;\n                    case 21:\n                        message.nonce = reader.readUint64();\n                        break;\n                    case 22:\n                        reader.readMessage(message.utxo_root, () => message.utxo_root = dependency_1.common.ProtoHash.deserialize(reader));\n                        break;\n                    case 23:\n                        reader.readMessage(message.etx_set_root, () => message.etx_set_root = dependency_1.common.ProtoHash.deserialize(reader));\n                        break;\n                    case 24:\n                        message.efficiency_score = reader.readUint64();\n                        break;\n                    case 25:\n                        message.threshold_count = reader.readUint64();\n                        break;\n                    case 26:\n                        message.expansion_number = reader.readUint64();\n                        break;\n                    case 27:\n                        reader.readMessage(message.etx_eligible_slices, () => message.etx_eligible_slices = dependency_1.common.ProtoHash.deserialize(reader));\n                        break;\n                    case 28:\n                        reader.readMessage(message.prime_terminus_hash, () => message.prime_terminus_hash = dependency_1.common.ProtoHash.deserialize(reader));\n                        break;\n                    case 29:\n                        reader.readMessage(message.interlink_root_hash, () => message.interlink_root_hash = dependency_1.common.ProtoHash.deserialize(reader));\n                        break;\n                    case 30:\n                        message.state_limit = reader.readUint64();\n                        break;\n                    case 31:\n                        message.state_used = reader.readUint64();\n                        break;\n                    case 32:\n                        message.quai_state_size = reader.readBytes();\n                        break;\n                    case 33:\n                        message.secondary_coinbase = reader.readBytes();\n                        break;\n                    case 34:\n                        message.exchange_rate = reader.readBytes();\n                        break;\n                    case 35:\n                        message.quai_to_qi = reader.readBytes();\n                        break;\n                    case 36:\n                        message.qi_to_quai = reader.readBytes();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoHeader.deserialize(bytes);\n        }\n    }\n    block.ProtoHeader = ProtoHeader;\n    class ProtoTransaction extends pb_1.Message {\n        #one_of_decls = [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"type\" in data && data.type != undefined) {\n                    this.type = data.type;\n                }\n                if (\"to\" in data && data.to != undefined) {\n                    this.to = data.to;\n                }\n                if (\"nonce\" in data && data.nonce != undefined) {\n                    this.nonce = data.nonce;\n                }\n                if (\"value\" in data && data.value != undefined) {\n                    this.value = data.value;\n                }\n                if (\"gas\" in data && data.gas != undefined) {\n                    this.gas = data.gas;\n                }\n                if (\"data\" in data && data.data != undefined) {\n                    this.data = data.data;\n                }\n                if (\"chain_id\" in data && data.chain_id != undefined) {\n                    this.chain_id = data.chain_id;\n                }\n                if (\"miner_tip\" in data && data.miner_tip != undefined) {\n                    this.miner_tip = data.miner_tip;\n                }\n                if (\"gas_price\" in data && data.gas_price != undefined) {\n                    this.gas_price = data.gas_price;\n                }\n                if (\"access_list\" in data && data.access_list != undefined) {\n                    this.access_list = data.access_list;\n                }\n                if (\"v\" in data && data.v != undefined) {\n                    this.v = data.v;\n                }\n                if (\"r\" in data && data.r != undefined) {\n                    this.r = data.r;\n                }\n                if (\"s\" in data && data.s != undefined) {\n                    this.s = data.s;\n                }\n                if (\"originating_tx_hash\" in data && data.originating_tx_hash != undefined) {\n                    this.originating_tx_hash = data.originating_tx_hash;\n                }\n                if (\"tx_ins\" in data && data.tx_ins != undefined) {\n                    this.tx_ins = data.tx_ins;\n                }\n                if (\"tx_outs\" in data && data.tx_outs != undefined) {\n                    this.tx_outs = data.tx_outs;\n                }\n                if (\"signature\" in data && data.signature != undefined) {\n                    this.signature = data.signature;\n                }\n                if (\"parent_hash\" in data && data.parent_hash != undefined) {\n                    this.parent_hash = data.parent_hash;\n                }\n                if (\"mix_hash\" in data && data.mix_hash != undefined) {\n                    this.mix_hash = data.mix_hash;\n                }\n            }\n        }\n        get type() {\n            return pb_1.Message.getFieldWithDefault(this, 1, 0);\n        }\n        set type(value) {\n            pb_1.Message.setOneofField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_type() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get to() {\n            return pb_1.Message.getFieldWithDefault(this, 2, new Uint8Array(0));\n        }\n        set to(value) {\n            pb_1.Message.setOneofField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_to() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get nonce() {\n            return pb_1.Message.getFieldWithDefault(this, 3, 0);\n        }\n        set nonce(value) {\n            pb_1.Message.setOneofField(this, 3, this.#one_of_decls[2], value);\n        }\n        get has_nonce() {\n            return pb_1.Message.getField(this, 3) != null;\n        }\n        get value() {\n            return pb_1.Message.getFieldWithDefault(this, 4, new Uint8Array(0));\n        }\n        set value(value) {\n            pb_1.Message.setOneofField(this, 4, this.#one_of_decls[3], value);\n        }\n        get has_value() {\n            return pb_1.Message.getField(this, 4) != null;\n        }\n        get gas() {\n            return pb_1.Message.getFieldWithDefault(this, 5, 0);\n        }\n        set gas(value) {\n            pb_1.Message.setOneofField(this, 5, this.#one_of_decls[4], value);\n        }\n        get has_gas() {\n            return pb_1.Message.getField(this, 5) != null;\n        }\n        get data() {\n            return pb_1.Message.getFieldWithDefault(this, 6, new Uint8Array(0));\n        }\n        set data(value) {\n            pb_1.Message.setOneofField(this, 6, this.#one_of_decls[5], value);\n        }\n        get has_data() {\n            return pb_1.Message.getField(this, 6) != null;\n        }\n        get chain_id() {\n            return pb_1.Message.getFieldWithDefault(this, 7, new Uint8Array(0));\n        }\n        set chain_id(value) {\n            pb_1.Message.setOneofField(this, 7, this.#one_of_decls[6], value);\n        }\n        get has_chain_id() {\n            return pb_1.Message.getField(this, 7) != null;\n        }\n        get miner_tip() {\n            return pb_1.Message.getFieldWithDefault(this, 8, new Uint8Array(0));\n        }\n        set miner_tip(value) {\n            pb_1.Message.setOneofField(this, 8, this.#one_of_decls[7], value);\n        }\n        get has_miner_tip() {\n            return pb_1.Message.getField(this, 8) != null;\n        }\n        get gas_price() {\n            return pb_1.Message.getFieldWithDefault(this, 9, new Uint8Array(0));\n        }\n        set gas_price(value) {\n            pb_1.Message.setOneofField(this, 9, this.#one_of_decls[8], value);\n        }\n        get has_gas_price() {\n            return pb_1.Message.getField(this, 9) != null;\n        }\n        get access_list() {\n            return pb_1.Message.getWrapperField(this, ProtoAccessList, 10);\n        }\n        set access_list(value) {\n            pb_1.Message.setOneofWrapperField(this, 10, this.#one_of_decls[9], value);\n        }\n        get has_access_list() {\n            return pb_1.Message.getField(this, 10) != null;\n        }\n        get v() {\n            return pb_1.Message.getFieldWithDefault(this, 11, new Uint8Array(0));\n        }\n        set v(value) {\n            pb_1.Message.setOneofField(this, 11, this.#one_of_decls[10], value);\n        }\n        get has_v() {\n            return pb_1.Message.getField(this, 11) != null;\n        }\n        get r() {\n            return pb_1.Message.getFieldWithDefault(this, 12, new Uint8Array(0));\n        }\n        set r(value) {\n            pb_1.Message.setOneofField(this, 12, this.#one_of_decls[11], value);\n        }\n        get has_r() {\n            return pb_1.Message.getField(this, 12) != null;\n        }\n        get s() {\n            return pb_1.Message.getFieldWithDefault(this, 13, new Uint8Array(0));\n        }\n        set s(value) {\n            pb_1.Message.setOneofField(this, 13, this.#one_of_decls[12], value);\n        }\n        get has_s() {\n            return pb_1.Message.getField(this, 13) != null;\n        }\n        get originating_tx_hash() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoHash, 14);\n        }\n        set originating_tx_hash(value) {\n            pb_1.Message.setOneofWrapperField(this, 14, this.#one_of_decls[13], value);\n        }\n        get has_originating_tx_hash() {\n            return pb_1.Message.getField(this, 14) != null;\n        }\n        get tx_ins() {\n            return pb_1.Message.getWrapperField(this, ProtoTxIns, 15);\n        }\n        set tx_ins(value) {\n            pb_1.Message.setOneofWrapperField(this, 15, this.#one_of_decls[14], value);\n        }\n        get has_tx_ins() {\n            return pb_1.Message.getField(this, 15) != null;\n        }\n        get tx_outs() {\n            return pb_1.Message.getWrapperField(this, ProtoTxOuts, 16);\n        }\n        set tx_outs(value) {\n            pb_1.Message.setOneofWrapperField(this, 16, this.#one_of_decls[15], value);\n        }\n        get has_tx_outs() {\n            return pb_1.Message.getField(this, 16) != null;\n        }\n        get signature() {\n            return pb_1.Message.getFieldWithDefault(this, 17, new Uint8Array(0));\n        }\n        set signature(value) {\n            pb_1.Message.setOneofField(this, 17, this.#one_of_decls[16], value);\n        }\n        get has_signature() {\n            return pb_1.Message.getField(this, 17) != null;\n        }\n        get parent_hash() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoHash, 18);\n        }\n        set parent_hash(value) {\n            pb_1.Message.setOneofWrapperField(this, 18, this.#one_of_decls[17], value);\n        }\n        get has_parent_hash() {\n            return pb_1.Message.getField(this, 18) != null;\n        }\n        get mix_hash() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoHash, 19);\n        }\n        set mix_hash(value) {\n            pb_1.Message.setOneofWrapperField(this, 19, this.#one_of_decls[18], value);\n        }\n        get has_mix_hash() {\n            return pb_1.Message.getField(this, 19) != null;\n        }\n        get _type() {\n            const cases = {\n                0: \"none\",\n                1: \"type\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _to() {\n            const cases = {\n                0: \"none\",\n                2: \"to\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        get _nonce() {\n            const cases = {\n                0: \"none\",\n                3: \"nonce\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [3])];\n        }\n        get _value() {\n            const cases = {\n                0: \"none\",\n                4: \"value\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [4])];\n        }\n        get _gas() {\n            const cases = {\n                0: \"none\",\n                5: \"gas\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [5])];\n        }\n        get _data() {\n            const cases = {\n                0: \"none\",\n                6: \"data\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [6])];\n        }\n        get _chain_id() {\n            const cases = {\n                0: \"none\",\n                7: \"chain_id\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [7])];\n        }\n        get _miner_tip() {\n            const cases = {\n                0: \"none\",\n                8: \"miner_tip\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [8])];\n        }\n        get _gas_price() {\n            const cases = {\n                0: \"none\",\n                9: \"gas_price\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [9])];\n        }\n        get _access_list() {\n            const cases = {\n                0: \"none\",\n                10: \"access_list\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [10])];\n        }\n        get _v() {\n            const cases = {\n                0: \"none\",\n                11: \"v\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [11])];\n        }\n        get _r() {\n            const cases = {\n                0: \"none\",\n                12: \"r\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [12])];\n        }\n        get _s() {\n            const cases = {\n                0: \"none\",\n                13: \"s\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [13])];\n        }\n        get _originating_tx_hash() {\n            const cases = {\n                0: \"none\",\n                14: \"originating_tx_hash\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [14])];\n        }\n        get _tx_ins() {\n            const cases = {\n                0: \"none\",\n                15: \"tx_ins\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [15])];\n        }\n        get _tx_outs() {\n            const cases = {\n                0: \"none\",\n                16: \"tx_outs\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [16])];\n        }\n        get _signature() {\n            const cases = {\n                0: \"none\",\n                17: \"signature\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [17])];\n        }\n        get _parent_hash() {\n            const cases = {\n                0: \"none\",\n                18: \"parent_hash\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [18])];\n        }\n        get _mix_hash() {\n            const cases = {\n                0: \"none\",\n                19: \"mix_hash\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [19])];\n        }\n        static fromObject(data) {\n            const message = new ProtoTransaction({});\n            if (data.type != null) {\n                message.type = data.type;\n            }\n            if (data.to != null) {\n                message.to = data.to;\n            }\n            if (data.nonce != null) {\n                message.nonce = data.nonce;\n            }\n            if (data.value != null) {\n                message.value = data.value;\n            }\n            if (data.gas != null) {\n                message.gas = data.gas;\n            }\n            if (data.data != null) {\n                message.data = data.data;\n            }\n            if (data.chain_id != null) {\n                message.chain_id = data.chain_id;\n            }\n            if (data.miner_tip != null) {\n                message.miner_tip = data.miner_tip;\n            }\n            if (data.gas_price != null) {\n                message.gas_price = data.gas_price;\n            }\n            if (data.access_list != null) {\n                message.access_list = ProtoAccessList.fromObject(data.access_list);\n            }\n            if (data.v != null) {\n                message.v = data.v;\n            }\n            if (data.r != null) {\n                message.r = data.r;\n            }\n            if (data.s != null) {\n                message.s = data.s;\n            }\n            if (data.originating_tx_hash != null) {\n                message.originating_tx_hash = dependency_1.common.ProtoHash.fromObject(data.originating_tx_hash);\n            }\n            if (data.tx_ins != null) {\n                message.tx_ins = ProtoTxIns.fromObject(data.tx_ins);\n            }\n            if (data.tx_outs != null) {\n                message.tx_outs = ProtoTxOuts.fromObject(data.tx_outs);\n            }\n            if (data.signature != null) {\n                message.signature = data.signature;\n            }\n            if (data.parent_hash != null) {\n                message.parent_hash = dependency_1.common.ProtoHash.fromObject(data.parent_hash);\n            }\n            if (data.mix_hash != null) {\n                message.mix_hash = dependency_1.common.ProtoHash.fromObject(data.mix_hash);\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.type != null) {\n                data.type = this.type;\n            }\n            if (this.to != null) {\n                data.to = this.to;\n            }\n            if (this.nonce != null) {\n                data.nonce = this.nonce;\n            }\n            if (this.value != null) {\n                data.value = this.value;\n            }\n            if (this.gas != null) {\n                data.gas = this.gas;\n            }\n            if (this.data != null) {\n                data.data = this.data;\n            }\n            if (this.chain_id != null) {\n                data.chain_id = this.chain_id;\n            }\n            if (this.miner_tip != null) {\n                data.miner_tip = this.miner_tip;\n            }\n            if (this.gas_price != null) {\n                data.gas_price = this.gas_price;\n            }\n            if (this.access_list != null) {\n                data.access_list = this.access_list.toObject();\n            }\n            if (this.v != null) {\n                data.v = this.v;\n            }\n            if (this.r != null) {\n                data.r = this.r;\n            }\n            if (this.s != null) {\n                data.s = this.s;\n            }\n            if (this.originating_tx_hash != null) {\n                data.originating_tx_hash = this.originating_tx_hash.toObject();\n            }\n            if (this.tx_ins != null) {\n                data.tx_ins = this.tx_ins.toObject();\n            }\n            if (this.tx_outs != null) {\n                data.tx_outs = this.tx_outs.toObject();\n            }\n            if (this.signature != null) {\n                data.signature = this.signature;\n            }\n            if (this.parent_hash != null) {\n                data.parent_hash = this.parent_hash.toObject();\n            }\n            if (this.mix_hash != null) {\n                data.mix_hash = this.mix_hash.toObject();\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_type)\n                writer.writeUint64(1, this.type);\n            if (this.has_to)\n                writer.writeBytes(2, this.to);\n            if (this.has_nonce)\n                writer.writeUint64(3, this.nonce);\n            if (this.has_value)\n                writer.writeBytes(4, this.value);\n            if (this.has_gas)\n                writer.writeUint64(5, this.gas);\n            if (this.has_data)\n                writer.writeBytes(6, this.data);\n            if (this.has_chain_id)\n                writer.writeBytes(7, this.chain_id);\n            if (this.has_miner_tip)\n                writer.writeBytes(8, this.miner_tip);\n            if (this.has_gas_price)\n                writer.writeBytes(9, this.gas_price);\n            if (this.has_access_list)\n                writer.writeMessage(10, this.access_list, () => this.access_list.serialize(writer));\n            if (this.has_v)\n                writer.writeBytes(11, this.v);\n            if (this.has_r)\n                writer.writeBytes(12, this.r);\n            if (this.has_s)\n                writer.writeBytes(13, this.s);\n            if (this.has_originating_tx_hash)\n                writer.writeMessage(14, this.originating_tx_hash, () => this.originating_tx_hash.serialize(writer));\n            if (this.has_tx_ins)\n                writer.writeMessage(15, this.tx_ins, () => this.tx_ins.serialize(writer));\n            if (this.has_tx_outs)\n                writer.writeMessage(16, this.tx_outs, () => this.tx_outs.serialize(writer));\n            if (this.has_signature)\n                writer.writeBytes(17, this.signature);\n            if (this.has_parent_hash)\n                writer.writeMessage(18, this.parent_hash, () => this.parent_hash.serialize(writer));\n            if (this.has_mix_hash)\n                writer.writeMessage(19, this.mix_hash, () => this.mix_hash.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoTransaction();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.type = reader.readUint64();\n                        break;\n                    case 2:\n                        message.to = reader.readBytes();\n                        break;\n                    case 3:\n                        message.nonce = reader.readUint64();\n                        break;\n                    case 4:\n                        message.value = reader.readBytes();\n                        break;\n                    case 5:\n                        message.gas = reader.readUint64();\n                        break;\n                    case 6:\n                        message.data = reader.readBytes();\n                        break;\n                    case 7:\n                        message.chain_id = reader.readBytes();\n                        break;\n                    case 8:\n                        message.miner_tip = reader.readBytes();\n                        break;\n                    case 9:\n                        message.gas_price = reader.readBytes();\n                        break;\n                    case 10:\n                        reader.readMessage(message.access_list, () => message.access_list = ProtoAccessList.deserialize(reader));\n                        break;\n                    case 11:\n                        message.v = reader.readBytes();\n                        break;\n                    case 12:\n                        message.r = reader.readBytes();\n                        break;\n                    case 13:\n                        message.s = reader.readBytes();\n                        break;\n                    case 14:\n                        reader.readMessage(message.originating_tx_hash, () => message.originating_tx_hash = dependency_1.common.ProtoHash.deserialize(reader));\n                        break;\n                    case 15:\n                        reader.readMessage(message.tx_ins, () => message.tx_ins = ProtoTxIns.deserialize(reader));\n                        break;\n                    case 16:\n                        reader.readMessage(message.tx_outs, () => message.tx_outs = ProtoTxOuts.deserialize(reader));\n                        break;\n                    case 17:\n                        message.signature = reader.readBytes();\n                        break;\n                    case 18:\n                        reader.readMessage(message.parent_hash, () => message.parent_hash = dependency_1.common.ProtoHash.deserialize(reader));\n                        break;\n                    case 19:\n                        reader.readMessage(message.mix_hash, () => message.mix_hash = dependency_1.common.ProtoHash.deserialize(reader));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoTransaction.deserialize(bytes);\n        }\n    }\n    block.ProtoTransaction = ProtoTransaction;\n    class ProtoTransactions extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"transactions\" in data && data.transactions != undefined) {\n                    this.transactions = data.transactions;\n                }\n            }\n        }\n        get transactions() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoTransaction, 1);\n        }\n        set transactions(value) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoTransactions({});\n            if (data.transactions != null) {\n                message.transactions = data.transactions.map(item => ProtoTransaction.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.transactions != null) {\n                data.transactions = this.transactions.map((item) => item.toObject());\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.transactions.length)\n                writer.writeRepeatedMessage(1, this.transactions, (item) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoTransactions();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.transactions, () => pb_1.Message.addToRepeatedWrapperField(message, 1, ProtoTransaction.deserialize(reader), ProtoTransaction));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoTransactions.deserialize(bytes);\n        }\n    }\n    block.ProtoTransactions = ProtoTransactions;\n    class ProtoHeaders extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"headers\" in data && data.headers != undefined) {\n                    this.headers = data.headers;\n                }\n            }\n        }\n        get headers() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoHeader, 1);\n        }\n        set headers(value) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoHeaders({});\n            if (data.headers != null) {\n                message.headers = data.headers.map(item => ProtoHeader.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.headers != null) {\n                data.headers = this.headers.map((item) => item.toObject());\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.headers.length)\n                writer.writeRepeatedMessage(1, this.headers, (item) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoHeaders();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.headers, () => pb_1.Message.addToRepeatedWrapperField(message, 1, ProtoHeader.deserialize(reader), ProtoHeader));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoHeaders.deserialize(bytes);\n        }\n    }\n    block.ProtoHeaders = ProtoHeaders;\n    class ProtoManifest extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"manifest\" in data && data.manifest != undefined) {\n                    this.manifest = data.manifest;\n                }\n            }\n        }\n        get manifest() {\n            return pb_1.Message.getRepeatedWrapperField(this, dependency_1.common.ProtoHash, 1);\n        }\n        set manifest(value) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoManifest({});\n            if (data.manifest != null) {\n                message.manifest = data.manifest.map(item => dependency_1.common.ProtoHash.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.manifest != null) {\n                data.manifest = this.manifest.map((item) => item.toObject());\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.manifest.length)\n                writer.writeRepeatedMessage(1, this.manifest, (item) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoManifest();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.manifest, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_1.common.ProtoHash.deserialize(reader), dependency_1.common.ProtoHash));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoManifest.deserialize(bytes);\n        }\n    }\n    block.ProtoManifest = ProtoManifest;\n    class ProtoAccessList extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"access_tuples\" in data && data.access_tuples != undefined) {\n                    this.access_tuples = data.access_tuples;\n                }\n            }\n        }\n        get access_tuples() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoAccessTuple, 1);\n        }\n        set access_tuples(value) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoAccessList({});\n            if (data.access_tuples != null) {\n                message.access_tuples = data.access_tuples.map(item => ProtoAccessTuple.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.access_tuples != null) {\n                data.access_tuples = this.access_tuples.map((item) => item.toObject());\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.access_tuples.length)\n                writer.writeRepeatedMessage(1, this.access_tuples, (item) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoAccessList();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.access_tuples, () => pb_1.Message.addToRepeatedWrapperField(message, 1, ProtoAccessTuple.deserialize(reader), ProtoAccessTuple));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoAccessList.deserialize(bytes);\n        }\n    }\n    block.ProtoAccessList = ProtoAccessList;\n    class ProtoWorkObjectHeader extends pb_1.Message {\n        #one_of_decls = [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12]];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"header_hash\" in data && data.header_hash != undefined) {\n                    this.header_hash = data.header_hash;\n                }\n                if (\"parent_hash\" in data && data.parent_hash != undefined) {\n                    this.parent_hash = data.parent_hash;\n                }\n                if (\"number\" in data && data.number != undefined) {\n                    this.number = data.number;\n                }\n                if (\"difficulty\" in data && data.difficulty != undefined) {\n                    this.difficulty = data.difficulty;\n                }\n                if (\"tx_hash\" in data && data.tx_hash != undefined) {\n                    this.tx_hash = data.tx_hash;\n                }\n                if (\"nonce\" in data && data.nonce != undefined) {\n                    this.nonce = data.nonce;\n                }\n                if (\"location\" in data && data.location != undefined) {\n                    this.location = data.location;\n                }\n                if (\"mix_hash\" in data && data.mix_hash != undefined) {\n                    this.mix_hash = data.mix_hash;\n                }\n                if (\"time\" in data && data.time != undefined) {\n                    this.time = data.time;\n                }\n                if (\"prime_terminus_number\" in data && data.prime_terminus_number != undefined) {\n                    this.prime_terminus_number = data.prime_terminus_number;\n                }\n                if (\"lock\" in data && data.lock != undefined) {\n                    this.lock = data.lock;\n                }\n                if (\"primary_coinbase\" in data && data.primary_coinbase != undefined) {\n                    this.primary_coinbase = data.primary_coinbase;\n                }\n            }\n        }\n        get header_hash() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoHash, 1);\n        }\n        set header_hash(value) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_header_hash() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get parent_hash() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoHash, 2);\n        }\n        set parent_hash(value) {\n            pb_1.Message.setOneofWrapperField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_parent_hash() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get number() {\n            return pb_1.Message.getFieldWithDefault(this, 3, new Uint8Array(0));\n        }\n        set number(value) {\n            pb_1.Message.setOneofField(this, 3, this.#one_of_decls[2], value);\n        }\n        get has_number() {\n            return pb_1.Message.getField(this, 3) != null;\n        }\n        get difficulty() {\n            return pb_1.Message.getFieldWithDefault(this, 4, new Uint8Array(0));\n        }\n        set difficulty(value) {\n            pb_1.Message.setOneofField(this, 4, this.#one_of_decls[3], value);\n        }\n        get has_difficulty() {\n            return pb_1.Message.getField(this, 4) != null;\n        }\n        get tx_hash() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoHash, 5);\n        }\n        set tx_hash(value) {\n            pb_1.Message.setOneofWrapperField(this, 5, this.#one_of_decls[4], value);\n        }\n        get has_tx_hash() {\n            return pb_1.Message.getField(this, 5) != null;\n        }\n        get nonce() {\n            return pb_1.Message.getFieldWithDefault(this, 6, 0);\n        }\n        set nonce(value) {\n            pb_1.Message.setOneofField(this, 6, this.#one_of_decls[5], value);\n        }\n        get has_nonce() {\n            return pb_1.Message.getField(this, 6) != null;\n        }\n        get location() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoLocation, 7);\n        }\n        set location(value) {\n            pb_1.Message.setOneofWrapperField(this, 7, this.#one_of_decls[6], value);\n        }\n        get has_location() {\n            return pb_1.Message.getField(this, 7) != null;\n        }\n        get mix_hash() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoHash, 8);\n        }\n        set mix_hash(value) {\n            pb_1.Message.setOneofWrapperField(this, 8, this.#one_of_decls[7], value);\n        }\n        get has_mix_hash() {\n            return pb_1.Message.getField(this, 8) != null;\n        }\n        get time() {\n            return pb_1.Message.getFieldWithDefault(this, 9, 0);\n        }\n        set time(value) {\n            pb_1.Message.setOneofField(this, 9, this.#one_of_decls[8], value);\n        }\n        get has_time() {\n            return pb_1.Message.getField(this, 9) != null;\n        }\n        get prime_terminus_number() {\n            return pb_1.Message.getFieldWithDefault(this, 10, new Uint8Array(0));\n        }\n        set prime_terminus_number(value) {\n            pb_1.Message.setOneofField(this, 10, this.#one_of_decls[9], value);\n        }\n        get has_prime_terminus_number() {\n            return pb_1.Message.getField(this, 10) != null;\n        }\n        get lock() {\n            return pb_1.Message.getFieldWithDefault(this, 11, 0);\n        }\n        set lock(value) {\n            pb_1.Message.setOneofField(this, 11, this.#one_of_decls[10], value);\n        }\n        get has_lock() {\n            return pb_1.Message.getField(this, 11) != null;\n        }\n        get primary_coinbase() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoAddress, 12);\n        }\n        set primary_coinbase(value) {\n            pb_1.Message.setOneofWrapperField(this, 12, this.#one_of_decls[11], value);\n        }\n        get has_primary_coinbase() {\n            return pb_1.Message.getField(this, 12) != null;\n        }\n        get _header_hash() {\n            const cases = {\n                0: \"none\",\n                1: \"header_hash\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _parent_hash() {\n            const cases = {\n                0: \"none\",\n                2: \"parent_hash\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        get _number() {\n            const cases = {\n                0: \"none\",\n                3: \"number\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [3])];\n        }\n        get _difficulty() {\n            const cases = {\n                0: \"none\",\n                4: \"difficulty\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [4])];\n        }\n        get _tx_hash() {\n            const cases = {\n                0: \"none\",\n                5: \"tx_hash\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [5])];\n        }\n        get _nonce() {\n            const cases = {\n                0: \"none\",\n                6: \"nonce\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [6])];\n        }\n        get _location() {\n            const cases = {\n                0: \"none\",\n                7: \"location\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [7])];\n        }\n        get _mix_hash() {\n            const cases = {\n                0: \"none\",\n                8: \"mix_hash\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [8])];\n        }\n        get _time() {\n            const cases = {\n                0: \"none\",\n                9: \"time\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [9])];\n        }\n        get _prime_terminus_number() {\n            const cases = {\n                0: \"none\",\n                10: \"prime_terminus_number\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [10])];\n        }\n        get _lock() {\n            const cases = {\n                0: \"none\",\n                11: \"lock\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [11])];\n        }\n        get _primary_coinbase() {\n            const cases = {\n                0: \"none\",\n                12: \"primary_coinbase\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [12])];\n        }\n        static fromObject(data) {\n            const message = new ProtoWorkObjectHeader({});\n            if (data.header_hash != null) {\n                message.header_hash = dependency_1.common.ProtoHash.fromObject(data.header_hash);\n            }\n            if (data.parent_hash != null) {\n                message.parent_hash = dependency_1.common.ProtoHash.fromObject(data.parent_hash);\n            }\n            if (data.number != null) {\n                message.number = data.number;\n            }\n            if (data.difficulty != null) {\n                message.difficulty = data.difficulty;\n            }\n            if (data.tx_hash != null) {\n                message.tx_hash = dependency_1.common.ProtoHash.fromObject(data.tx_hash);\n            }\n            if (data.nonce != null) {\n                message.nonce = data.nonce;\n            }\n            if (data.location != null) {\n                message.location = dependency_1.common.ProtoLocation.fromObject(data.location);\n            }\n            if (data.mix_hash != null) {\n                message.mix_hash = dependency_1.common.ProtoHash.fromObject(data.mix_hash);\n            }\n            if (data.time != null) {\n                message.time = data.time;\n            }\n            if (data.prime_terminus_number != null) {\n                message.prime_terminus_number = data.prime_terminus_number;\n            }\n            if (data.lock != null) {\n                message.lock = data.lock;\n            }\n            if (data.primary_coinbase != null) {\n                message.primary_coinbase = dependency_1.common.ProtoAddress.fromObject(data.primary_coinbase);\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.header_hash != null) {\n                data.header_hash = this.header_hash.toObject();\n            }\n            if (this.parent_hash != null) {\n                data.parent_hash = this.parent_hash.toObject();\n            }\n            if (this.number != null) {\n                data.number = this.number;\n            }\n            if (this.difficulty != null) {\n                data.difficulty = this.difficulty;\n            }\n            if (this.tx_hash != null) {\n                data.tx_hash = this.tx_hash.toObject();\n            }\n            if (this.nonce != null) {\n                data.nonce = this.nonce;\n            }\n            if (this.location != null) {\n                data.location = this.location.toObject();\n            }\n            if (this.mix_hash != null) {\n                data.mix_hash = this.mix_hash.toObject();\n            }\n            if (this.time != null) {\n                data.time = this.time;\n            }\n            if (this.prime_terminus_number != null) {\n                data.prime_terminus_number = this.prime_terminus_number;\n            }\n            if (this.lock != null) {\n                data.lock = this.lock;\n            }\n            if (this.primary_coinbase != null) {\n                data.primary_coinbase = this.primary_coinbase.toObject();\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_header_hash)\n                writer.writeMessage(1, this.header_hash, () => this.header_hash.serialize(writer));\n            if (this.has_parent_hash)\n                writer.writeMessage(2, this.parent_hash, () => this.parent_hash.serialize(writer));\n            if (this.has_number)\n                writer.writeBytes(3, this.number);\n            if (this.has_difficulty)\n                writer.writeBytes(4, this.difficulty);\n            if (this.has_tx_hash)\n                writer.writeMessage(5, this.tx_hash, () => this.tx_hash.serialize(writer));\n            if (this.has_nonce)\n                writer.writeUint64(6, this.nonce);\n            if (this.has_location)\n                writer.writeMessage(7, this.location, () => this.location.serialize(writer));\n            if (this.has_mix_hash)\n                writer.writeMessage(8, this.mix_hash, () => this.mix_hash.serialize(writer));\n            if (this.has_time)\n                writer.writeUint64(9, this.time);\n            if (this.has_prime_terminus_number)\n                writer.writeBytes(10, this.prime_terminus_number);\n            if (this.has_lock)\n                writer.writeUint32(11, this.lock);\n            if (this.has_primary_coinbase)\n                writer.writeMessage(12, this.primary_coinbase, () => this.primary_coinbase.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoWorkObjectHeader();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.header_hash, () => message.header_hash = dependency_1.common.ProtoHash.deserialize(reader));\n                        break;\n                    case 2:\n                        reader.readMessage(message.parent_hash, () => message.parent_hash = dependency_1.common.ProtoHash.deserialize(reader));\n                        break;\n                    case 3:\n                        message.number = reader.readBytes();\n                        break;\n                    case 4:\n                        message.difficulty = reader.readBytes();\n                        break;\n                    case 5:\n                        reader.readMessage(message.tx_hash, () => message.tx_hash = dependency_1.common.ProtoHash.deserialize(reader));\n                        break;\n                    case 6:\n                        message.nonce = reader.readUint64();\n                        break;\n                    case 7:\n                        reader.readMessage(message.location, () => message.location = dependency_1.common.ProtoLocation.deserialize(reader));\n                        break;\n                    case 8:\n                        reader.readMessage(message.mix_hash, () => message.mix_hash = dependency_1.common.ProtoHash.deserialize(reader));\n                        break;\n                    case 9:\n                        message.time = reader.readUint64();\n                        break;\n                    case 10:\n                        message.prime_terminus_number = reader.readBytes();\n                        break;\n                    case 11:\n                        message.lock = reader.readUint32();\n                        break;\n                    case 12:\n                        reader.readMessage(message.primary_coinbase, () => message.primary_coinbase = dependency_1.common.ProtoAddress.deserialize(reader));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoWorkObjectHeader.deserialize(bytes);\n        }\n    }\n    block.ProtoWorkObjectHeader = ProtoWorkObjectHeader;\n    class ProtoWorkObjectHeaders extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"wo_headers\" in data && data.wo_headers != undefined) {\n                    this.wo_headers = data.wo_headers;\n                }\n            }\n        }\n        get wo_headers() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoWorkObjectHeader, 1);\n        }\n        set wo_headers(value) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoWorkObjectHeaders({});\n            if (data.wo_headers != null) {\n                message.wo_headers = data.wo_headers.map(item => ProtoWorkObjectHeader.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.wo_headers != null) {\n                data.wo_headers = this.wo_headers.map((item) => item.toObject());\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.wo_headers.length)\n                writer.writeRepeatedMessage(1, this.wo_headers, (item) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoWorkObjectHeaders();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.wo_headers, () => pb_1.Message.addToRepeatedWrapperField(message, 1, ProtoWorkObjectHeader.deserialize(reader), ProtoWorkObjectHeader));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoWorkObjectHeaders.deserialize(bytes);\n        }\n    }\n    block.ProtoWorkObjectHeaders = ProtoWorkObjectHeaders;\n    class ProtoWorkObjectBody extends pb_1.Message {\n        #one_of_decls = [[1], [2], [3], [4], [5], [6]];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"header\" in data && data.header != undefined) {\n                    this.header = data.header;\n                }\n                if (\"transactions\" in data && data.transactions != undefined) {\n                    this.transactions = data.transactions;\n                }\n                if (\"uncles\" in data && data.uncles != undefined) {\n                    this.uncles = data.uncles;\n                }\n                if (\"outbound_etxs\" in data && data.outbound_etxs != undefined) {\n                    this.outbound_etxs = data.outbound_etxs;\n                }\n                if (\"manifest\" in data && data.manifest != undefined) {\n                    this.manifest = data.manifest;\n                }\n                if (\"interlink_hashes\" in data && data.interlink_hashes != undefined) {\n                    this.interlink_hashes = data.interlink_hashes;\n                }\n            }\n        }\n        get header() {\n            return pb_1.Message.getWrapperField(this, ProtoHeader, 1);\n        }\n        set header(value) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_header() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get transactions() {\n            return pb_1.Message.getWrapperField(this, ProtoTransactions, 2);\n        }\n        set transactions(value) {\n            pb_1.Message.setOneofWrapperField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_transactions() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get uncles() {\n            return pb_1.Message.getWrapperField(this, ProtoWorkObjectHeaders, 3);\n        }\n        set uncles(value) {\n            pb_1.Message.setOneofWrapperField(this, 3, this.#one_of_decls[2], value);\n        }\n        get has_uncles() {\n            return pb_1.Message.getField(this, 3) != null;\n        }\n        get outbound_etxs() {\n            return pb_1.Message.getWrapperField(this, ProtoTransactions, 4);\n        }\n        set outbound_etxs(value) {\n            pb_1.Message.setOneofWrapperField(this, 4, this.#one_of_decls[3], value);\n        }\n        get has_outbound_etxs() {\n            return pb_1.Message.getField(this, 4) != null;\n        }\n        get manifest() {\n            return pb_1.Message.getWrapperField(this, ProtoManifest, 5);\n        }\n        set manifest(value) {\n            pb_1.Message.setOneofWrapperField(this, 5, this.#one_of_decls[4], value);\n        }\n        get has_manifest() {\n            return pb_1.Message.getField(this, 5) != null;\n        }\n        get interlink_hashes() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoHashes, 6);\n        }\n        set interlink_hashes(value) {\n            pb_1.Message.setOneofWrapperField(this, 6, this.#one_of_decls[5], value);\n        }\n        get has_interlink_hashes() {\n            return pb_1.Message.getField(this, 6) != null;\n        }\n        get _header() {\n            const cases = {\n                0: \"none\",\n                1: \"header\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _transactions() {\n            const cases = {\n                0: \"none\",\n                2: \"transactions\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        get _uncles() {\n            const cases = {\n                0: \"none\",\n                3: \"uncles\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [3])];\n        }\n        get _outbound_etxs() {\n            const cases = {\n                0: \"none\",\n                4: \"outbound_etxs\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [4])];\n        }\n        get _manifest() {\n            const cases = {\n                0: \"none\",\n                5: \"manifest\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [5])];\n        }\n        get _interlink_hashes() {\n            const cases = {\n                0: \"none\",\n                6: \"interlink_hashes\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [6])];\n        }\n        static fromObject(data) {\n            const message = new ProtoWorkObjectBody({});\n            if (data.header != null) {\n                message.header = ProtoHeader.fromObject(data.header);\n            }\n            if (data.transactions != null) {\n                message.transactions = ProtoTransactions.fromObject(data.transactions);\n            }\n            if (data.uncles != null) {\n                message.uncles = ProtoWorkObjectHeaders.fromObject(data.uncles);\n            }\n            if (data.outbound_etxs != null) {\n                message.outbound_etxs = ProtoTransactions.fromObject(data.outbound_etxs);\n            }\n            if (data.manifest != null) {\n                message.manifest = ProtoManifest.fromObject(data.manifest);\n            }\n            if (data.interlink_hashes != null) {\n                message.interlink_hashes = dependency_1.common.ProtoHashes.fromObject(data.interlink_hashes);\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.header != null) {\n                data.header = this.header.toObject();\n            }\n            if (this.transactions != null) {\n                data.transactions = this.transactions.toObject();\n            }\n            if (this.uncles != null) {\n                data.uncles = this.uncles.toObject();\n            }\n            if (this.outbound_etxs != null) {\n                data.outbound_etxs = this.outbound_etxs.toObject();\n            }\n            if (this.manifest != null) {\n                data.manifest = this.manifest.toObject();\n            }\n            if (this.interlink_hashes != null) {\n                data.interlink_hashes = this.interlink_hashes.toObject();\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_header)\n                writer.writeMessage(1, this.header, () => this.header.serialize(writer));\n            if (this.has_transactions)\n                writer.writeMessage(2, this.transactions, () => this.transactions.serialize(writer));\n            if (this.has_uncles)\n                writer.writeMessage(3, this.uncles, () => this.uncles.serialize(writer));\n            if (this.has_outbound_etxs)\n                writer.writeMessage(4, this.outbound_etxs, () => this.outbound_etxs.serialize(writer));\n            if (this.has_manifest)\n                writer.writeMessage(5, this.manifest, () => this.manifest.serialize(writer));\n            if (this.has_interlink_hashes)\n                writer.writeMessage(6, this.interlink_hashes, () => this.interlink_hashes.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoWorkObjectBody();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.header, () => message.header = ProtoHeader.deserialize(reader));\n                        break;\n                    case 2:\n                        reader.readMessage(message.transactions, () => message.transactions = ProtoTransactions.deserialize(reader));\n                        break;\n                    case 3:\n                        reader.readMessage(message.uncles, () => message.uncles = ProtoWorkObjectHeaders.deserialize(reader));\n                        break;\n                    case 4:\n                        reader.readMessage(message.outbound_etxs, () => message.outbound_etxs = ProtoTransactions.deserialize(reader));\n                        break;\n                    case 5:\n                        reader.readMessage(message.manifest, () => message.manifest = ProtoManifest.deserialize(reader));\n                        break;\n                    case 6:\n                        reader.readMessage(message.interlink_hashes, () => message.interlink_hashes = dependency_1.common.ProtoHashes.deserialize(reader));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoWorkObjectBody.deserialize(bytes);\n        }\n    }\n    block.ProtoWorkObjectBody = ProtoWorkObjectBody;\n    class ProtoWorkObject extends pb_1.Message {\n        #one_of_decls = [[1], [2], [3]];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"wo_header\" in data && data.wo_header != undefined) {\n                    this.wo_header = data.wo_header;\n                }\n                if (\"wo_body\" in data && data.wo_body != undefined) {\n                    this.wo_body = data.wo_body;\n                }\n                if (\"tx\" in data && data.tx != undefined) {\n                    this.tx = data.tx;\n                }\n            }\n        }\n        get wo_header() {\n            return pb_1.Message.getWrapperField(this, ProtoWorkObjectHeader, 1);\n        }\n        set wo_header(value) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_wo_header() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get wo_body() {\n            return pb_1.Message.getWrapperField(this, ProtoWorkObjectBody, 2);\n        }\n        set wo_body(value) {\n            pb_1.Message.setOneofWrapperField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_wo_body() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get tx() {\n            return pb_1.Message.getWrapperField(this, ProtoTransaction, 3);\n        }\n        set tx(value) {\n            pb_1.Message.setOneofWrapperField(this, 3, this.#one_of_decls[2], value);\n        }\n        get has_tx() {\n            return pb_1.Message.getField(this, 3) != null;\n        }\n        get _wo_header() {\n            const cases = {\n                0: \"none\",\n                1: \"wo_header\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _wo_body() {\n            const cases = {\n                0: \"none\",\n                2: \"wo_body\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        get _tx() {\n            const cases = {\n                0: \"none\",\n                3: \"tx\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [3])];\n        }\n        static fromObject(data) {\n            const message = new ProtoWorkObject({});\n            if (data.wo_header != null) {\n                message.wo_header = ProtoWorkObjectHeader.fromObject(data.wo_header);\n            }\n            if (data.wo_body != null) {\n                message.wo_body = ProtoWorkObjectBody.fromObject(data.wo_body);\n            }\n            if (data.tx != null) {\n                message.tx = ProtoTransaction.fromObject(data.tx);\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.wo_header != null) {\n                data.wo_header = this.wo_header.toObject();\n            }\n            if (this.wo_body != null) {\n                data.wo_body = this.wo_body.toObject();\n            }\n            if (this.tx != null) {\n                data.tx = this.tx.toObject();\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_wo_header)\n                writer.writeMessage(1, this.wo_header, () => this.wo_header.serialize(writer));\n            if (this.has_wo_body)\n                writer.writeMessage(2, this.wo_body, () => this.wo_body.serialize(writer));\n            if (this.has_tx)\n                writer.writeMessage(3, this.tx, () => this.tx.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoWorkObject();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.wo_header, () => message.wo_header = ProtoWorkObjectHeader.deserialize(reader));\n                        break;\n                    case 2:\n                        reader.readMessage(message.wo_body, () => message.wo_body = ProtoWorkObjectBody.deserialize(reader));\n                        break;\n                    case 3:\n                        reader.readMessage(message.tx, () => message.tx = ProtoTransaction.deserialize(reader));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoWorkObject.deserialize(bytes);\n        }\n    }\n    block.ProtoWorkObject = ProtoWorkObject;\n    class ProtoWorkObjects extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"work_objects\" in data && data.work_objects != undefined) {\n                    this.work_objects = data.work_objects;\n                }\n            }\n        }\n        get work_objects() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoWorkObject, 1);\n        }\n        set work_objects(value) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoWorkObjects({});\n            if (data.work_objects != null) {\n                message.work_objects = data.work_objects.map(item => ProtoWorkObject.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.work_objects != null) {\n                data.work_objects = this.work_objects.map((item) => item.toObject());\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.work_objects.length)\n                writer.writeRepeatedMessage(1, this.work_objects, (item) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoWorkObjects();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.work_objects, () => pb_1.Message.addToRepeatedWrapperField(message, 1, ProtoWorkObject.deserialize(reader), ProtoWorkObject));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoWorkObjects.deserialize(bytes);\n        }\n    }\n    block.ProtoWorkObjects = ProtoWorkObjects;\n    class ProtoWorkObjectBlockView extends pb_1.Message {\n        #one_of_decls = [[1]];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"work_object\" in data && data.work_object != undefined) {\n                    this.work_object = data.work_object;\n                }\n            }\n        }\n        get work_object() {\n            return pb_1.Message.getWrapperField(this, ProtoWorkObject, 1);\n        }\n        set work_object(value) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_work_object() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get _work_object() {\n            const cases = {\n                0: \"none\",\n                1: \"work_object\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        static fromObject(data) {\n            const message = new ProtoWorkObjectBlockView({});\n            if (data.work_object != null) {\n                message.work_object = ProtoWorkObject.fromObject(data.work_object);\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.work_object != null) {\n                data.work_object = this.work_object.toObject();\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_work_object)\n                writer.writeMessage(1, this.work_object, () => this.work_object.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoWorkObjectBlockView();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.work_object, () => message.work_object = ProtoWorkObject.deserialize(reader));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoWorkObjectBlockView.deserialize(bytes);\n        }\n    }\n    block.ProtoWorkObjectBlockView = ProtoWorkObjectBlockView;\n    class ProtoWorkObjectBlocksView extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"work_objects\" in data && data.work_objects != undefined) {\n                    this.work_objects = data.work_objects;\n                }\n            }\n        }\n        get work_objects() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoWorkObjectBlockView, 1);\n        }\n        set work_objects(value) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoWorkObjectBlocksView({});\n            if (data.work_objects != null) {\n                message.work_objects = data.work_objects.map(item => ProtoWorkObjectBlockView.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.work_objects != null) {\n                data.work_objects = this.work_objects.map((item) => item.toObject());\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.work_objects.length)\n                writer.writeRepeatedMessage(1, this.work_objects, (item) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoWorkObjectBlocksView();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.work_objects, () => pb_1.Message.addToRepeatedWrapperField(message, 1, ProtoWorkObjectBlockView.deserialize(reader), ProtoWorkObjectBlockView));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoWorkObjectBlocksView.deserialize(bytes);\n        }\n    }\n    block.ProtoWorkObjectBlocksView = ProtoWorkObjectBlocksView;\n    class ProtoWorkObjectHeaderView extends pb_1.Message {\n        #one_of_decls = [[1]];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"work_object\" in data && data.work_object != undefined) {\n                    this.work_object = data.work_object;\n                }\n            }\n        }\n        get work_object() {\n            return pb_1.Message.getWrapperField(this, ProtoWorkObject, 1);\n        }\n        set work_object(value) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_work_object() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get _work_object() {\n            const cases = {\n                0: \"none\",\n                1: \"work_object\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        static fromObject(data) {\n            const message = new ProtoWorkObjectHeaderView({});\n            if (data.work_object != null) {\n                message.work_object = ProtoWorkObject.fromObject(data.work_object);\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.work_object != null) {\n                data.work_object = this.work_object.toObject();\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_work_object)\n                writer.writeMessage(1, this.work_object, () => this.work_object.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoWorkObjectHeaderView();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.work_object, () => message.work_object = ProtoWorkObject.deserialize(reader));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoWorkObjectHeaderView.deserialize(bytes);\n        }\n    }\n    block.ProtoWorkObjectHeaderView = ProtoWorkObjectHeaderView;\n    class ProtoWorkObjectShareView extends pb_1.Message {\n        #one_of_decls = [[1]];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"work_object\" in data && data.work_object != undefined) {\n                    this.work_object = data.work_object;\n                }\n            }\n        }\n        get work_object() {\n            return pb_1.Message.getWrapperField(this, ProtoWorkObject, 1);\n        }\n        set work_object(value) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_work_object() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get _work_object() {\n            const cases = {\n                0: \"none\",\n                1: \"work_object\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        static fromObject(data) {\n            const message = new ProtoWorkObjectShareView({});\n            if (data.work_object != null) {\n                message.work_object = ProtoWorkObject.fromObject(data.work_object);\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.work_object != null) {\n                data.work_object = this.work_object.toObject();\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_work_object)\n                writer.writeMessage(1, this.work_object, () => this.work_object.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoWorkObjectShareView();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.work_object, () => message.work_object = ProtoWorkObject.deserialize(reader));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoWorkObjectShareView.deserialize(bytes);\n        }\n    }\n    block.ProtoWorkObjectShareView = ProtoWorkObjectShareView;\n    class ProtoAccessTuple extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"address\" in data && data.address != undefined) {\n                    this.address = data.address;\n                }\n                if (\"storage_key\" in data && data.storage_key != undefined) {\n                    this.storage_key = data.storage_key;\n                }\n            }\n        }\n        get address() {\n            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));\n        }\n        set address(value) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        get storage_key() {\n            return pb_1.Message.getRepeatedWrapperField(this, dependency_1.common.ProtoHash, 2);\n        }\n        set storage_key(value) {\n            pb_1.Message.setRepeatedWrapperField(this, 2, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoAccessTuple({});\n            if (data.address != null) {\n                message.address = data.address;\n            }\n            if (data.storage_key != null) {\n                message.storage_key = data.storage_key.map(item => dependency_1.common.ProtoHash.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.address != null) {\n                data.address = this.address;\n            }\n            if (this.storage_key != null) {\n                data.storage_key = this.storage_key.map((item) => item.toObject());\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.address.length)\n                writer.writeBytes(1, this.address);\n            if (this.storage_key.length)\n                writer.writeRepeatedMessage(2, this.storage_key, (item) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoAccessTuple();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.address = reader.readBytes();\n                        break;\n                    case 2:\n                        reader.readMessage(message.storage_key, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_1.common.ProtoHash.deserialize(reader), dependency_1.common.ProtoHash));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoAccessTuple.deserialize(bytes);\n        }\n    }\n    block.ProtoAccessTuple = ProtoAccessTuple;\n    class ProtoReceiptForStorage extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"post_state_or_status\" in data && data.post_state_or_status != undefined) {\n                    this.post_state_or_status = data.post_state_or_status;\n                }\n                if (\"cumulative_gas_used\" in data && data.cumulative_gas_used != undefined) {\n                    this.cumulative_gas_used = data.cumulative_gas_used;\n                }\n                if (\"logs\" in data && data.logs != undefined) {\n                    this.logs = data.logs;\n                }\n                if (\"tx_hash\" in data && data.tx_hash != undefined) {\n                    this.tx_hash = data.tx_hash;\n                }\n                if (\"contract_address\" in data && data.contract_address != undefined) {\n                    this.contract_address = data.contract_address;\n                }\n                if (\"gas_used\" in data && data.gas_used != undefined) {\n                    this.gas_used = data.gas_used;\n                }\n                if (\"outbound_etxs\" in data && data.outbound_etxs != undefined) {\n                    this.outbound_etxs = data.outbound_etxs;\n                }\n            }\n        }\n        get post_state_or_status() {\n            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));\n        }\n        set post_state_or_status(value) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        get cumulative_gas_used() {\n            return pb_1.Message.getFieldWithDefault(this, 2, 0);\n        }\n        set cumulative_gas_used(value) {\n            pb_1.Message.setField(this, 2, value);\n        }\n        get logs() {\n            return pb_1.Message.getWrapperField(this, ProtoLogsForStorage, 3);\n        }\n        set logs(value) {\n            pb_1.Message.setWrapperField(this, 3, value);\n        }\n        get has_logs() {\n            return pb_1.Message.getField(this, 3) != null;\n        }\n        get tx_hash() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoHash, 4);\n        }\n        set tx_hash(value) {\n            pb_1.Message.setWrapperField(this, 4, value);\n        }\n        get has_tx_hash() {\n            return pb_1.Message.getField(this, 4) != null;\n        }\n        get contract_address() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoAddress, 5);\n        }\n        set contract_address(value) {\n            pb_1.Message.setWrapperField(this, 5, value);\n        }\n        get has_contract_address() {\n            return pb_1.Message.getField(this, 5) != null;\n        }\n        get gas_used() {\n            return pb_1.Message.getFieldWithDefault(this, 6, 0);\n        }\n        set gas_used(value) {\n            pb_1.Message.setField(this, 6, value);\n        }\n        get outbound_etxs() {\n            return pb_1.Message.getWrapperField(this, ProtoTransactions, 7);\n        }\n        set outbound_etxs(value) {\n            pb_1.Message.setWrapperField(this, 7, value);\n        }\n        get has_outbound_etxs() {\n            return pb_1.Message.getField(this, 7) != null;\n        }\n        static fromObject(data) {\n            const message = new ProtoReceiptForStorage({});\n            if (data.post_state_or_status != null) {\n                message.post_state_or_status = data.post_state_or_status;\n            }\n            if (data.cumulative_gas_used != null) {\n                message.cumulative_gas_used = data.cumulative_gas_used;\n            }\n            if (data.logs != null) {\n                message.logs = ProtoLogsForStorage.fromObject(data.logs);\n            }\n            if (data.tx_hash != null) {\n                message.tx_hash = dependency_1.common.ProtoHash.fromObject(data.tx_hash);\n            }\n            if (data.contract_address != null) {\n                message.contract_address = dependency_1.common.ProtoAddress.fromObject(data.contract_address);\n            }\n            if (data.gas_used != null) {\n                message.gas_used = data.gas_used;\n            }\n            if (data.outbound_etxs != null) {\n                message.outbound_etxs = ProtoTransactions.fromObject(data.outbound_etxs);\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.post_state_or_status != null) {\n                data.post_state_or_status = this.post_state_or_status;\n            }\n            if (this.cumulative_gas_used != null) {\n                data.cumulative_gas_used = this.cumulative_gas_used;\n            }\n            if (this.logs != null) {\n                data.logs = this.logs.toObject();\n            }\n            if (this.tx_hash != null) {\n                data.tx_hash = this.tx_hash.toObject();\n            }\n            if (this.contract_address != null) {\n                data.contract_address = this.contract_address.toObject();\n            }\n            if (this.gas_used != null) {\n                data.gas_used = this.gas_used;\n            }\n            if (this.outbound_etxs != null) {\n                data.outbound_etxs = this.outbound_etxs.toObject();\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.post_state_or_status.length)\n                writer.writeBytes(1, this.post_state_or_status);\n            if (this.cumulative_gas_used != 0)\n                writer.writeUint64(2, this.cumulative_gas_used);\n            if (this.has_logs)\n                writer.writeMessage(3, this.logs, () => this.logs.serialize(writer));\n            if (this.has_tx_hash)\n                writer.writeMessage(4, this.tx_hash, () => this.tx_hash.serialize(writer));\n            if (this.has_contract_address)\n                writer.writeMessage(5, this.contract_address, () => this.contract_address.serialize(writer));\n            if (this.gas_used != 0)\n                writer.writeUint64(6, this.gas_used);\n            if (this.has_outbound_etxs)\n                writer.writeMessage(7, this.outbound_etxs, () => this.outbound_etxs.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoReceiptForStorage();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.post_state_or_status = reader.readBytes();\n                        break;\n                    case 2:\n                        message.cumulative_gas_used = reader.readUint64();\n                        break;\n                    case 3:\n                        reader.readMessage(message.logs, () => message.logs = ProtoLogsForStorage.deserialize(reader));\n                        break;\n                    case 4:\n                        reader.readMessage(message.tx_hash, () => message.tx_hash = dependency_1.common.ProtoHash.deserialize(reader));\n                        break;\n                    case 5:\n                        reader.readMessage(message.contract_address, () => message.contract_address = dependency_1.common.ProtoAddress.deserialize(reader));\n                        break;\n                    case 6:\n                        message.gas_used = reader.readUint64();\n                        break;\n                    case 7:\n                        reader.readMessage(message.outbound_etxs, () => message.outbound_etxs = ProtoTransactions.deserialize(reader));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoReceiptForStorage.deserialize(bytes);\n        }\n    }\n    block.ProtoReceiptForStorage = ProtoReceiptForStorage;\n    class ProtoReceiptsForStorage extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"receipts\" in data && data.receipts != undefined) {\n                    this.receipts = data.receipts;\n                }\n            }\n        }\n        get receipts() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoReceiptForStorage, 1);\n        }\n        set receipts(value) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoReceiptsForStorage({});\n            if (data.receipts != null) {\n                message.receipts = data.receipts.map(item => ProtoReceiptForStorage.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.receipts != null) {\n                data.receipts = this.receipts.map((item) => item.toObject());\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.receipts.length)\n                writer.writeRepeatedMessage(1, this.receipts, (item) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoReceiptsForStorage();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.receipts, () => pb_1.Message.addToRepeatedWrapperField(message, 1, ProtoReceiptForStorage.deserialize(reader), ProtoReceiptForStorage));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoReceiptsForStorage.deserialize(bytes);\n        }\n    }\n    block.ProtoReceiptsForStorage = ProtoReceiptsForStorage;\n    class ProtoLogForStorage extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"address\" in data && data.address != undefined) {\n                    this.address = data.address;\n                }\n                if (\"topics\" in data && data.topics != undefined) {\n                    this.topics = data.topics;\n                }\n                if (\"data\" in data && data.data != undefined) {\n                    this.data = data.data;\n                }\n            }\n        }\n        get address() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoAddress, 1);\n        }\n        set address(value) {\n            pb_1.Message.setWrapperField(this, 1, value);\n        }\n        get has_address() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get topics() {\n            return pb_1.Message.getRepeatedWrapperField(this, dependency_1.common.ProtoHash, 2);\n        }\n        set topics(value) {\n            pb_1.Message.setRepeatedWrapperField(this, 2, value);\n        }\n        get data() {\n            return pb_1.Message.getFieldWithDefault(this, 3, new Uint8Array(0));\n        }\n        set data(value) {\n            pb_1.Message.setField(this, 3, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoLogForStorage({});\n            if (data.address != null) {\n                message.address = dependency_1.common.ProtoAddress.fromObject(data.address);\n            }\n            if (data.topics != null) {\n                message.topics = data.topics.map(item => dependency_1.common.ProtoHash.fromObject(item));\n            }\n            if (data.data != null) {\n                message.data = data.data;\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.address != null) {\n                data.address = this.address.toObject();\n            }\n            if (this.topics != null) {\n                data.topics = this.topics.map((item) => item.toObject());\n            }\n            if (this.data != null) {\n                data.data = this.data;\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_address)\n                writer.writeMessage(1, this.address, () => this.address.serialize(writer));\n            if (this.topics.length)\n                writer.writeRepeatedMessage(2, this.topics, (item) => item.serialize(writer));\n            if (this.data.length)\n                writer.writeBytes(3, this.data);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoLogForStorage();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.address, () => message.address = dependency_1.common.ProtoAddress.deserialize(reader));\n                        break;\n                    case 2:\n                        reader.readMessage(message.topics, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_1.common.ProtoHash.deserialize(reader), dependency_1.common.ProtoHash));\n                        break;\n                    case 3:\n                        message.data = reader.readBytes();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoLogForStorage.deserialize(bytes);\n        }\n    }\n    block.ProtoLogForStorage = ProtoLogForStorage;\n    class ProtoLogsForStorage extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"logs\" in data && data.logs != undefined) {\n                    this.logs = data.logs;\n                }\n            }\n        }\n        get logs() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoLogForStorage, 1);\n        }\n        set logs(value) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoLogsForStorage({});\n            if (data.logs != null) {\n                message.logs = data.logs.map(item => ProtoLogForStorage.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.logs != null) {\n                data.logs = this.logs.map((item) => item.toObject());\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.logs.length)\n                writer.writeRepeatedMessage(1, this.logs, (item) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoLogsForStorage();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.logs, () => pb_1.Message.addToRepeatedWrapperField(message, 1, ProtoLogForStorage.deserialize(reader), ProtoLogForStorage));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoLogsForStorage.deserialize(bytes);\n        }\n    }\n    block.ProtoLogsForStorage = ProtoLogsForStorage;\n    class ProtoPendingHeader extends pb_1.Message {\n        #one_of_decls = [[1], [2]];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"wo\" in data && data.wo != undefined) {\n                    this.wo = data.wo;\n                }\n                if (\"termini\" in data && data.termini != undefined) {\n                    this.termini = data.termini;\n                }\n            }\n        }\n        get wo() {\n            return pb_1.Message.getWrapperField(this, ProtoWorkObject, 1);\n        }\n        set wo(value) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_wo() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get termini() {\n            return pb_1.Message.getWrapperField(this, ProtoTermini, 2);\n        }\n        set termini(value) {\n            pb_1.Message.setOneofWrapperField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_termini() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get _wo() {\n            const cases = {\n                0: \"none\",\n                1: \"wo\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _termini() {\n            const cases = {\n                0: \"none\",\n                2: \"termini\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        static fromObject(data) {\n            const message = new ProtoPendingHeader({});\n            if (data.wo != null) {\n                message.wo = ProtoWorkObject.fromObject(data.wo);\n            }\n            if (data.termini != null) {\n                message.termini = ProtoTermini.fromObject(data.termini);\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.wo != null) {\n                data.wo = this.wo.toObject();\n            }\n            if (this.termini != null) {\n                data.termini = this.termini.toObject();\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_wo)\n                writer.writeMessage(1, this.wo, () => this.wo.serialize(writer));\n            if (this.has_termini)\n                writer.writeMessage(2, this.termini, () => this.termini.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoPendingHeader();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.wo, () => message.wo = ProtoWorkObject.deserialize(reader));\n                        break;\n                    case 2:\n                        reader.readMessage(message.termini, () => message.termini = ProtoTermini.deserialize(reader));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoPendingHeader.deserialize(bytes);\n        }\n    }\n    block.ProtoPendingHeader = ProtoPendingHeader;\n    class ProtoTermini extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1, 2], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"dom_termini\" in data && data.dom_termini != undefined) {\n                    this.dom_termini = data.dom_termini;\n                }\n                if (\"sub_termini\" in data && data.sub_termini != undefined) {\n                    this.sub_termini = data.sub_termini;\n                }\n            }\n        }\n        get dom_termini() {\n            return pb_1.Message.getRepeatedWrapperField(this, dependency_1.common.ProtoHash, 1);\n        }\n        set dom_termini(value) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        get sub_termini() {\n            return pb_1.Message.getRepeatedWrapperField(this, dependency_1.common.ProtoHash, 2);\n        }\n        set sub_termini(value) {\n            pb_1.Message.setRepeatedWrapperField(this, 2, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoTermini({});\n            if (data.dom_termini != null) {\n                message.dom_termini = data.dom_termini.map(item => dependency_1.common.ProtoHash.fromObject(item));\n            }\n            if (data.sub_termini != null) {\n                message.sub_termini = data.sub_termini.map(item => dependency_1.common.ProtoHash.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.dom_termini != null) {\n                data.dom_termini = this.dom_termini.map((item) => item.toObject());\n            }\n            if (this.sub_termini != null) {\n                data.sub_termini = this.sub_termini.map((item) => item.toObject());\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.dom_termini.length)\n                writer.writeRepeatedMessage(1, this.dom_termini, (item) => item.serialize(writer));\n            if (this.sub_termini.length)\n                writer.writeRepeatedMessage(2, this.sub_termini, (item) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoTermini();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.dom_termini, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_1.common.ProtoHash.deserialize(reader), dependency_1.common.ProtoHash));\n                        break;\n                    case 2:\n                        reader.readMessage(message.sub_termini, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_1.common.ProtoHash.deserialize(reader), dependency_1.common.ProtoHash));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoTermini.deserialize(bytes);\n        }\n    }\n    block.ProtoTermini = ProtoTermini;\n    class ProtoEtxSet extends pb_1.Message {\n        #one_of_decls = [[1]];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"etx_hashes\" in data && data.etx_hashes != undefined) {\n                    this.etx_hashes = data.etx_hashes;\n                }\n            }\n        }\n        get etx_hashes() {\n            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));\n        }\n        set etx_hashes(value) {\n            pb_1.Message.setOneofField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_etx_hashes() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get _etx_hashes() {\n            const cases = {\n                0: \"none\",\n                1: \"etx_hashes\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        static fromObject(data) {\n            const message = new ProtoEtxSet({});\n            if (data.etx_hashes != null) {\n                message.etx_hashes = data.etx_hashes;\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.etx_hashes != null) {\n                data.etx_hashes = this.etx_hashes;\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_etx_hashes)\n                writer.writeBytes(1, this.etx_hashes);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoEtxSet();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.etx_hashes = reader.readBytes();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoEtxSet.deserialize(bytes);\n        }\n    }\n    block.ProtoEtxSet = ProtoEtxSet;\n    class ProtoPendingEtxs extends pb_1.Message {\n        #one_of_decls = [[1], [2]];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"header\" in data && data.header != undefined) {\n                    this.header = data.header;\n                }\n                if (\"outbound_etxs\" in data && data.outbound_etxs != undefined) {\n                    this.outbound_etxs = data.outbound_etxs;\n                }\n            }\n        }\n        get header() {\n            return pb_1.Message.getWrapperField(this, ProtoWorkObject, 1);\n        }\n        set header(value) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_header() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get outbound_etxs() {\n            return pb_1.Message.getWrapperField(this, ProtoTransactions, 2);\n        }\n        set outbound_etxs(value) {\n            pb_1.Message.setOneofWrapperField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_outbound_etxs() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get _header() {\n            const cases = {\n                0: \"none\",\n                1: \"header\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _outbound_etxs() {\n            const cases = {\n                0: \"none\",\n                2: \"outbound_etxs\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        static fromObject(data) {\n            const message = new ProtoPendingEtxs({});\n            if (data.header != null) {\n                message.header = ProtoWorkObject.fromObject(data.header);\n            }\n            if (data.outbound_etxs != null) {\n                message.outbound_etxs = ProtoTransactions.fromObject(data.outbound_etxs);\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.header != null) {\n                data.header = this.header.toObject();\n            }\n            if (this.outbound_etxs != null) {\n                data.outbound_etxs = this.outbound_etxs.toObject();\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_header)\n                writer.writeMessage(1, this.header, () => this.header.serialize(writer));\n            if (this.has_outbound_etxs)\n                writer.writeMessage(2, this.outbound_etxs, () => this.outbound_etxs.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoPendingEtxs();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.header, () => message.header = ProtoWorkObject.deserialize(reader));\n                        break;\n                    case 2:\n                        reader.readMessage(message.outbound_etxs, () => message.outbound_etxs = ProtoTransactions.deserialize(reader));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoPendingEtxs.deserialize(bytes);\n        }\n    }\n    block.ProtoPendingEtxs = ProtoPendingEtxs;\n    class ProtoPendingEtxsRollup extends pb_1.Message {\n        #one_of_decls = [[1], [2]];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"header\" in data && data.header != undefined) {\n                    this.header = data.header;\n                }\n                if (\"etxs_rollup\" in data && data.etxs_rollup != undefined) {\n                    this.etxs_rollup = data.etxs_rollup;\n                }\n            }\n        }\n        get header() {\n            return pb_1.Message.getWrapperField(this, ProtoWorkObject, 1);\n        }\n        set header(value) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_header() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get etxs_rollup() {\n            return pb_1.Message.getWrapperField(this, ProtoTransactions, 2);\n        }\n        set etxs_rollup(value) {\n            pb_1.Message.setOneofWrapperField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_etxs_rollup() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get _header() {\n            const cases = {\n                0: \"none\",\n                1: \"header\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _etxs_rollup() {\n            const cases = {\n                0: \"none\",\n                2: \"etxs_rollup\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        static fromObject(data) {\n            const message = new ProtoPendingEtxsRollup({});\n            if (data.header != null) {\n                message.header = ProtoWorkObject.fromObject(data.header);\n            }\n            if (data.etxs_rollup != null) {\n                message.etxs_rollup = ProtoTransactions.fromObject(data.etxs_rollup);\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.header != null) {\n                data.header = this.header.toObject();\n            }\n            if (this.etxs_rollup != null) {\n                data.etxs_rollup = this.etxs_rollup.toObject();\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_header)\n                writer.writeMessage(1, this.header, () => this.header.serialize(writer));\n            if (this.has_etxs_rollup)\n                writer.writeMessage(2, this.etxs_rollup, () => this.etxs_rollup.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoPendingEtxsRollup();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.header, () => message.header = ProtoWorkObject.deserialize(reader));\n                        break;\n                    case 2:\n                        reader.readMessage(message.etxs_rollup, () => message.etxs_rollup = ProtoTransactions.deserialize(reader));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoPendingEtxsRollup.deserialize(bytes);\n        }\n    }\n    block.ProtoPendingEtxsRollup = ProtoPendingEtxsRollup;\n    class ProtoTxIns extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"tx_ins\" in data && data.tx_ins != undefined) {\n                    this.tx_ins = data.tx_ins;\n                }\n            }\n        }\n        get tx_ins() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoTxIn, 1);\n        }\n        set tx_ins(value) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoTxIns({});\n            if (data.tx_ins != null) {\n                message.tx_ins = data.tx_ins.map(item => ProtoTxIn.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.tx_ins != null) {\n                data.tx_ins = this.tx_ins.map((item) => item.toObject());\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.tx_ins.length)\n                writer.writeRepeatedMessage(1, this.tx_ins, (item) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoTxIns();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.tx_ins, () => pb_1.Message.addToRepeatedWrapperField(message, 1, ProtoTxIn.deserialize(reader), ProtoTxIn));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoTxIns.deserialize(bytes);\n        }\n    }\n    block.ProtoTxIns = ProtoTxIns;\n    class ProtoTxOuts extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"tx_outs\" in data && data.tx_outs != undefined) {\n                    this.tx_outs = data.tx_outs;\n                }\n            }\n        }\n        get tx_outs() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoTxOut, 1);\n        }\n        set tx_outs(value) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoTxOuts({});\n            if (data.tx_outs != null) {\n                message.tx_outs = data.tx_outs.map(item => ProtoTxOut.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.tx_outs != null) {\n                data.tx_outs = this.tx_outs.map((item) => item.toObject());\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.tx_outs.length)\n                writer.writeRepeatedMessage(1, this.tx_outs, (item) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoTxOuts();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.tx_outs, () => pb_1.Message.addToRepeatedWrapperField(message, 1, ProtoTxOut.deserialize(reader), ProtoTxOut));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoTxOuts.deserialize(bytes);\n        }\n    }\n    block.ProtoTxOuts = ProtoTxOuts;\n    class ProtoTxIn extends pb_1.Message {\n        #one_of_decls = [[1], [2]];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"previous_out_point\" in data && data.previous_out_point != undefined) {\n                    this.previous_out_point = data.previous_out_point;\n                }\n                if (\"pub_key\" in data && data.pub_key != undefined) {\n                    this.pub_key = data.pub_key;\n                }\n            }\n        }\n        get previous_out_point() {\n            return pb_1.Message.getWrapperField(this, ProtoOutPoint, 1);\n        }\n        set previous_out_point(value) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_previous_out_point() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get pub_key() {\n            return pb_1.Message.getFieldWithDefault(this, 2, new Uint8Array(0));\n        }\n        set pub_key(value) {\n            pb_1.Message.setOneofField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_pub_key() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get _previous_out_point() {\n            const cases = {\n                0: \"none\",\n                1: \"previous_out_point\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _pub_key() {\n            const cases = {\n                0: \"none\",\n                2: \"pub_key\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        static fromObject(data) {\n            const message = new ProtoTxIn({});\n            if (data.previous_out_point != null) {\n                message.previous_out_point = ProtoOutPoint.fromObject(data.previous_out_point);\n            }\n            if (data.pub_key != null) {\n                message.pub_key = data.pub_key;\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.previous_out_point != null) {\n                data.previous_out_point = this.previous_out_point.toObject();\n            }\n            if (this.pub_key != null) {\n                data.pub_key = this.pub_key;\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_previous_out_point)\n                writer.writeMessage(1, this.previous_out_point, () => this.previous_out_point.serialize(writer));\n            if (this.has_pub_key)\n                writer.writeBytes(2, this.pub_key);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoTxIn();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.previous_out_point, () => message.previous_out_point = ProtoOutPoint.deserialize(reader));\n                        break;\n                    case 2:\n                        message.pub_key = reader.readBytes();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoTxIn.deserialize(bytes);\n        }\n    }\n    block.ProtoTxIn = ProtoTxIn;\n    class ProtoOutPoint extends pb_1.Message {\n        #one_of_decls = [[1], [2]];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"hash\" in data && data.hash != undefined) {\n                    this.hash = data.hash;\n                }\n                if (\"index\" in data && data.index != undefined) {\n                    this.index = data.index;\n                }\n            }\n        }\n        get hash() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoHash, 1);\n        }\n        set hash(value) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_hash() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get index() {\n            return pb_1.Message.getFieldWithDefault(this, 2, 0);\n        }\n        set index(value) {\n            pb_1.Message.setOneofField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_index() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get _hash() {\n            const cases = {\n                0: \"none\",\n                1: \"hash\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _index() {\n            const cases = {\n                0: \"none\",\n                2: \"index\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        static fromObject(data) {\n            const message = new ProtoOutPoint({});\n            if (data.hash != null) {\n                message.hash = dependency_1.common.ProtoHash.fromObject(data.hash);\n            }\n            if (data.index != null) {\n                message.index = data.index;\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.hash != null) {\n                data.hash = this.hash.toObject();\n            }\n            if (this.index != null) {\n                data.index = this.index;\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_hash)\n                writer.writeMessage(1, this.hash, () => this.hash.serialize(writer));\n            if (this.has_index)\n                writer.writeUint32(2, this.index);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoOutPoint();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.hash, () => message.hash = dependency_1.common.ProtoHash.deserialize(reader));\n                        break;\n                    case 2:\n                        message.index = reader.readUint32();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoOutPoint.deserialize(bytes);\n        }\n    }\n    block.ProtoOutPoint = ProtoOutPoint;\n    class ProtoTxOut extends pb_1.Message {\n        #one_of_decls = [[1], [2], [3]];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"denomination\" in data && data.denomination != undefined) {\n                    this.denomination = data.denomination;\n                }\n                if (\"address\" in data && data.address != undefined) {\n                    this.address = data.address;\n                }\n                if (\"lock\" in data && data.lock != undefined) {\n                    this.lock = data.lock;\n                }\n            }\n        }\n        get denomination() {\n            return pb_1.Message.getFieldWithDefault(this, 1, 0);\n        }\n        set denomination(value) {\n            pb_1.Message.setOneofField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_denomination() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get address() {\n            return pb_1.Message.getFieldWithDefault(this, 2, new Uint8Array(0));\n        }\n        set address(value) {\n            pb_1.Message.setOneofField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_address() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get lock() {\n            return pb_1.Message.getFieldWithDefault(this, 3, new Uint8Array(0));\n        }\n        set lock(value) {\n            pb_1.Message.setOneofField(this, 3, this.#one_of_decls[2], value);\n        }\n        get has_lock() {\n            return pb_1.Message.getField(this, 3) != null;\n        }\n        get _denomination() {\n            const cases = {\n                0: \"none\",\n                1: \"denomination\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _address() {\n            const cases = {\n                0: \"none\",\n                2: \"address\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        get _lock() {\n            const cases = {\n                0: \"none\",\n                3: \"lock\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [3])];\n        }\n        static fromObject(data) {\n            const message = new ProtoTxOut({});\n            if (data.denomination != null) {\n                message.denomination = data.denomination;\n            }\n            if (data.address != null) {\n                message.address = data.address;\n            }\n            if (data.lock != null) {\n                message.lock = data.lock;\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.denomination != null) {\n                data.denomination = this.denomination;\n            }\n            if (this.address != null) {\n                data.address = this.address;\n            }\n            if (this.lock != null) {\n                data.lock = this.lock;\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_denomination)\n                writer.writeUint32(1, this.denomination);\n            if (this.has_address)\n                writer.writeBytes(2, this.address);\n            if (this.has_lock)\n                writer.writeBytes(3, this.lock);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoTxOut();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.denomination = reader.readUint32();\n                        break;\n                    case 2:\n                        message.address = reader.readBytes();\n                        break;\n                    case 3:\n                        message.lock = reader.readBytes();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoTxOut.deserialize(bytes);\n        }\n    }\n    block.ProtoTxOut = ProtoTxOut;\n    class ProtoOutPointAndDenomination extends pb_1.Message {\n        #one_of_decls = [[1], [2], [3]];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"hash\" in data && data.hash != undefined) {\n                    this.hash = data.hash;\n                }\n                if (\"index\" in data && data.index != undefined) {\n                    this.index = data.index;\n                }\n                if (\"denomination\" in data && data.denomination != undefined) {\n                    this.denomination = data.denomination;\n                }\n            }\n        }\n        get hash() {\n            return pb_1.Message.getWrapperField(this, dependency_1.common.ProtoHash, 1);\n        }\n        set hash(value) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_hash() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get index() {\n            return pb_1.Message.getFieldWithDefault(this, 2, 0);\n        }\n        set index(value) {\n            pb_1.Message.setOneofField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_index() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get denomination() {\n            return pb_1.Message.getFieldWithDefault(this, 3, 0);\n        }\n        set denomination(value) {\n            pb_1.Message.setOneofField(this, 3, this.#one_of_decls[2], value);\n        }\n        get has_denomination() {\n            return pb_1.Message.getField(this, 3) != null;\n        }\n        get _hash() {\n            const cases = {\n                0: \"none\",\n                1: \"hash\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _index() {\n            const cases = {\n                0: \"none\",\n                2: \"index\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        get _denomination() {\n            const cases = {\n                0: \"none\",\n                3: \"denomination\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [3])];\n        }\n        static fromObject(data) {\n            const message = new ProtoOutPointAndDenomination({});\n            if (data.hash != null) {\n                message.hash = dependency_1.common.ProtoHash.fromObject(data.hash);\n            }\n            if (data.index != null) {\n                message.index = data.index;\n            }\n            if (data.denomination != null) {\n                message.denomination = data.denomination;\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.hash != null) {\n                data.hash = this.hash.toObject();\n            }\n            if (this.index != null) {\n                data.index = this.index;\n            }\n            if (this.denomination != null) {\n                data.denomination = this.denomination;\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_hash)\n                writer.writeMessage(1, this.hash, () => this.hash.serialize(writer));\n            if (this.has_index)\n                writer.writeUint32(2, this.index);\n            if (this.has_denomination)\n                writer.writeUint32(3, this.denomination);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoOutPointAndDenomination();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.hash, () => message.hash = dependency_1.common.ProtoHash.deserialize(reader));\n                        break;\n                    case 2:\n                        message.index = reader.readUint32();\n                        break;\n                    case 3:\n                        message.denomination = reader.readUint32();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoOutPointAndDenomination.deserialize(bytes);\n        }\n    }\n    block.ProtoOutPointAndDenomination = ProtoOutPointAndDenomination;\n    class ProtoAddressOutPoints extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"out_points\" in data && data.out_points != undefined) {\n                    this.out_points = data.out_points;\n                }\n            }\n            if (!this.out_points)\n                this.out_points = new Map();\n        }\n        get out_points() {\n            return pb_1.Message.getField(this, 1);\n        }\n        set out_points(value) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoAddressOutPoints({});\n            if (typeof data.out_points == \"object\") {\n                message.out_points = new Map(Object.entries(data.out_points).map(([key, value]) => [key, ProtoOutPointAndDenomination.fromObject(value)]));\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.out_points != null) {\n                data.out_points = (Object.fromEntries)((Array.from)(this.out_points).map(([key, value]) => [key, value.toObject()]));\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            for (const [key, value] of this.out_points) {\n                writer.writeMessage(1, this.out_points, () => {\n                    writer.writeString(1, key);\n                    writer.writeMessage(2, value, () => value.serialize(writer));\n                });\n            }\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoAddressOutPoints();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.out_points, reader, reader.readString, () => {\n                            let value;\n                            reader.readMessage(message, () => value = ProtoOutPointAndDenomination.deserialize(reader));\n                            return value;\n                        }));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoAddressOutPoints.deserialize(bytes);\n        }\n    }\n    block.ProtoAddressOutPoints = ProtoAddressOutPoints;\n    class ProtoOutPointsMap extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"entries\" in data && data.entries != undefined) {\n                    this.entries = data.entries;\n                }\n            }\n            if (!this.entries)\n                this.entries = new Map();\n        }\n        get entries() {\n            return pb_1.Message.getField(this, 1);\n        }\n        set entries(value) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoOutPointsMap({});\n            if (typeof data.entries == \"object\") {\n                message.entries = new Map(Object.entries(data.entries).map(([key, value]) => [key, ProtoAddressOutPoints.fromObject(value)]));\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.entries != null) {\n                data.entries = (Object.fromEntries)((Array.from)(this.entries).map(([key, value]) => [key, value.toObject()]));\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            for (const [key, value] of this.entries) {\n                writer.writeMessage(1, this.entries, () => {\n                    writer.writeString(1, key);\n                    writer.writeMessage(2, value, () => value.serialize(writer));\n                });\n            }\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoOutPointsMap();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.entries, reader, reader.readString, () => {\n                            let value;\n                            reader.readMessage(message, () => value = ProtoAddressOutPoints.deserialize(reader));\n                            return value;\n                        }));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoOutPointsMap.deserialize(bytes);\n        }\n    }\n    block.ProtoOutPointsMap = ProtoOutPointsMap;\n    class ProtoSpentUTXO extends pb_1.Message {\n        #one_of_decls = [[1], [2]];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"outpoint\" in data && data.outpoint != undefined) {\n                    this.outpoint = data.outpoint;\n                }\n                if (\"sutxo\" in data && data.sutxo != undefined) {\n                    this.sutxo = data.sutxo;\n                }\n            }\n        }\n        get outpoint() {\n            return pb_1.Message.getWrapperField(this, ProtoOutPoint, 1);\n        }\n        set outpoint(value) {\n            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);\n        }\n        get has_outpoint() {\n            return pb_1.Message.getField(this, 1) != null;\n        }\n        get sutxo() {\n            return pb_1.Message.getWrapperField(this, ProtoTxOut, 2);\n        }\n        set sutxo(value) {\n            pb_1.Message.setOneofWrapperField(this, 2, this.#one_of_decls[1], value);\n        }\n        get has_sutxo() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        get _outpoint() {\n            const cases = {\n                0: \"none\",\n                1: \"outpoint\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1])];\n        }\n        get _sutxo() {\n            const cases = {\n                0: \"none\",\n                2: \"sutxo\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [2])];\n        }\n        static fromObject(data) {\n            const message = new ProtoSpentUTXO({});\n            if (data.outpoint != null) {\n                message.outpoint = ProtoOutPoint.fromObject(data.outpoint);\n            }\n            if (data.sutxo != null) {\n                message.sutxo = ProtoTxOut.fromObject(data.sutxo);\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.outpoint != null) {\n                data.outpoint = this.outpoint.toObject();\n            }\n            if (this.sutxo != null) {\n                data.sutxo = this.sutxo.toObject();\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.has_outpoint)\n                writer.writeMessage(1, this.outpoint, () => this.outpoint.serialize(writer));\n            if (this.has_sutxo)\n                writer.writeMessage(2, this.sutxo, () => this.sutxo.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoSpentUTXO();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.outpoint, () => message.outpoint = ProtoOutPoint.deserialize(reader));\n                        break;\n                    case 2:\n                        reader.readMessage(message.sutxo, () => message.sutxo = ProtoTxOut.deserialize(reader));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoSpentUTXO.deserialize(bytes);\n        }\n    }\n    block.ProtoSpentUTXO = ProtoSpentUTXO;\n    class ProtoSpentUTXOs extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"sutxos\" in data && data.sutxos != undefined) {\n                    this.sutxos = data.sutxos;\n                }\n            }\n        }\n        get sutxos() {\n            return pb_1.Message.getRepeatedWrapperField(this, ProtoSpentUTXO, 1);\n        }\n        set sutxos(value) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoSpentUTXOs({});\n            if (data.sutxos != null) {\n                message.sutxos = data.sutxos.map(item => ProtoSpentUTXO.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.sutxos != null) {\n                data.sutxos = this.sutxos.map((item) => item.toObject());\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.sutxos.length)\n                writer.writeRepeatedMessage(1, this.sutxos, (item) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoSpentUTXOs();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.sutxos, () => pb_1.Message.addToRepeatedWrapperField(message, 1, ProtoSpentUTXO.deserialize(reader), ProtoSpentUTXO));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoSpentUTXOs.deserialize(bytes);\n        }\n    }\n    block.ProtoSpentUTXOs = ProtoSpentUTXOs;\n    class ProtoKeys extends pb_1.Message {\n        #one_of_decls = [];\n        constructor(data) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"keys\" in data && data.keys != undefined) {\n                    this.keys = data.keys;\n                }\n            }\n        }\n        get keys() {\n            return pb_1.Message.getFieldWithDefault(this, 1, []);\n        }\n        set keys(value) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        static fromObject(data) {\n            const message = new ProtoKeys({});\n            if (data.keys != null) {\n                message.keys = data.keys;\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.keys != null) {\n                data.keys = this.keys;\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.keys.length)\n                writer.writeRepeatedBytes(1, this.keys);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ProtoKeys();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        pb_1.Message.addToRepeatedField(message, 1, reader.readBytes());\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return ProtoKeys.deserialize(bytes);\n        }\n    }\n    block.ProtoKeys = ProtoKeys;\n})(block || (block = {}));\n//# sourceMappingURL=proto_block.js.map","import { hexlify } from '../utils/index.js';\nimport * as Proto from './protoc/proto_block.js';\n/**\n * @category Encoding\n * @param {ProtoTransaction} protoTx - The signed constructed transaction\n * @returns {string} - The Protobuf encoded transaction\n */\nexport function encodeProtoTransaction(protoTx) {\n    const tx = Proto.block.ProtoTransaction.fromObject(protoTx);\n    return hexlify(tx.serialize());\n}\n/**\n * @category Encoding\n * @param {ProtoWorkObject} protoWo - The constructed WorkObject\n * @returns {string} - The Protobuf encoded WorkObject\n */\nexport function encodeProtoWorkObject(protoWo) {\n    const wo = Proto.block.ProtoWorkObject.fromObject(protoWo);\n    return hexlify(wo.serialize());\n}\n//# sourceMappingURL=proto-encode.js.map","import * as Proto from './protoc/proto_block.js';\n/**\n * @category Encoding\n * @param {Uint8Array} bytes - The Protobuf encoded transaction\n * @returns {ProtoTransaction} - The decoded transaction\n */\nexport function decodeProtoTransaction(bytes) {\n    const tx = Proto.block.ProtoTransaction.deserialize(bytes);\n    const result = tx.toObject();\n    if (result.to?.length == 0) {\n        result.to = null;\n    }\n    return result;\n}\n/**\n * @category Encoding\n * @param {Uint8Array} bytes - The Protobuf encoded work object\n * @returns {ProtoWorkObject} - The decoded work object\n */\nexport function decodeProtoWorkObject(bytes) {\n    const wo = Proto.block.ProtoWorkObject.deserialize(bytes);\n    return wo.toObject();\n}\n//# sourceMappingURL=proto-decode.js.map","/**\n * Using strings in Ethereum (or any security-basd system) requires additional care. These utilities attempt to mitigate\n * some of the safety issues as well as provide the ability to recover and analyse strings.\n *\n * @subsection api/utils:Strings and UTF-8  [about-strings]\n */\nimport { getBytes } from '../utils/data.js';\nimport { assertArgument, assertNormalize } from '../utils/errors.js';\n// `output` and `badCodepoint` are passed to calls below, but not used in the function\nfunction errorFunc(reason, offset, bytes, \n// eslint-disable-next-line @typescript-eslint/no-unused-vars\noutput, \n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nbadCodepoint) {\n    assertArgument(false, `invalid codepoint at offset ${offset}; ${reason}`, 'bytes', bytes);\n}\n// `output` and `badCodepoint` are passed to calls below, but not used in the function\nfunction ignoreFunc(reason, offset, bytes, \n// eslint-disable-next-line @typescript-eslint/no-unused-vars\noutput, \n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nbadCodepoint) {\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === 'BAD_PREFIX' || reason === 'UNEXPECTED_CONTINUE') {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) {\n                break;\n            }\n            i++;\n        }\n        return i;\n    }\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === 'OVERRUN') {\n        return bytes.length - offset - 1;\n    }\n    // Nothing to skip\n    return 0;\n}\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === 'OVERLONG') {\n        assertArgument(typeof badCodepoint === 'number', 'invalid bad code point for replacement', 'badCodepoint', badCodepoint);\n        output.push(badCodepoint);\n        return 0;\n    }\n    // Put the replacement character into the output\n    output.push(0xfffd);\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n/**\n * A handful of popular, built-in UTF-8 error handling strategies.\n *\n * **`\"error\"`** - throws on ANY illegal UTF-8 sequence or non-canonical (overlong) codepoints (this is the default)\n *\n * **`\"ignore\"`** - silently drops any illegal UTF-8 sequence and accepts non-canonical (overlong) codepoints\n *\n * **`\"replace\"`** - replace any illegal UTF-8 sequence with the UTF-8 replacement character (i.e. `\"\\\\ufffd\"`) and\n * accepts non-canonical (overlong) codepoints\n *\n * @category Encoding\n * @returns Record<\"error\" | \"ignore\" | \"replace\", Utf8ErrorFunc>\n */\nexport const Utf8ErrorFuncs = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc,\n});\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(_bytes, onError) {\n    if (onError == null) {\n        onError = Utf8ErrorFuncs.error;\n    }\n    const bytes = getBytes(_bytes, 'bytes');\n    const result = [];\n    let i = 0;\n    // Invalid bytes are ignored\n    while (i < bytes.length) {\n        const c = bytes[i++];\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n            // 1110 xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n        }\n        else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError('UNEXPECTED_CONTINUE', i - 1, bytes, result);\n            }\n            else {\n                i += onError('BAD_PREFIX', i - 1, bytes, result);\n            }\n            continue;\n        }\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError('OVERRUN', i - 1, bytes, result);\n            continue;\n        }\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n        for (let j = 0; j < extraLength; j++) {\n            const nextChar = bytes[i];\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError('MISSING_CONTINUE', i, bytes, result);\n                res = null;\n                break;\n            }\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n        // See above loop for invalid continuation byte\n        if (res === null) {\n            continue;\n        }\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError('OUT_OF_RANGE', i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError('UTF16_SURROGATE', i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError('OVERLONG', i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        result.push(res);\n    }\n    return result;\n}\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n/**\n * Returns the UTF-8 byte representation of `str`.\n *\n * If `form` is specified, the string is normalized.\n *\n * @category Encoding\n * @param {string} str - The string to convert.\n * @param {UnicodeNormalizationForm} [form] - The normalization form to use.\n * @returns {Uint8Array} The UTF-8 byte representation.\n * @throws {Error} If the UTF-8 conversion fails.\n */\nexport function toUtf8Bytes(str, form) {\n    if (form != null) {\n        assertNormalize(form);\n        str = str.normalize(form);\n    }\n    const result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n        if (c < 0x80) {\n            result.push(c);\n        }\n        else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n            assertArgument(i < str.length && (c2 & 0xfc00) === 0xdc00, 'invalid surrogate pair', 'str', str);\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n        }\n        else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n    return new Uint8Array(result);\n}\n/**\n * @ignore\n */\nfunction _toUtf8String(codePoints) {\n    return codePoints\n        .map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(((codePoint >> 10) & 0x3ff) + 0xd800, (codePoint & 0x3ff) + 0xdc00);\n    })\n        .join('');\n}\n/**\n * Returns the string represented by the UTF-8 data `bytes`.\n *\n * When `onError` function is specified, it is called on UTF-8 errors allowing recovery using the\n * {@link Utf8ErrorFunc | **Utf8ErrorFunc**} API. (default: [error](Utf8ErrorFuncs))\n *\n * @category Encoding\n * @param {BytesLike} bytes - The UTF-8 data to convert.\n * @param {Utf8ErrorFunc} [onError] - The error handling function.\n * @returns {string} The string.\n */\nexport function toUtf8String(bytes, onError) {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n/**\n * Returns the UTF-8 code-points for `str`.\n *\n * If `form` is specified, the string is normalized.\n *\n * @category Encoding\n * @param {string} str - The string to convert.\n * @param {UnicodeNormalizationForm} [form] - The normalization form to use.\n * @returns {number[]} The UTF-8 code-points.\n */\nexport function toUtf8CodePoints(str, form) {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n//# sourceMappingURL=utf8.js.map","import { assert } from './errors.js';\n// @TODO: timeout is completely ignored; start a Promise.any with a reject?\n// TODO: `options` is not used; remove?\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function createGetUrl(options) {\n    async function getUrl(req, _signal) {\n        const protocol = req.url.split(':')[0].toLowerCase();\n        assert(protocol === 'http' || protocol === 'https', `unsupported protocol ${protocol}`, 'UNSUPPORTED_OPERATION', {\n            info: { protocol },\n            operation: 'request',\n        });\n        assert(protocol === 'https' || !req.credentials || req.allowInsecureAuthentication, 'insecure authorized connections unsupported', 'UNSUPPORTED_OPERATION', {\n            operation: 'request',\n        });\n        let signal = undefined;\n        if (_signal) {\n            const controller = new AbortController();\n            signal = controller.signal;\n            _signal.addListener(() => {\n                controller.abort();\n            });\n        }\n        const init = {\n            method: req.method,\n            headers: new Headers(Array.from(req)),\n            body: req.body || undefined,\n            signal,\n        };\n        const resp = await fetch(req.url, init);\n        const headers = {};\n        resp.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n        const respBody = await resp.arrayBuffer();\n        const body = respBody == null ? null : new Uint8Array(respBody);\n        return {\n            statusCode: resp.status,\n            statusMessage: resp.statusText,\n            headers,\n            body,\n        };\n    }\n    return getUrl;\n}\n// @TODO: remove in v7; provided for backwards compat\nconst defaultGetUrl = createGetUrl({});\nexport async function getUrl(req, _signal) {\n    return defaultGetUrl(req, _signal);\n}\n//# sourceMappingURL=geturl-browser.js.map","/**\n * Fetching content from the web is environment-specific, so quais provides an abstraction that each environment can\n * implement to provide this service.\n *\n * On [Node.js](https://nodejs.org/), the `http` and `https` libs are used to create a request object, register event\n * listeners and process data and populate the {@link FetchResponse | **FetchResponse**}.\n *\n * In a browser, the [DOM fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) is used, and the resulting\n * `Promise` is waited on to retrieve the payload.\n *\n * The {@link FetchRequest | **FetchRequest**} is responsible for handling many common situations, such as redirects,\n * server throttling, authentication, etc.\n *\n * It also handles common gateways, such as IPFS and data URIs.\n */\nimport { decodeBase64, encodeBase64 } from '../encoding/base64.js';\nimport { hexlify } from './data.js';\nimport { assert, assertArgument } from './errors.js';\nimport { defineProperties } from './properties.js';\nimport { toUtf8Bytes, toUtf8String } from '../encoding/index.js';\nimport { createGetUrl } from './geturl.js';\nconst MAX_ATTEMPTS = 12;\nconst SLOT_INTERVAL = 250;\n// The global FetchGetUrlFunc implementation.\nlet defaultGetUrlFunc = createGetUrl();\nconst reData = new RegExp('^data:([^;:]*)?(;base64)?,(.*)$', 'i');\nconst reIpfs = new RegExp('^ipfs://(ipfs/)?(.*)$', 'i');\n// If locked, new Gateways cannot be added\nlet locked = false;\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs\n// TODO: `signal` is not used; remove?\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nasync function dataGatewayFunc(url, signal) {\n    try {\n        const match = url.match(reData);\n        if (!match) {\n            throw new Error('invalid data');\n        }\n        return new FetchResponse(200, 'OK', {\n            'content-type': match[1] || 'text/plain',\n        }, match[2] ? decodeBase64(match[3]) : unpercent(match[3]));\n    }\n    catch (error) {\n        return new FetchResponse(599, 'BAD REQUEST (invalid data: URI)', {}, null, new FetchRequest(url));\n    }\n}\n/**\n * Returns a {@link FetchGatewayFunc | **FetchGatewayFunc**} for fetching content from a standard IPFS gateway hosted at\n * `baseUrl`.\n *\n * @category Utils\n * @param {string} baseUrl - The base URL of the IPFS gateway.\n * @returns {FetchGatewayFunc} The gateway function.\n */\nfunction getIpfsGatewayFunc(baseUrl) {\n    // TODO: `signal` is not used; remove?\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async function gatewayIpfs(url, signal) {\n        try {\n            const match = url.match(reIpfs);\n            if (!match) {\n                throw new Error('invalid link');\n            }\n            return new FetchRequest(`${baseUrl}${match[2]}`);\n        }\n        catch (error) {\n            return new FetchResponse(599, 'BAD REQUEST (invalid IPFS URI)', {}, null, new FetchRequest(url));\n        }\n    }\n    return gatewayIpfs;\n}\nconst Gateways = {\n    data: dataGatewayFunc,\n    ipfs: getIpfsGatewayFunc('https://gateway.ipfs.io/ipfs/'),\n};\nconst fetchSignals = new WeakMap();\n/**\n * @ignore\n */\nexport class FetchCancelSignal {\n    #listeners;\n    #cancelled;\n    constructor(request) {\n        this.#listeners = [];\n        this.#cancelled = false;\n        fetchSignals.set(request, () => {\n            if (this.#cancelled) {\n                return;\n            }\n            this.#cancelled = true;\n            for (const listener of this.#listeners) {\n                setTimeout(() => {\n                    listener();\n                }, 0);\n            }\n            this.#listeners = [];\n        });\n    }\n    addListener(listener) {\n        assert(!this.#cancelled, 'singal already cancelled', 'UNSUPPORTED_OPERATION', {\n            operation: 'fetchCancelSignal.addCancelListener',\n        });\n        this.#listeners.push(listener);\n    }\n    get cancelled() {\n        return this.#cancelled;\n    }\n    checkSignal() {\n        assert(!this.cancelled, 'cancelled', 'CANCELLED', {});\n    }\n}\n// Check the signal, throwing if it is cancelled\nfunction checkSignal(signal) {\n    if (signal == null) {\n        throw new Error('missing signal; should not happen');\n    }\n    signal.checkSignal();\n    return signal;\n}\n/**\n * Represents a request for a resource using a URI.\n *\n * By default, the supported schemes are `HTTP`, `HTTPS`, `data:`, and `IPFS:`.\n *\n * Additional schemes can be added globally using {@link registerGateway | **registerGateway**}.\n *\n * @category Utils\n * @example\n *\n * ```ts\n * req = new FetchRequest('https://www.ricmoo.com');\n * resp = await req.send();\n * resp.body.length;\n * ```\n */\nexport class FetchRequest {\n    #allowInsecure;\n    #gzip;\n    #headers;\n    #method;\n    #timeout;\n    #url;\n    #body;\n    #bodyType;\n    #creds;\n    // Hooks\n    #preflight;\n    #process;\n    #retry;\n    #signal;\n    #throttle;\n    #getUrlFunc;\n    /**\n     * The fetch URL to request.\n     */\n    get url() {\n        return this.#url;\n    }\n    set url(url) {\n        this.#url = String(url);\n    }\n    /**\n     * The fetch body, if any, to send as the request body. (default: null)\n     *\n     * When setting a body, the intrinsic `Content-Type` is automatically set and will be used if **not overridden** by\n     * setting a custom header.\n     *\n     * If `body` is null, the body is cleared (along with the intrinsic `Content-Type`).\n     *\n     * If `body` is a string, the intrinsic `Content-Type` is set to `text/plain`.\n     *\n     * If `body` is a Uint8Array, the intrinsic `Content-Type` is set to `application/octet-stream`.\n     *\n     * If `body` is any other object, the intrinsic `Content-Type` is set to `application/json`.\n     */\n    get body() {\n        if (this.#body == null) {\n            return null;\n        }\n        return new Uint8Array(this.#body);\n    }\n    set body(body) {\n        if (body == null) {\n            this.#body = undefined;\n            this.#bodyType = undefined;\n        }\n        else if (typeof body === 'string') {\n            this.#body = toUtf8Bytes(body);\n            this.#bodyType = 'text/plain';\n        }\n        else if (body instanceof Uint8Array) {\n            this.#body = body;\n            this.#bodyType = 'application/octet-stream';\n        }\n        else if (typeof body === 'object') {\n            this.#body = toUtf8Bytes(JSON.stringify(body));\n            this.#bodyType = 'application/json';\n        }\n        else {\n            throw new Error('invalid body');\n        }\n    }\n    /**\n     * Returns true if the request has a body.\n     */\n    hasBody() {\n        return this.#body != null;\n    }\n    /**\n     * The HTTP method to use when requesting the URI. If no method has been explicitly set, then `GET` is used if the\n     * body is null and `POST` otherwise.\n     */\n    get method() {\n        if (this.#method) {\n            return this.#method;\n        }\n        if (this.hasBody()) {\n            return 'POST';\n        }\n        return 'GET';\n    }\n    set method(method) {\n        if (method == null) {\n            method = '';\n        }\n        this.#method = String(method).toUpperCase();\n    }\n    /**\n     * The headers that will be used when requesting the URI. All keys are lower-case.\n     *\n     * This object is a copy, so any changes will **NOT** be reflected in the `FetchRequest`.\n     *\n     * To set a header entry, use the `setHeader` method.\n     */\n    get headers() {\n        const headers = Object.assign({}, this.#headers);\n        if (this.#creds) {\n            headers['authorization'] = `Basic ${encodeBase64(toUtf8Bytes(this.#creds))}`;\n        }\n        if (this.allowGzip) {\n            headers['accept-encoding'] = 'gzip';\n        }\n        if (headers['content-type'] == null && this.#bodyType) {\n            headers['content-type'] = this.#bodyType;\n        }\n        if (this.body) {\n            headers['content-length'] = String(this.body.length);\n        }\n        return headers;\n    }\n    /**\n     * Get the header for `key`, ignoring case.\n     *\n     * @param {string} key - The header key to retrieve.\n     * @returns {string} The header value.\n     */\n    getHeader(key) {\n        return this.headers[key.toLowerCase()];\n    }\n    /**\n     * Set the header for `key` to `value`. All values are coerced to a string.\n     *\n     * @param {string} key - The header key to set.\n     * @param {string | number} value - The header value to set.\n     */\n    setHeader(key, value) {\n        this.#headers[String(key).toLowerCase()] = String(value);\n    }\n    /**\n     * Clear all headers, resetting all intrinsic headers.\n     */\n    clearHeaders() {\n        this.#headers = {};\n    }\n    [Symbol.iterator]() {\n        const headers = this.headers;\n        const keys = Object.keys(headers);\n        let index = 0;\n        return {\n            next: () => {\n                if (index < keys.length) {\n                    const key = keys[index++];\n                    return {\n                        value: [key, headers[key]],\n                        done: false,\n                    };\n                }\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    /**\n     * The value that will be sent for the `Authorization` header.\n     *\n     * To set the credentials, use the `setCredentials` method.\n     */\n    get credentials() {\n        return this.#creds || null;\n    }\n    /**\n     * Sets an `Authorization` for `username` with `password`.\n     *\n     * @param {string} username - The username to use for basic authentication.\n     * @param {string} password - The password to use for basic authentication.\n     * @throws {Error} If the `username` contains a colon.\n     */\n    setCredentials(username, password) {\n        assertArgument(!username.match(/:/), 'invalid basic authentication username', 'username', '[REDACTED]');\n        this.#creds = `${username}:${password}`;\n    }\n    /**\n     * Enable and request gzip-encoded responses. The response will automatically be decompressed. (default: true)\n     */\n    get allowGzip() {\n        return this.#gzip;\n    }\n    set allowGzip(value) {\n        this.#gzip = !!value;\n    }\n    /**\n     * Allow `Authentication` credentials to be sent over insecure channels. (default: false)\n     */\n    get allowInsecureAuthentication() {\n        return !!this.#allowInsecure;\n    }\n    set allowInsecureAuthentication(value) {\n        this.#allowInsecure = !!value;\n    }\n    /**\n     * The timeout (in milliseconds) to wait for a complete response. (default: 5 minutes)\n     */\n    get timeout() {\n        return this.#timeout;\n    }\n    set timeout(timeout) {\n        assertArgument(timeout >= 0, 'timeout must be non-zero', 'timeout', timeout);\n        this.#timeout = timeout;\n    }\n    /**\n     * This function is called prior to each request, for example during a redirection or retry in case of server\n     * throttling.\n     *\n     * This offers an opportunity to populate headers or update content before sending a request.\n     */\n    get preflightFunc() {\n        return this.#preflight || null;\n    }\n    set preflightFunc(preflight) {\n        this.#preflight = preflight;\n    }\n    /**\n     * This function is called after each response, offering an opportunity to provide client-level throttling or\n     * updating response data.\n     *\n     * Any error thrown in this causes the `send()` to throw.\n     *\n     * To schedule a retry attempt (assuming the maximum retry limit has not been reached), use\n     * {@link FetchResponse.throwThrottleError | **FetchResponse.throwThrottleError**}.\n     */\n    get processFunc() {\n        return this.#process || null;\n    }\n    set processFunc(process) {\n        this.#process = process;\n    }\n    /**\n     * This function is called on each retry attempt.\n     */\n    get retryFunc() {\n        return this.#retry || null;\n    }\n    set retryFunc(retry) {\n        this.#retry = retry;\n    }\n    /**\n     * This function is called to fetch content from HTTP and HTTPS URLs and is platform specific (e.g. nodejs vs\n     * browsers).\n     *\n     * This is by default the currently registered global getUrl function, which can be changed using\n     * {@link registerGetUrl | **registerGetUrl**}. If this has been set, setting is to `null` will cause this\n     * FetchRequest (and any future clones) to revert back to using the currently registered global getUrl function.\n     *\n     * Setting this is generally not necessary, but may be useful for developers that wish to intercept requests or to\n     * configurege a proxy or other agent.\n     */\n    get getUrlFunc() {\n        return this.#getUrlFunc || defaultGetUrlFunc;\n    }\n    set getUrlFunc(value) {\n        this.#getUrlFunc = value;\n    }\n    /**\n     * Create a new FetchRequest instance with default values.\n     *\n     * Once created, each property may be set before issuing a `.send()` to make the request.\n     */\n    constructor(url) {\n        this.#url = String(url);\n        this.#allowInsecure = false;\n        this.#gzip = true;\n        this.#headers = {};\n        this.#method = '';\n        this.#timeout = 300000;\n        this.#throttle = {\n            slotInterval: SLOT_INTERVAL,\n            maxAttempts: MAX_ATTEMPTS,\n        };\n        this.#getUrlFunc = null;\n    }\n    toString() {\n        return `<FetchRequest method=${JSON.stringify(this.method)} url=${JSON.stringify(this.url)} headers=${JSON.stringify(this.headers)} body=${this.#body ? hexlify(this.#body) : 'null'}>`;\n    }\n    /**\n     * Update the throttle parameters used to determine maximum attempts and exponential-backoff properties.\n     *\n     * @param {FetchThrottleParams} params - The throttle parameters to set.\n     * @throws {Error} If the `slotInterval` is not a positive integer.\n     */\n    setThrottleParams(params) {\n        if (params.slotInterval != null) {\n            this.#throttle.slotInterval = params.slotInterval;\n        }\n        if (params.maxAttempts != null) {\n            this.#throttle.maxAttempts = params.maxAttempts;\n        }\n    }\n    async #send(attempt, expires, delay, _request, _response) {\n        if (attempt >= this.#throttle.maxAttempts) {\n            return _response.makeServerError('exceeded maximum retry limit');\n        }\n        assert(getTime() <= expires, 'timeout', 'TIMEOUT', {\n            operation: 'request.send',\n            reason: 'timeout',\n            request: _request,\n        });\n        if (delay > 0) {\n            await wait(delay);\n        }\n        let req = this.clone();\n        const scheme = (req.url.split(':')[0] || '').toLowerCase();\n        // Process any Gateways\n        if (scheme in Gateways) {\n            const result = await Gateways[scheme](req.url, checkSignal(_request.#signal));\n            if (result instanceof FetchResponse) {\n                let response = result;\n                if (this.processFunc) {\n                    checkSignal(_request.#signal);\n                    try {\n                        response = await this.processFunc(req, response);\n                    }\n                    catch (error) {\n                        // Something went wrong during processing; throw a 5xx server error\n                        if (error.throttle == null || typeof error.stall !== 'number') {\n                            response.makeServerError('error in post-processing function', error).assertOk();\n                        }\n                        // Ignore throttling\n                    }\n                }\n                return response;\n            }\n            req = result;\n        }\n        // We have a preflight function; update the request\n        if (this.preflightFunc) {\n            req = await this.preflightFunc(req);\n        }\n        const resp = await this.getUrlFunc(req, checkSignal(_request.#signal));\n        let response = new FetchResponse(resp.statusCode, resp.statusMessage, resp.headers, resp.body, _request);\n        if (response.statusCode === 301 || response.statusCode === 302) {\n            // Redirect\n            try {\n                const location = response.headers.location || '';\n                return req.redirect(location).#send(attempt + 1, expires, 0, _request, response);\n                // eslint-disable-next-line no-empty\n            }\n            catch (error) { }\n            // Things won't get any better on another attempt; abort\n            return response;\n        }\n        else if (response.statusCode === 429) {\n            // Throttle\n            if (this.retryFunc == null || (await this.retryFunc(req, response, attempt))) {\n                const retryAfter = response.headers['retry-after'];\n                let delay = this.#throttle.slotInterval * Math.trunc(Math.random() * Math.pow(2, attempt));\n                if (typeof retryAfter === 'string' && retryAfter.match(/^[1-9][0-9]*$/)) {\n                    delay = parseInt(retryAfter);\n                }\n                return req.clone().#send(attempt + 1, expires, delay, _request, response);\n            }\n        }\n        if (this.processFunc) {\n            checkSignal(_request.#signal);\n            try {\n                response = await this.processFunc(req, response);\n            }\n            catch (error) {\n                // Something went wrong during processing; throw a 5xx server error\n                if (error.throttle == null || typeof error.stall !== 'number') {\n                    response.makeServerError('error in post-processing function', error).assertOk();\n                }\n                // Throttle\n                let delay = this.#throttle.slotInterval * Math.trunc(Math.random() * Math.pow(2, attempt));\n                if (error.stall >= 0) {\n                    delay = error.stall;\n                }\n                return req.clone().#send(attempt + 1, expires, delay, _request, response);\n            }\n        }\n        return response;\n    }\n    /**\n     * Resolves to the response by sending the request.\n     */\n    send() {\n        assert(this.#signal == null, 'request already sent', 'UNSUPPORTED_OPERATION', {\n            operation: 'fetchRequest.send',\n        });\n        this.#signal = new FetchCancelSignal(this);\n        return this.#send(0, getTime() + this.timeout, 0, this, new FetchResponse(0, '', {}, null, this));\n    }\n    /**\n     * Cancels the inflight response, causing a `CANCELLED` error to be rejected from the\n     * {@link FetchRequest.send | **send**}.\n     */\n    cancel() {\n        assert(this.#signal != null, 'request has not been sent', 'UNSUPPORTED_OPERATION', {\n            operation: 'fetchRequest.cancel',\n        });\n        const signal = fetchSignals.get(this);\n        if (!signal) {\n            throw new Error('missing signal; should not happen');\n        }\n        signal();\n    }\n    /**\n     * Returns a new {@link FetchRequest | **FetchRequest**} that represents the redirection to `location`.\n     *\n     * @param {string} location - The location to redirect to.\n     * @returns {FetchRequest} The new request.\n     */\n    redirect(location) {\n        // Redirection; for now we only support absolute locations\n        const current = this.url.split(':')[0].toLowerCase();\n        const target = location.split(':')[0].toLowerCase();\n        // Don't allow redirecting:\n        // - non-GET requests\n        // - downgrading the security (e.g. https => http)\n        // - to non-HTTP (or non-HTTPS) protocols [this could be relaxed?]\n        assert(this.method === 'GET' && (current !== 'https' || target !== 'http') && location.match(/^https?:/), `unsupported redirect`, 'UNSUPPORTED_OPERATION', {\n            operation: `redirect(${this.method} ${JSON.stringify(this.url)} => ${JSON.stringify(location)})`,\n        });\n        // Create a copy of this request, with a new URL\n        const req = new FetchRequest(location);\n        req.method = 'GET';\n        req.allowGzip = this.allowGzip;\n        req.timeout = this.timeout;\n        req.#headers = Object.assign({}, this.#headers);\n        if (this.#body) {\n            req.#body = new Uint8Array(this.#body);\n        }\n        req.#bodyType = this.#bodyType;\n        return req;\n    }\n    /**\n     * Create a new copy of this request.\n     *\n     * @returns {FetchRequest} The new request.\n     */\n    clone() {\n        const clone = new FetchRequest(this.url);\n        // Preserve \"default method\" (i.e. null)\n        clone.#method = this.#method;\n        // Preserve \"default body\" with type, copying the Uint8Array is present\n        if (this.#body) {\n            clone.#body = this.#body;\n        }\n        clone.#bodyType = this.#bodyType;\n        // Preserve \"default headers\"\n        clone.#headers = Object.assign({}, this.#headers);\n        // Credentials is readonly, so we copy internally\n        clone.#creds = this.#creds;\n        if (this.allowGzip) {\n            clone.allowGzip = true;\n        }\n        clone.timeout = this.timeout;\n        if (this.allowInsecureAuthentication) {\n            clone.allowInsecureAuthentication = true;\n        }\n        clone.#preflight = this.#preflight;\n        clone.#process = this.#process;\n        clone.#retry = this.#retry;\n        clone.#getUrlFunc = this.#getUrlFunc;\n        return clone;\n    }\n    /**\n     * Locks all static configuration for gateways and FetchGetUrlFunc registration.\n     */\n    static lockConfig() {\n        locked = true;\n    }\n    /**\n     * Get the current Gateway function for `scheme`.\n     *\n     * @param {string} scheme - The scheme to get the gateway for.\n     * @returns {FetchGatewayFunc | null} The gateway function, or null if not found.\n     */\n    static getGateway(scheme) {\n        return Gateways[scheme.toLowerCase()] || null;\n    }\n    /**\n     * Use the `func` when fetching URIs using `scheme`.\n     *\n     * This method affects all requests globally.\n     *\n     * If {@link FetchRequest.lockConfig | **lockConfig**} has been called, no change is made and this throws.\n     *\n     * @param {string} scheme - The scheme to register the gateway for.\n     * @param {FetchGatewayFunc} func - The gateway function to use.\n     * @throws {Error} If the scheme is `http` or `https`.\n     */\n    static registerGateway(scheme, func) {\n        scheme = scheme.toLowerCase();\n        if (scheme === 'http' || scheme === 'https') {\n            throw new Error(`cannot intercept ${scheme}; use registerGetUrl`);\n        }\n        if (locked) {\n            throw new Error('gateways locked');\n        }\n        Gateways[scheme] = func;\n    }\n    /**\n     * Use `getUrl` when fetching URIs over HTTP and HTTPS requests.\n     *\n     * This method affects all requests globally.\n     *\n     * If {@link FetchRequest.lockConfig | **lockConfig**} has been called, no change is made and this throws.\n     *\n     * @param {FetchGetUrlFunc} getUrl - The function to use for fetching HTTP and HTTPS URIs.\n     * @throws {Error} If the gateways are locked.\n     */\n    static registerGetUrl(getUrl) {\n        if (locked) {\n            throw new Error('gateways locked');\n        }\n        defaultGetUrlFunc = getUrl;\n    }\n    /**\n     * Creates a getUrl function that fetches content from HTTP and HTTPS URLs.\n     *\n     * The available `options` are dependent on the platform implementation of the default getUrl function.\n     *\n     * This is not generally something that is needed, but is useful when trying to customize simple behaviour when\n     * fetching HTTP content.\n     *\n     * @param {Record<string, any>} [options] - The options to use when creating the getUrl function.\n     * @returns {FetchGetUrlFunc} The getUrl function.\n     * @throws {Error} If the gateways are locked.\n     */\n    static createGetUrlFunc(options) {\n        return createGetUrl(options);\n    }\n    /**\n     * Creates a function that can \"fetch\" data URIs.\n     *\n     * Note that this is automatically done internally to support data URIs, so it is not necessary to register it.\n     *\n     * This is not generally something that is needed, but may be useful in a wrapper to perfom custom data URI\n     * functionality.\n     *\n     * @returns {FetchGatewayFunc} The gateway function.\n     */\n    static createDataGateway() {\n        return dataGatewayFunc;\n    }\n    /**\n     * Creates a function that will fetch IPFS (unvalidated) from a custom gateway baseUrl.\n     *\n     * The default IPFS gateway used internally is `\"https:/\\/gateway.ipfs.io/ipfs/\"`.\n     *\n     * @param {string} baseUrl - The base URL of the IPFS gateway.\n     * @returns {FetchGatewayFunc} The gateway function.\n     */\n    static createIpfsGatewayFunc(baseUrl) {\n        return getIpfsGatewayFunc(baseUrl);\n    }\n}\n/**\n * The response for a FetchRequest.\n *\n * @category Utils\n */\nexport class FetchResponse {\n    #statusCode;\n    #statusMessage;\n    #headers;\n    #body;\n    #request;\n    #error;\n    toString() {\n        return `<FetchResponse status=${this.statusCode} body=${this.#body ? hexlify(this.#body) : 'null'}>`;\n    }\n    /**\n     * The response status code.\n     */\n    get statusCode() {\n        return this.#statusCode;\n    }\n    /**\n     * The response status message.\n     */\n    get statusMessage() {\n        return this.#statusMessage;\n    }\n    /**\n     * The response headers. All keys are lower-case.\n     */\n    get headers() {\n        return Object.assign({}, this.#headers);\n    }\n    /**\n     * The response body, or `null` if there was no body.\n     */\n    get body() {\n        return this.#body == null ? null : new Uint8Array(this.#body);\n    }\n    /**\n     * The response body as a UTF-8 encoded string, or the empty string (i.e. `\"\"`) if there was no body.\n     *\n     * An error is thrown if the body is invalid UTF-8 data.\n     */\n    get bodyText() {\n        try {\n            return this.#body == null ? '' : toUtf8String(this.#body);\n        }\n        catch (error) {\n            assert(false, 'response body is not valid UTF-8 data', 'UNSUPPORTED_OPERATION', {\n                operation: 'bodyText',\n                info: { response: this },\n            });\n        }\n    }\n    /**\n     * The response body, decoded as JSON.\n     *\n     * An error is thrown if the body is invalid JSON-encoded data or if there was no body.\n     */\n    get bodyJson() {\n        try {\n            return JSON.parse(this.bodyText);\n        }\n        catch (error) {\n            assert(false, 'response body is not valid JSON', 'UNSUPPORTED_OPERATION', {\n                operation: 'bodyJson',\n                info: { response: this },\n            });\n        }\n    }\n    [Symbol.iterator]() {\n        const headers = this.headers;\n        const keys = Object.keys(headers);\n        let index = 0;\n        return {\n            next: () => {\n                if (index < keys.length) {\n                    const key = keys[index++];\n                    return {\n                        value: [key, headers[key]],\n                        done: false,\n                    };\n                }\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    constructor(statusCode, statusMessage, headers, body, request) {\n        this.#statusCode = statusCode;\n        this.#statusMessage = statusMessage;\n        this.#headers = Object.keys(headers).reduce((accum, k) => {\n            accum[k.toLowerCase()] = String(headers[k]);\n            return accum;\n        }, {});\n        this.#body = body == null ? null : new Uint8Array(body);\n        this.#request = request || null;\n        this.#error = { message: '' };\n    }\n    /**\n     * Return a Response with matching headers and body, but with an error status code (i.e. 599) and `message` with an\n     * optional `error`.\n     *\n     * @param {string} [message] - The error message to use.\n     * @param {Error} [error] - The error to use.\n     * @returns {FetchResponse} The error response.\n     */\n    makeServerError(message, error) {\n        let statusMessage;\n        if (!message) {\n            message = `${this.statusCode} ${this.statusMessage}`;\n            statusMessage = `CLIENT ESCALATED SERVER ERROR (${message})`;\n        }\n        else {\n            statusMessage = `CLIENT ESCALATED SERVER ERROR (${this.statusCode} ${this.statusMessage}; ${message})`;\n        }\n        const response = new FetchResponse(599, statusMessage, this.headers, this.body, this.#request || undefined);\n        response.#error = { message, error };\n        return response;\n    }\n    /**\n     * If called within a [request.processFunc](FetchRequest-processFunc) call, causes the request to retry as if\n     * throttled for `stall` milliseconds.\n     *\n     * @param {string} [message] - The error message to use.\n     * @param {number} [stall] - The number of milliseconds to stall before retrying.\n     * @throws {Error} If `stall` is not a non-negative integer.\n     */\n    throwThrottleError(message, stall) {\n        if (stall == null) {\n            stall = -1;\n        }\n        else {\n            assertArgument(Number.isInteger(stall) && stall >= 0, 'invalid stall timeout', 'stall', stall);\n        }\n        const error = new Error(message || 'throttling requests');\n        defineProperties(error, { stall, throttle: true });\n        throw error;\n    }\n    /**\n     * Get the header value for `key`, ignoring case.\n     *\n     * @param {string} key - The header key to retrieve.\n     * @returns {string} The header value.\n     */\n    getHeader(key) {\n        return this.headers[key.toLowerCase()];\n    }\n    /**\n     * Returns true if the response has a body.\n     *\n     * @returns {boolean} True if the response has a body.\n     * @throws {Error} If the body is invalid UTF-8 data.\n     */\n    hasBody() {\n        return this.#body != null;\n    }\n    /**\n     * The request made for this response.\n     */\n    get request() {\n        return this.#request;\n    }\n    /**\n     * Returns true if this response was a success statusCode.\n     */\n    ok() {\n        return this.#error.message === '' && this.statusCode >= 200 && this.statusCode < 300;\n    }\n    /**\n     * Throws a `SERVER_ERROR` if this response is not ok.\n     *\n     * @throws {Error} If the response is not ok.\n     */\n    assertOk() {\n        if (this.ok()) {\n            return;\n        }\n        // eslint-disable-next-line prefer-const\n        let { message, error } = this.#error;\n        if (message === '') {\n            message = `server response ${this.statusCode} ${this.statusMessage}`;\n        }\n        assert(false, message, 'SERVER_ERROR', {\n            request: this.request || 'unknown request',\n            response: this,\n            error,\n        });\n    }\n}\nfunction getTime() {\n    return new Date().getTime();\n}\nfunction unpercent(value) {\n    return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n        return String.fromCharCode(parseInt(code, 16));\n    }));\n}\nfunction wait(delay) {\n    return new Promise((resolve) => setTimeout(resolve, delay));\n}\n//# sourceMappingURL=fetch.js.map","/**\n * The **FixedNumber** class permits using values with decimal places, using fixed-pont math.\n *\n * Fixed-point math is still based on integers under-the-hood, but uses an internal offset to store fractional\n * components below, and each operation corrects for this after each operation.\n */\nimport { getBytes } from './data.js';\nimport { assert, assertArgument, assertPrivate } from './errors.js';\nimport { getBigInt, getNumber, fromTwos, mask, toBigInt } from './maths.js';\nimport { defineProperties } from './properties.js';\nconst BN_N1 = BigInt(-1);\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_5 = BigInt(5);\nconst _guard = {};\n// Constant to pull zeros from for multipliers\nlet Zeros = '0000';\nwhile (Zeros.length < 80) {\n    Zeros += Zeros;\n}\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getTens(decimals) {\n    let result = Zeros;\n    while (result.length < decimals) {\n        result += result;\n    }\n    return BigInt('1' + result.substring(0, decimals));\n}\nfunction checkValue(val, format, safeOp) {\n    const width = BigInt(format.width);\n    if (format.signed) {\n        const limit = BN_1 << (width - BN_1);\n        assert(safeOp == null || (val >= -limit && val < limit), 'overflow', 'NUMERIC_FAULT', {\n            operation: safeOp,\n            fault: 'overflow',\n            value: val,\n        });\n        if (val > BN_0) {\n            val = fromTwos(mask(val, width), width);\n        }\n        else {\n            val = -fromTwos(mask(-val, width), width);\n        }\n    }\n    else {\n        const limit = BN_1 << width;\n        assert(safeOp == null || (val >= 0 && val < limit), 'overflow', 'NUMERIC_FAULT', {\n            operation: safeOp,\n            fault: 'overflow',\n            value: val,\n        });\n        val = ((val % limit) + limit) % limit & (limit - BN_1);\n    }\n    return val;\n}\nfunction getFormat(value) {\n    if (typeof value === 'number') {\n        value = `fixed128x${value}`;\n    }\n    let signed = true;\n    let width = 128;\n    let decimals = 18;\n    if (typeof value === 'string') {\n        // Parse the format string\n        if (value === 'fixed') {\n            // defaults...\n        }\n        else if (value === 'ufixed') {\n            signed = false;\n        }\n        else {\n            const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n            assertArgument(match, 'invalid fixed format', 'format', value);\n            signed = match[1] !== 'u';\n            width = parseInt(match[2]);\n            decimals = parseInt(match[3]);\n        }\n    }\n    else if (value) {\n        // Extract the values from the object\n        const v = value;\n        const check = (key, type, defaultValue) => {\n            if (v[key] == null) {\n                return defaultValue;\n            }\n            assertArgument(typeof v[key] === type, 'invalid fixed format (' + key + ' not ' + type + ')', 'format.' + key, v[key]);\n            return v[key];\n        };\n        signed = check('signed', 'boolean', signed);\n        width = check('width', 'number', width);\n        decimals = check('decimals', 'number', decimals);\n    }\n    assertArgument(width % 8 === 0, 'invalid FixedNumber width (not byte aligned)', 'format.width', width);\n    assertArgument(decimals <= 80, 'invalid FixedNumber decimals (too large)', 'format.decimals', decimals);\n    const name = (signed ? '' : 'u') + 'fixed' + String(width) + 'x' + String(decimals);\n    return { signed, width, decimals, name };\n}\nfunction toString(val, decimals) {\n    let negative = '';\n    if (val < BN_0) {\n        negative = '-';\n        val *= BN_N1;\n    }\n    let str = val.toString();\n    // No decimal point for whole values\n    if (decimals === 0) {\n        return negative + str;\n    }\n    // Pad out to the whole component (including a whole digit)\n    while (str.length <= decimals) {\n        str = Zeros + str;\n    }\n    // Insert the decimal point\n    const index = str.length - decimals;\n    str = str.substring(0, index) + '.' + str.substring(index);\n    // Trim the whole component (leaving at least one 0)\n    while (str[0] === '0' && str[1] !== '.') {\n        str = str.substring(1);\n    }\n    // Trim the decimal component (leaving at least one 0)\n    while (str[str.length - 1] === '0' && str[str.length - 2] !== '.') {\n        str = str.substring(0, str.length - 1);\n    }\n    return negative + str;\n}\n/**\n * A FixedNumber represents a value over its {@link FixedFormat | **FixedFormat**} arithmetic field.\n *\n * A FixedNumber can be used to perform math, losslessly, on values which have decmial places.\n *\n * A FixedNumber has a fixed bit-width to store values in, and stores all values internally by multiplying the value by\n * 10 raised to the power of `decimals`.\n *\n * If operations are performed that cause a value to grow too high (close to positive infinity) or too low (close to\n * negative infinity), the value is said to overflow.\n *\n * For example, an 8-bit signed value, with 0 decimals may only be within the range `-128` to `127`; so `-128 - 1` will\n * overflow and become `127`. Likewise, `127 + 1` will overflow and become `-127`.\n *\n * Many operation have a normal and unsafe variant. The normal variant will throw a\n * [NumericFaultError](../interfaces/NumericFaultError) on any overflow, while the unsafe variant will silently allow\n * overflow, corrupting its value value.\n *\n * If operations are performed that cause a value to become too small (close to zero), the value loses precison and is\n * said to underflow.\n *\n * For example, an value with 1 decimal place may store a number as small as `0.1`, but the value of `0.1 / 2` is\n * `0.05`, which cannot fit into 1 decimal place, so underflow occurs which means precision is lost and the value\n * becomes `0`.\n *\n * Some operations have a normal and signalling variant. The normal variant will silently ignore underflow, while the\n * signalling variant will thow a [NumericFaultError](../interfaces/NumericFaultError) on underflow.\n *\n * @category Utils\n */\nexport class FixedNumber {\n    /**\n     * The specific fixed-point arithmetic field for this value.\n     */\n    format;\n    #format;\n    // The actual value (accounting for decimals)\n    #val;\n    // A base-10 value to multiple values by to maintain the magnitude\n    #tens;\n    /**\n     * This is a property so console.log shows a human-meaningful value.\n     *\n     * @ignore\n     */\n    _value;\n    // Use this when changing this file to get some typing info,\n    // but then switch to any to mask the internal type\n    // constructor(guard: any, value: bigint, format: _FixedFormat) {\n    /**\n     * @ignore\n     */\n    constructor(guard, value, format) {\n        assertPrivate(guard, _guard, 'FixedNumber');\n        this.#val = value;\n        this.#format = format;\n        const _value = toString(value, format.decimals);\n        defineProperties(this, { format: format.name, _value });\n        this.#tens = getTens(format.decimals);\n    }\n    /**\n     * If true, negative values are permitted, otherwise only positive values and zero are allowed.\n     */\n    get signed() {\n        return this.#format.signed;\n    }\n    /**\n     * The number of bits available to store the value.\n     */\n    get width() {\n        return this.#format.width;\n    }\n    /**\n     * The number of decimal places in the fixed-point arithment field.\n     */\n    get decimals() {\n        return this.#format.decimals;\n    }\n    /**\n     * The value as an integer, based on the smallest unit the {@link FixedNumber.decimals | **decimals**} allow.\n     */\n    get value() {\n        return this.#val;\n    }\n    #checkFormat(other) {\n        assertArgument(this.format === other.format, 'incompatible format; use fixedNumber.toFormat', 'other', other);\n    }\n    #checkValue(val, safeOp) {\n        val = checkValue(val, this.#format, safeOp);\n        return new FixedNumber(_guard, val, this.#format);\n    }\n    #add(o, safeOp) {\n        this.#checkFormat(o);\n        return this.#checkValue(this.#val + o.#val, safeOp);\n    }\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} with the result of `this` added to `other`, ignoring overflow.\n     *\n     * @param {FixedNumber} other - The value to add to `this`.\n     * @returns {FixedNumber} The result of the addition.\n     */\n    addUnsafe(other) {\n        return this.#add(other);\n    }\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} with the result of `this` added to `other`. A\n     * [NumericFaultError](../interfaces/NumericFaultError) is thrown if overflow occurs.\n     *\n     * @param {FixedNumber} other - The value to add to `this`.\n     * @returns {FixedNumber} The result of the addition.\n     */\n    add(other) {\n        return this.#add(other, 'add');\n    }\n    #sub(o, safeOp) {\n        this.#checkFormat(o);\n        return this.#checkValue(this.#val - o.#val, safeOp);\n    }\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} with the result of `other` subtracted from `this`, ignoring\n     * overflow.\n     *\n     * @param {FixedNumber} other - The value to subtract from `this`.\n     * @returns {FixedNumber} The result of the subtraction.\n     */\n    subUnsafe(other) {\n        return this.#sub(other);\n    }\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} with the result of `other` subtracted from `this`. A\n     * [NumericFaultError](../interfaces/NumericFaultError) is thrown if overflow occurs.\n     *\n     * @param {FixedNumber} other - The value to subtract from `this`.\n     * @returns {FixedNumber} The result of the subtraction.\n     */\n    sub(other) {\n        return this.#sub(other, 'sub');\n    }\n    #mul(o, safeOp) {\n        this.#checkFormat(o);\n        return this.#checkValue((this.#val * o.#val) / this.#tens, safeOp);\n    }\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} with the result of `this` multiplied by `other`, ignoring\n     * overflow and underflow (precision loss).\n     *\n     * @param {FixedNumber} other - The value to multiply `this` by.\n     * @returns {FixedNumber} The result of the multiplication.\n     */\n    mulUnsafe(other) {\n        return this.#mul(other);\n    }\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} with the result of `this` multiplied by `other`. A\n     * [NumericFaultError](../interfaces/NumericFaultError) is thrown if overflow occurs.\n     *\n     * @param {FixedNumber} other - The value to multiply `this` by.\n     * @returns {FixedNumber} The result of the multiplication.\n     */\n    mul(other) {\n        return this.#mul(other, 'mul');\n    }\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} with the result of `this` multiplied by `other`. A\n     * [NumericFaultError](../interfaces/NumericFaultError) is thrown if overflow occurs or if underflow (precision\n     * loss) occurs.\n     *\n     * @param {FixedNumber} other - The value to multiply `this` by.\n     * @returns {FixedNumber} The result of the multiplication.\n     * @throws {NumericFaultError} Thrown if overflow or underflow occurs.\n     * @throws {NumericFaultError} Thrown if division by 0 occurs.\n     */\n    mulSignal(other) {\n        this.#checkFormat(other);\n        const value = this.#val * other.#val;\n        assert(value % this.#tens === BN_0, 'precision lost during signalling mul', 'NUMERIC_FAULT', {\n            operation: 'mulSignal',\n            fault: 'underflow',\n            value: this,\n        });\n        return this.#checkValue(value / this.#tens, 'mulSignal');\n    }\n    #div(o, safeOp) {\n        assert(o.#val !== BN_0, 'division by zero', 'NUMERIC_FAULT', {\n            operation: 'div',\n            fault: 'divide-by-zero',\n            value: this,\n        });\n        this.#checkFormat(o);\n        return this.#checkValue((this.#val * this.#tens) / o.#val, safeOp);\n    }\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} with the result of `this` divided by `other`, ignoring\n     * underflow (precision loss). A [NumericFaultError](../interfaces/NumericFaultError) is thrown if overflow occurs.\n     *\n     * @param {FixedNumber} other - The value to divide `this` by.\n     * @returns {FixedNumber} The result of the division.\n     */\n    divUnsafe(other) {\n        return this.#div(other);\n    }\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} with the result of `this` divided by `other`, ignoring\n     * underflow (precision loss). A [NumericFaultError](../interfaces/NumericFaultError) is thrown if overflow occurs.\n     *\n     * @param {FixedNumber} other - The value to divide `this` by.\n     * @returns {FixedNumber} The result of the division.\n     */\n    div(other) {\n        return this.#div(other, 'div');\n    }\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} with the result of `this` divided by `other`. A\n     * [NumericFaultError](../interfaces/NumericFaultError) is thrown if underflow (precision loss) occurs.\n     *\n     * @param {FixedNumber} other - The value to divide `this` by.\n     * @returns {FixedNumber} The result of the division.\n     * @throws {NumericFaultError} Thrown if underflow occurs.\n     */\n    divSignal(other) {\n        assert(other.#val !== BN_0, 'division by zero', 'NUMERIC_FAULT', {\n            operation: 'div',\n            fault: 'divide-by-zero',\n            value: this,\n        });\n        this.#checkFormat(other);\n        const value = this.#val * this.#tens;\n        assert(value % other.#val === BN_0, 'precision lost during signalling div', 'NUMERIC_FAULT', {\n            operation: 'divSignal',\n            fault: 'underflow',\n            value: this,\n        });\n        return this.#checkValue(value / other.#val, 'divSignal');\n    }\n    /**\n     * Returns a comparison result between `this` and `other`.\n     *\n     * This is suitable for use in sorting, where `-1` implies `this` is smaller, `1` implies `this` is larger and `0`\n     * implies both are equal.\n     *\n     * @param {FixedNumber} other - The value to compare to `this`.\n     * @returns {number} The comparison result.\n     */\n    cmp(other) {\n        let a = this.value, b = other.value;\n        // Coerce a and b to the same magnitude\n        const delta = this.decimals - other.decimals;\n        if (delta > 0) {\n            b *= getTens(delta);\n        }\n        else if (delta < 0) {\n            a *= getTens(-delta);\n        }\n        // Comnpare\n        if (a < b) {\n            return -1;\n        }\n        if (a > b) {\n            return 1;\n        }\n        return 0;\n    }\n    /**\n     * Returns true if `other` is equal to `this`.\n     *\n     * @param {FixedNumber} other - The value to compare to `this`.\n     * @returns {boolean} True if `other` is equal to `this`.\n     */\n    eq(other) {\n        return this.cmp(other) === 0;\n    }\n    /**\n     * Returns true if `other` is less than to `this`.\n     *\n     * @param {FixedNumber} other - The value to compare to `this`.\n     * @returns {boolean} True if `other` is less than to `this`.\n     */\n    lt(other) {\n        return this.cmp(other) < 0;\n    }\n    /**\n     * Returns true if `other` is less than or equal to `this`.\n     *\n     * @param {FixedNumber} other - The value to compare to `this`.\n     * @returns {boolean} True if `other` is less than or equal to `this`.\n     */\n    lte(other) {\n        return this.cmp(other) <= 0;\n    }\n    /**\n     * Returns true if `other` is greater than to `this`.\n     *\n     * @param {FixedNumber} other - The value to compare to `this`.\n     * @returns {boolean} True if `other` is greater than to `this`.\n     */\n    gt(other) {\n        return this.cmp(other) > 0;\n    }\n    /**\n     * Returns true if `other` is greater than or equal to `this`.\n     *\n     * @param {FixedNumber} other - The value to compare to `this`.\n     * @returns {boolean} True if `other` is greater than or equal to `this`.\n     */\n    gte(other) {\n        return this.cmp(other) >= 0;\n    }\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} which is the largest **integer** that is less than or equal to\n     * `this`.\n     *\n     * The decimal component of the result will always be `0`.\n     *\n     * @returns {FixedNumber} The floored value.\n     */\n    floor() {\n        let val = this.#val;\n        if (this.#val < BN_0) {\n            val -= this.#tens - BN_1;\n        }\n        val = (this.#val / this.#tens) * this.#tens;\n        return this.#checkValue(val, 'floor');\n    }\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} which is the smallest **integer** that is greater than or\n     * equal to `this`.\n     *\n     * The decimal component of the result will always be `0`.\n     *\n     * @returns {FixedNumber} The ceiling value.\n     */\n    ceiling() {\n        let val = this.#val;\n        if (this.#val > BN_0) {\n            val += this.#tens - BN_1;\n        }\n        val = (this.#val / this.#tens) * this.#tens;\n        return this.#checkValue(val, 'ceiling');\n    }\n    /**\n     * Returns a new {@link FixedNumber | **FixedNumber**} with the decimal component rounded up on ties at `decimals`\n     * places.\n     *\n     * @param {number} [decimals] - The number of decimal places to round to.\n     * @returns {FixedNumber} The rounded value.\n     */\n    round(decimals) {\n        if (decimals == null) {\n            decimals = 0;\n        }\n        // Not enough precision to not already be rounded\n        if (decimals >= this.decimals) {\n            return this;\n        }\n        const delta = this.decimals - decimals;\n        const bump = BN_5 * getTens(delta - 1);\n        let value = this.value + bump;\n        const tens = getTens(delta);\n        value = (value / tens) * tens;\n        checkValue(value, this.#format, 'round');\n        return new FixedNumber(_guard, value, this.#format);\n    }\n    /**\n     * Returns true if `this` is equal to `0`.\n     *\n     * @returns {boolean} True if `this` is equal to `0`.\n     */\n    isZero() {\n        return this.#val === BN_0;\n    }\n    /**\n     * Returns true if `this` is less than `0`.\n     *\n     * @returns {boolean} True if `this` is less than `0`.\n     */\n    isNegative() {\n        return this.#val < BN_0;\n    }\n    /**\n     * Returns the string representation of `this`.\n     *\n     * @returns {string} The string representation.\n     */\n    toString() {\n        return this._value;\n    }\n    /**\n     * Returns a float approximation.\n     *\n     * Due to IEEE 754 precission (or lack thereof), this function can only return an approximation and most values will\n     * contain rounding errors.\n     *\n     * @returns {number} The float approximation.\n     */\n    toUnsafeFloat() {\n        return parseFloat(this.toString());\n    }\n    /**\n     * Return a new {@link FixedNumber | **FixedNumber**} with the same value but has had its field set to `format`.\n     *\n     * This will throw if the value cannot fit into `format`.\n     *\n     * @param {FixedFormat} format - The new format for the value.\n     */\n    toFormat(format) {\n        return FixedNumber.fromString(this.toString(), format);\n    }\n    /**\n     * Creates a new {@link FixedNumber | **FixedNumber**} for `value` divided by `decimal` places with `format`.\n     *\n     * This will throw a [NumericFaultError](../interfaces/NumericFaultError) if `value` (once adjusted for `decimals`)\n     * cannot fit in `format`, either due to overflow or underflow (precision loss).\n     *\n     * @param {BigNumberish} _value - The value to create a FixedNumber for.\n     * @param {Numeric} [_decimals] - The number of decimal places in `value`.\n     * @param {FixedFormat} [_format] - The format for the FixedNumber.\n     * @returns {FixedNumber} The FixedNumber for `value`.\n     */\n    static fromValue(_value, _decimals, _format) {\n        const decimals = _decimals == null ? 0 : getNumber(_decimals);\n        const format = getFormat(_format);\n        let value = getBigInt(_value, 'value');\n        const delta = decimals - format.decimals;\n        if (delta > 0) {\n            const tens = getTens(delta);\n            assert(value % tens === BN_0, 'value loses precision for format', 'NUMERIC_FAULT', {\n                operation: 'fromValue',\n                fault: 'underflow',\n                value: _value,\n            });\n            value /= tens;\n        }\n        else if (delta < 0) {\n            value *= getTens(-delta);\n        }\n        checkValue(value, format, 'fromValue');\n        return new FixedNumber(_guard, value, format);\n    }\n    /**\n     * Creates a new {@link FixedNumber | **FixedNumber**} for `value` with `format`.\n     *\n     * This will throw a [NumericFaultError](../interfaces/NumericFaultError) if `value` cannot fit in `format`, either\n     * due to overflow or underflow (precision loss).\n     *\n     * @param {BigNumberish} _value - The value to create a FixedNumber for.\n     * @param {FixedFormat} [_format] - The format for the FixedNumber.\n     * @returns {FixedNumber} The FixedNumber for `value`.\n     */\n    static fromString(_value, _format) {\n        const match = _value.match(/^(-?)([0-9]*)\\.?([0-9]*)$/);\n        assertArgument(match && match[2].length + match[3].length > 0, 'invalid FixedNumber string value', 'value', _value);\n        const format = getFormat(_format);\n        const whole = match[2] || '0';\n        let decimal = match[3] || '';\n        // Pad out the decimals\n        while (decimal.length < format.decimals) {\n            decimal += Zeros;\n        }\n        // Check precision is safe\n        assert(decimal.substring(format.decimals).match(/^0*$/), 'too many decimals for format', 'NUMERIC_FAULT', {\n            operation: 'fromString',\n            fault: 'underflow',\n            value: _value,\n        });\n        // Remove extra padding\n        decimal = decimal.substring(0, format.decimals);\n        const value = BigInt(match[1] + whole + decimal);\n        checkValue(value, format, 'fromString');\n        return new FixedNumber(_guard, value, format);\n    }\n    /**\n     * Creates a new {@link FixedNumber | **FixedNumber**} with the big-endian representation `value` with `format`.\n     *\n     * This will throw a [NumericFaultError](../interfaces/NumericFaultError) if `value` cannot fit in `format` due to\n     * overflow.\n     *\n     * @param {BytesLike} _value - The big-endian representation of the value.\n     * @param {FixedFormat} [_format] - The format for the FixedNumber.\n     * @returns {FixedNumber} The FixedNumber for `value`.\n     */\n    static fromBytes(_value, _format) {\n        let value = toBigInt(getBytes(_value, 'value'));\n        const format = getFormat(_format);\n        if (format.signed) {\n            value = fromTwos(value, format.width);\n        }\n        checkValue(value, format, 'fromBytes');\n        return new FixedNumber(_guard, value, format);\n    }\n}\n//# sourceMappingURL=fixednumber.js.map","/**\n * Most interactions with Ethereum requires integer values, which use the smallest magnitude unit.\n *\n * For example, imagine dealing with dollars and cents. Since dollars are divisible, non-integer values are possible,\n * such as `$10.77`. By using the smallest indivisible unit (i.e. cents), the value can be kept as the integer `1077`.\n *\n * When receiving decimal input from the user (as a decimal string), the value should be converted to an integer and\n * when showing a user a value, the integer value should be converted to a decimal string.\n *\n * This creates a clear distinction, between values to be used by code (integers) and values used for display logic to\n * users (decimals).\n *\n * The native unit in Ethereum, ether is divisible to 18 decimal places, where each individual unit is called a wei.\n */\nimport { assertArgument } from './errors.js';\nimport { FixedNumber } from './fixednumber.js';\nimport { getNumber } from './maths.js';\nconst names = ['wei', 'kwei', 'mwei', 'gwei', 'szabo', 'finney', 'ether'];\n/**\n * Converts `value` into a decimal string, assuming `unit` decimal places. The `unit` may be the number of decimal\n * places or the name of a unit (e.g. `\"gwei\"` for 9 decimal places).\n *\n * @category Utils\n * @param {BigNumberish} value - The value to convert.\n * @param {string | Numeric} [unit=18] - The unit to convert to. Default is `18`\n * @returns {string} The converted value.\n * @throws {Error} If the unit is invalid.\n */\nexport function formatUnits(value, unit) {\n    let decimals = 18;\n    if (typeof unit === 'string') {\n        const index = names.indexOf(unit);\n        assertArgument(index >= 0, 'invalid unit', 'unit', unit);\n        decimals = 3 * index;\n    }\n    else if (unit != null) {\n        decimals = getNumber(unit, 'unit');\n    }\n    return FixedNumber.fromValue(value, decimals, { decimals, width: 512 }).toString();\n}\n/**\n * Converts the decimal string `value` to a BigInt, assuming `unit` decimal places. The `unit` may the number of decimal\n * places or the name of a unit (e.g. `\"gwei\"` for 9 decimal places).\n *\n * @category Utils\n * @param {string} value - The value to convert.\n * @param {string | Numeric} [unit=18] - The unit to convert from. Default is `18`\n * @returns {bigint} The converted value.\n * @throws {Error} If the unit is invalid.\n * @throws {Error} If the value is not a string.\n */\nexport function parseUnits(value, unit) {\n    assertArgument(typeof value === 'string', 'value must be a string', 'value', value);\n    let decimals = 18;\n    if (typeof unit === 'string') {\n        const index = names.indexOf(unit);\n        assertArgument(index >= 0, 'invalid unit', 'unit', unit);\n        decimals = 3 * index;\n    }\n    else if (unit != null) {\n        decimals = getNumber(unit, 'unit');\n    }\n    return FixedNumber.fromString(value, { decimals, width: 512 }).value;\n}\n/**\n * Converts `value` into a decimal string sing 18 decimal places.\n *\n * @category Utils\n * @param {BigNumberish} wei - The value to convert.\n * @returns {string} The converted value.\n */\nexport function formatQuai(wei) {\n    return formatUnits(wei, 18);\n}\n/**\n * Converts `value` into a decimal string using 3 decimal places.\n *\n * @category Utils\n * @param {BigNumberish} value - The value to convert.\n * @returns {string} The converted value.\n */\nexport function formatQi(value) {\n    return formatUnits(value, 3);\n}\n/**\n * Converts the decimal string `quai` to a BigInt, using 18 decimal places.\n *\n * @category Utils\n * @param {string} ether - The value to convert.\n * @returns {bigint} The converted value.\n */\nexport function parseQuai(ether) {\n    return parseUnits(ether, 18);\n}\n/**\n * Converts `value` into a decimal string using 3 decimal places.\n *\n * @category Utils\n * @param {string} value - The value to convert.\n * @returns {bigint} The converted value.\n */\nexport function parseQi(value) {\n    return parseUnits(value, 3);\n}\n//# sourceMappingURL=units.js.map","/**\n * Explain UUID and link to RFC here.\n */\nimport { getBytes, hexlify } from './data.js';\n/**\n * Returns the version 4 [UUID](https://www.ietf.org/rfc/rfc4122.txt) for the `randomBytes`.\n *\n * @category Utils\n * @param {BytesLike} randomBytes - The random bytes to use.\n * @returns {string} The UUID.\n */\nexport function uuidV4(randomBytes) {\n    const bytes = getBytes(randomBytes, 'randomBytes');\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const value = hexlify(bytes);\n    return [\n        value.substring(2, 10),\n        value.substring(10, 14),\n        value.substring(14, 18),\n        value.substring(18, 22),\n        value.substring(22, 34),\n    ].join('-');\n}\n//# sourceMappingURL=uuid.js.map","/**\n * A zone is the lowest level shard within the Quai network hierarchy. Zones are the only shards in the network that\n * accept user transactions. The value is a hexadecimal string representing the encoded value of the zone. Read more\n * [here](https://github.com/quai-network/qips/blob/master/qip-0002.md).\n *\n * @category Constants\n */\nexport var Zone;\n(function (Zone) {\n    Zone[\"Cyprus1\"] = \"0x00\";\n    Zone[\"Cyprus2\"] = \"0x01\";\n    Zone[\"Cyprus3\"] = \"0x02\";\n    Zone[\"Paxos1\"] = \"0x10\";\n    Zone[\"Paxos2\"] = \"0x11\";\n    Zone[\"Paxos3\"] = \"0x12\";\n    Zone[\"Hydra1\"] = \"0x20\";\n    Zone[\"Hydra2\"] = \"0x21\";\n    Zone[\"Hydra3\"] = \"0x22\";\n})(Zone || (Zone = {}));\nexport var Ledger;\n(function (Ledger) {\n    Ledger[Ledger[\"Quai\"] = 0] = \"Quai\";\n    Ledger[Ledger[\"Qi\"] = 1] = \"Qi\";\n})(Ledger || (Ledger = {}));\nfunction zoneFromBytes(zone) {\n    switch (zone) {\n        case '0x00':\n            return Zone.Cyprus1;\n        case '0x01':\n            return Zone.Cyprus2;\n        case '0x02':\n            return Zone.Cyprus3;\n        case '0x10':\n            return Zone.Paxos1;\n        case '0x11':\n            return Zone.Paxos2;\n        case '0x12':\n            return Zone.Paxos3;\n        case '0x20':\n            return Zone.Hydra1;\n        case '0x21':\n            return Zone.Hydra2;\n        case '0x22':\n            return Zone.Hydra3;\n        default:\n            throw new Error(`Invalid zone: ${zone}`);\n    }\n}\nexport const ZoneData = [\n    {\n        name: 'Cyprus One',\n        nickname: 'cyprus1',\n        shard: 'zone-0-0',\n        context: 2,\n        byte: '0x00', //0000 0000 region-0 zone-0\n    },\n    {\n        name: 'Cyprus Two',\n        nickname: 'cyprus2',\n        shard: 'zone-0-1',\n        context: 2,\n        byte: '0x01', // 0000 0001 region-0 zone-1\n    },\n    {\n        name: 'Cyprus Three',\n        nickname: 'cyprus3',\n        shard: 'zone-0-2',\n        context: 2,\n        byte: '0x02', // 0000 0010 region-0 zone-2\n    },\n    {\n        name: 'Paxos One',\n        nickname: 'paxos1',\n        shard: 'zone-1-0',\n        context: 2,\n        byte: '0x10', // 0001 0000 region-1 zone-0\n    },\n    {\n        name: 'Paxos Two',\n        nickname: 'paxos2',\n        shard: 'zone-1-1',\n        context: 2,\n        byte: '0x11', // 0001 0001 region-1 zone-1\n    },\n    {\n        name: 'Paxos Three',\n        nickname: 'paxos3',\n        shard: 'zone-1-2',\n        context: 2,\n        byte: '0x12', // 0001 0010 region-1 zone-2\n    },\n    {\n        name: 'Hydra One',\n        nickname: 'hydra1',\n        shard: 'zone-2-0',\n        context: 2,\n        byte: '0x20', // 0010 0000 region-2 zone-0\n    },\n    {\n        name: 'Hydra Two',\n        nickname: 'hydra2',\n        shard: 'zone-2-1',\n        context: 2,\n        byte: '0x21', // 0010 0001 region-2 zone-1\n    },\n    {\n        name: 'Hydra Three',\n        nickname: 'hydra3',\n        shard: 'zone-2-2',\n        context: 2,\n        byte: '0x22', // 0010 0010 region-2 zone-2\n    },\n];\nexport function toZone(shard) {\n    return zoneFromBytes(ZoneData.find((it) => it.name == shard || it.byte == shard || it.nickname == shard || it.shard == shard)\n        ?.byte || '');\n}\nexport function fromZone(zone, key) {\n    return ZoneData.find((it) => it.byte == zone)?.[key] || '';\n}\n//# sourceMappingURL=zones.js.map","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","import { hash as assertHash, number as assertNumber } from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    assertHash(hash);\n    const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    assertNumber(c);\n    assertNumber(dkLen);\n    assertNumber(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = toBytes(_password);\n    const salt = toBytes(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexport async function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await asyncLoop(c - 1, asyncTick, () => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n//# sourceMappingURL=pbkdf2.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","/* Browser Crypto Shims */\nimport { hmac } from '@noble/hashes/hmac';\nimport { pbkdf2 } from '@noble/hashes/pbkdf2';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { assert, assertArgument } from '../utils/index.js';\nfunction getGlobal() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('unable to locate global object');\n}\nconst anyGlobal = getGlobal();\nconst crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nexport function createHash(algo) {\n    switch (algo) {\n        case 'sha256':\n            return sha256.create();\n        case 'sha512':\n            return sha512.create();\n    }\n    assertArgument(false, 'invalid hashing algorithm name', 'algorithm', algo);\n}\nexport function createHmac(_algo, key) {\n    const algo = { sha256, sha512 }[_algo];\n    assertArgument(algo != null, 'invalid hmac algorithm', 'algorithm', _algo);\n    return hmac.create(algo, key);\n}\nexport function pbkdf2Sync(password, salt, iterations, keylen, _algo) {\n    const algo = { sha256, sha512 }[_algo];\n    assertArgument(algo != null, 'invalid pbkdf2 algorithm', 'algorithm', _algo);\n    return pbkdf2(algo, password, salt, { c: iterations, dkLen: keylen });\n}\nexport function randomBytes(length) {\n    assert(crypto != null, 'platform does not support secure random numbers', 'UNSUPPORTED_OPERATION', {\n        operation: 'randomBytes',\n    });\n    assertArgument(Number.isInteger(length) && length > 0 && length <= 1024, 'invalid length', 'length', length);\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return result;\n}\n//# sourceMappingURL=crypto-browser.js.map","/**\n * An **HMAC** enables verification that a given key was used to authenticate a payload.\n *\n * @see {@link https://en.wikipedia.org/wiki/HMAC | HMAC - Wikipedia}\n */\nimport { createHmac } from './crypto.js';\nimport { getBytes, hexlify } from '../utils/index.js';\nlet locked = false;\nconst _computeHmac = function (algorithm, key, data) {\n    return createHmac(algorithm, key).update(data).digest();\n};\nlet __computeHmac = _computeHmac;\n/**\n * Return the HMAC for `data` using the `key` key with the underlying `algo` used for compression.\n *\n * @category Crypto\n * @example\n *\n * ```js\n * key = id('some-secret');\n *\n * // Compute the HMAC\n * computeHmac('sha256', key, '0x1337');\n *\n * // To compute the HMAC of UTF-8 data, the data must be\n * // converted to UTF-8 bytes\n * computeHmac('sha256', key, toUtf8Bytes('Hello World'));\n * ```\n *\n * @param {'sha256' | 'sha512'} algorithm - The algorithm to use for compression.\n * @param {BytesLike} _key - The key to use for the HMAC.\n * @param {BytesLike} _data - The data to authenticate.\n * @returns {string} The HMAC of the data.\n */\nexport function computeHmac(algorithm, _key, _data) {\n    const key = getBytes(_key, 'key');\n    const data = getBytes(_data, 'data');\n    return hexlify(__computeHmac(algorithm, key, data));\n}\ncomputeHmac._ = _computeHmac;\ncomputeHmac.lock = function () {\n    locked = true;\n};\ncomputeHmac.register = function (func) {\n    if (locked) {\n        throw new Error('computeHmac is locked');\n    }\n    __computeHmac = func;\n};\nObject.freeze(computeHmac);\n//# sourceMappingURL=hmac.js.map","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapXOFConstructorWithOpts, } from './utils.js';\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        exists(this, false);\n        bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","/**\n * Cryptographic hashing functions\n */\nimport { keccak_256 } from '@noble/hashes/sha3';\nimport { getBytes, hexlify } from '../utils/index.js';\nlet locked = false;\nconst _keccak256 = function (data) {\n    return keccak_256(data);\n};\nlet __keccak256 = _keccak256;\n/**\n * Compute the cryptographic KECCAK256 hash of `data`.\n *\n * The `data` **must** be a data representation, to compute the hash of UTF-8 data use the [**id**}(../functions/id)\n * function.\n *\n * @category Crypto\n * @example\n *\n * ```ts\n * keccak256('0x');\n *\n * keccak256('0x1337');\n *\n * keccak256(new Uint8Array([0x13, 0x37]));\n *\n * // Strings are assumed to be DataHexString, otherwise it will\n * // throw. To hash UTF-8 data, see the note above.\n * keccak256('Hello World');\n * ```\n *\n * @param {BytesLike} _data - The data to hash.\n * @returns DataHexstring\n * @returns {string} The hash of the data.\n */\nexport function keccak256(_data) {\n    const data = getBytes(_data, 'data');\n    return hexlify(__keccak256(data));\n}\nkeccak256._ = _keccak256;\nkeccak256.lock = function () {\n    locked = true;\n};\nkeccak256.register = function (func) {\n    if (locked) {\n        throw new TypeError('keccak256 is locked');\n    }\n    __keccak256 = func;\n};\nObject.freeze(keccak256);\n//# sourceMappingURL=keccak.js.map","import { SHA2 } from './_sha2.js';\nimport { wrapConstructor } from './utils.js';\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = /* @__PURE__ */ new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = /* @__PURE__ */ Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = /* @__PURE__ */ Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++)\n    for (let j of [idxL, idxR])\n        j.push(j[i].map((k) => Rho[k]));\nconst shifts = /* @__PURE__ */ [\n    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = /* @__PURE__ */ new Uint32Array([\n    0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,\n]);\nconst Kr = /* @__PURE__ */ new Uint32Array([\n    0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,\n]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word, shift) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group, x, y, z) {\n    if (group === 0)\n        return x ^ y ^ z;\n    else if (group === 1)\n        return (x & y) | (~x & z);\n    else if (group === 2)\n        return (x | ~y) ^ z;\n    else if (group === 3)\n        return (x & z) | (y & ~z);\n    else\n        return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = /* @__PURE__ */ new Uint32Array(16);\nexport class RIPEMD160 extends SHA2 {\n    constructor() {\n        super(64, 20, 8, true);\n        this.h0 = 0x67452301 | 0;\n        this.h1 = 0xefcdab89 | 0;\n        this.h2 = 0x98badcfe | 0;\n        this.h3 = 0x10325476 | 0;\n        this.h4 = 0xc3d2e1f0 | 0;\n    }\n    get() {\n        const { h0, h1, h2, h3, h4 } = this;\n        return [h0, h1, h2, h3, h4];\n    }\n    set(h0, h1, h2, h3, h4) {\n        this.h0 = h0 | 0;\n        this.h1 = h1 | 0;\n        this.h2 = h2 | 0;\n        this.h3 = h3 | 0;\n        this.h4 = h4 | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            BUF[i] = view.getUint32(offset, true);\n        // prettier-ignore\n        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;\n        // Instead of iterating 0 to 80, we split it into 5 groups\n        // And use the groups in constants, functions, etc. Much simpler\n        for (let group = 0; group < 5; group++) {\n            const rGroup = 4 - group;\n            const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n            const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n            const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n            for (let i = 0; i < 16; i++) {\n                const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n                al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n            }\n            // 2 loops are 10% faster\n            for (let i = 0; i < 16; i++) {\n                const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n                ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n            }\n        }\n        // Add the compressed chunk to the current hash value\n        this.set((this.h1 + cl + dr) | 0, (this.h2 + dl + er) | 0, (this.h3 + el + ar) | 0, (this.h4 + al + br) | 0, (this.h0 + bl + cr) | 0);\n    }\n    roundClean() {\n        BUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0);\n    }\n}\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = /* @__PURE__ */ wrapConstructor(() => new RIPEMD160());\n//# sourceMappingURL=ripemd160.js.map","import { ripemd160 as noble_ripemd160 } from '@noble/hashes/ripemd160';\nimport { getBytes, hexlify } from '../utils/index.js';\nlet locked = false;\nconst _ripemd160 = function (data) {\n    return noble_ripemd160(data);\n};\nlet __ripemd160 = _ripemd160;\n/**\n * Compute the cryptographic RIPEMD-160 hash of `data`.\n *\n * @category Crypto\n * @example\n *\n * ```ts\n * ripemd160('0x');\n *\n * ripemd160('0x1337');\n *\n * ripemd160(new Uint8Array([0x13, 0x37]));\n * ```\n *\n * @param {BytesLike} _data - The data to hash.\n * @returns DataHexstring\n * @returns {string} The hash of the data.\n */\nexport function ripemd160(_data) {\n    const data = getBytes(_data, 'data');\n    return hexlify(__ripemd160(data));\n}\nripemd160._ = _ripemd160;\nripemd160.lock = function () {\n    locked = true;\n};\nripemd160.register = function (func) {\n    if (locked) {\n        throw new TypeError('ripemd160 is locked');\n    }\n    __ripemd160 = func;\n};\nObject.freeze(ripemd160);\n//# sourceMappingURL=ripemd160.js.map","/**\n * A **Password-Based Key-Derivation Function** is designed to create a sequence of bytes suitible as a **key** from a\n * human-rememberable password.\n */\nimport { pbkdf2Sync } from './crypto.js';\nimport { getBytes, hexlify } from '../utils/index.js';\nlet locked = false;\nconst _pbkdf2 = function (password, salt, iterations, keylen, algo) {\n    return pbkdf2Sync(password, salt, iterations, keylen, algo);\n};\nlet __pbkdf2 = _pbkdf2;\n/**\n * Return the [PBKDF2](https://en.wikipedia.org/wiki/PBKDF2) for `keylen` bytes for `password` using the `salt` and\n * using `iterations` of `algo`.\n *\n * This PBKDF is outdated and should not be used in new projects, but is required to decrypt older files.\n *\n * @category Crypto\n * @example\n *\n * ```ts\n * // The password must be converted to bytes, and it is generally\n * // best practices to ensure the string has been normalized. Many\n * // formats explicitly indicate the normalization form to use.\n * password = 'hello';\n * passwordBytes = toUtf8Bytes(password, 'NFKC');\n *\n * salt = id('some-salt');\n *\n * // Compute the PBKDF2\n * pbkdf2(passwordBytes, salt, 1024, 16, 'sha256');\n * ```\n *\n * @param {BytesLike} _password - The password to use.\n * @param {BytesLike} _salt - The salt to use.\n * @param {number} iterations - The number of iterations to use.\n * @param {number} keylen - The length of the key to generate.\n * @param {'sha256' | 'sha512'} algo - The algorithm to use.\n * @returns {string} The key derived from the password.\n */\nexport function pbkdf2(_password, _salt, iterations, keylen, algo) {\n    const password = getBytes(_password, 'password');\n    const salt = getBytes(_salt, 'salt');\n    return hexlify(__pbkdf2(password, salt, iterations, keylen, algo));\n}\npbkdf2._ = _pbkdf2;\npbkdf2.lock = function () {\n    locked = true;\n};\npbkdf2.register = function (func) {\n    if (locked) {\n        throw new Error('pbkdf2 is locked');\n    }\n    __pbkdf2 = func;\n};\nObject.freeze(pbkdf2);\n//# sourceMappingURL=pbkdf2.js.map","/**\n * A **Cryptographically Secure Random Value** is one that has been generated with additional care take to prevent\n * side-channels from allowing others to detect it and prevent others from through coincidence generate the same\n * values.\n */\nimport { randomBytes as crypto_random } from './crypto.js';\nlet locked = false;\nconst _randomBytes = function (length) {\n    return new Uint8Array(crypto_random(length));\n};\nlet __randomBytes = _randomBytes;\n/**\n * Return `length` bytes of cryptographically secure random data.\n *\n * @category Crypto\n * @example\n *\n * ```ts\n * randomBytes(8);\n * ```\n *\n * @param {number} length - The number of bytes to generate.\n * @returns {Uint8Array} The random bytes.\n */\nexport function randomBytes(length) {\n    return __randomBytes(length);\n}\nrandomBytes._ = _randomBytes;\nrandomBytes.lock = function () {\n    locked = true;\n};\nrandomBytes.register = function (func) {\n    if (locked) {\n        throw new Error('randomBytes is locked');\n    }\n    __randomBytes = func;\n};\nObject.freeze(randomBytes);\n//# sourceMappingURL=random.js.map","import { number as assertNumber } from './_assert.js';\nimport { sha256 } from './sha256.js';\nimport { pbkdf2 } from './pbkdf2.js';\nimport { asyncLoop, checkOpts, u32 } from './utils.js';\n// RFC 7914 Scrypt KDF\n// Left rotate for uint32\nconst rotl = (a, b) => (a << b) | (a >>> (32 - b));\n// The main Scrypt loop: uses Salsa extensively.\n// Six versions of the function were tried, this is the fastest one.\n// prettier-ignore\nfunction XorAndSalsa(prev, pi, input, ii, out, oi) {\n    // Based on https://cr.yp.to/salsa20.html\n    // Xor blocks\n    let y00 = prev[pi++] ^ input[ii++], y01 = prev[pi++] ^ input[ii++];\n    let y02 = prev[pi++] ^ input[ii++], y03 = prev[pi++] ^ input[ii++];\n    let y04 = prev[pi++] ^ input[ii++], y05 = prev[pi++] ^ input[ii++];\n    let y06 = prev[pi++] ^ input[ii++], y07 = prev[pi++] ^ input[ii++];\n    let y08 = prev[pi++] ^ input[ii++], y09 = prev[pi++] ^ input[ii++];\n    let y10 = prev[pi++] ^ input[ii++], y11 = prev[pi++] ^ input[ii++];\n    let y12 = prev[pi++] ^ input[ii++], y13 = prev[pi++] ^ input[ii++];\n    let y14 = prev[pi++] ^ input[ii++], y15 = prev[pi++] ^ input[ii++];\n    // Save state to temporary variables (salsa)\n    let x00 = y00, x01 = y01, x02 = y02, x03 = y03, x04 = y04, x05 = y05, x06 = y06, x07 = y07, x08 = y08, x09 = y09, x10 = y10, x11 = y11, x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n    // Main loop (salsa)\n    for (let i = 0; i < 8; i += 2) {\n        x04 ^= rotl(x00 + x12 | 0, 7);\n        x08 ^= rotl(x04 + x00 | 0, 9);\n        x12 ^= rotl(x08 + x04 | 0, 13);\n        x00 ^= rotl(x12 + x08 | 0, 18);\n        x09 ^= rotl(x05 + x01 | 0, 7);\n        x13 ^= rotl(x09 + x05 | 0, 9);\n        x01 ^= rotl(x13 + x09 | 0, 13);\n        x05 ^= rotl(x01 + x13 | 0, 18);\n        x14 ^= rotl(x10 + x06 | 0, 7);\n        x02 ^= rotl(x14 + x10 | 0, 9);\n        x06 ^= rotl(x02 + x14 | 0, 13);\n        x10 ^= rotl(x06 + x02 | 0, 18);\n        x03 ^= rotl(x15 + x11 | 0, 7);\n        x07 ^= rotl(x03 + x15 | 0, 9);\n        x11 ^= rotl(x07 + x03 | 0, 13);\n        x15 ^= rotl(x11 + x07 | 0, 18);\n        x01 ^= rotl(x00 + x03 | 0, 7);\n        x02 ^= rotl(x01 + x00 | 0, 9);\n        x03 ^= rotl(x02 + x01 | 0, 13);\n        x00 ^= rotl(x03 + x02 | 0, 18);\n        x06 ^= rotl(x05 + x04 | 0, 7);\n        x07 ^= rotl(x06 + x05 | 0, 9);\n        x04 ^= rotl(x07 + x06 | 0, 13);\n        x05 ^= rotl(x04 + x07 | 0, 18);\n        x11 ^= rotl(x10 + x09 | 0, 7);\n        x08 ^= rotl(x11 + x10 | 0, 9);\n        x09 ^= rotl(x08 + x11 | 0, 13);\n        x10 ^= rotl(x09 + x08 | 0, 18);\n        x12 ^= rotl(x15 + x14 | 0, 7);\n        x13 ^= rotl(x12 + x15 | 0, 9);\n        x14 ^= rotl(x13 + x12 | 0, 13);\n        x15 ^= rotl(x14 + x13 | 0, 18);\n    }\n    // Write output (salsa)\n    out[oi++] = (y00 + x00) | 0;\n    out[oi++] = (y01 + x01) | 0;\n    out[oi++] = (y02 + x02) | 0;\n    out[oi++] = (y03 + x03) | 0;\n    out[oi++] = (y04 + x04) | 0;\n    out[oi++] = (y05 + x05) | 0;\n    out[oi++] = (y06 + x06) | 0;\n    out[oi++] = (y07 + x07) | 0;\n    out[oi++] = (y08 + x08) | 0;\n    out[oi++] = (y09 + x09) | 0;\n    out[oi++] = (y10 + x10) | 0;\n    out[oi++] = (y11 + x11) | 0;\n    out[oi++] = (y12 + x12) | 0;\n    out[oi++] = (y13 + x13) | 0;\n    out[oi++] = (y14 + x14) | 0;\n    out[oi++] = (y15 + x15) | 0;\n}\nfunction BlockMix(input, ii, out, oi, r) {\n    // The block B is r 128-byte chunks (which is equivalent of 2r 64-byte chunks)\n    let head = oi + 0;\n    let tail = oi + 16 * r;\n    for (let i = 0; i < 16; i++)\n        out[tail + i] = input[ii + (2 * r - 1) * 16 + i]; // X ← B[2r−1]\n    for (let i = 0; i < r; i++, head += 16, ii += 16) {\n        // We write odd & even Yi at same time. Even: 0bXXXXX0 Odd:  0bXXXXX1\n        XorAndSalsa(out, tail, input, ii, out, head); // head[i] = Salsa(blockIn[2*i] ^ tail[i-1])\n        if (i > 0)\n            tail += 16; // First iteration overwrites tmp value in tail\n        XorAndSalsa(out, head, input, (ii += 16), out, tail); // tail[i] = Salsa(blockIn[2*i+1] ^ head[i])\n    }\n}\n// Common prologue and epilogue for sync/async functions\nfunction scryptInit(password, salt, _opts) {\n    // Maxmem - 1GB+1KB by default\n    const opts = checkOpts({\n        dkLen: 32,\n        asyncTick: 10,\n        maxmem: 1024 ** 3 + 1024,\n    }, _opts);\n    const { N, r, p, dkLen, asyncTick, maxmem, onProgress } = opts;\n    assertNumber(N);\n    assertNumber(r);\n    assertNumber(p);\n    assertNumber(dkLen);\n    assertNumber(asyncTick);\n    assertNumber(maxmem);\n    if (onProgress !== undefined && typeof onProgress !== 'function')\n        throw new Error('progressCb should be function');\n    const blockSize = 128 * r;\n    const blockSize32 = blockSize / 4;\n    if (N <= 1 || (N & (N - 1)) !== 0 || N >= 2 ** (blockSize / 8) || N > 2 ** 32) {\n        // NOTE: we limit N to be less than 2**32 because of 32 bit variant of Integrify function\n        // There is no JS engines that allows alocate more than 4GB per single Uint8Array for now, but can change in future.\n        throw new Error('Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32');\n    }\n    if (p < 0 || p > ((2 ** 32 - 1) * 32) / blockSize) {\n        throw new Error('Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)');\n    }\n    if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {\n        throw new Error('Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32');\n    }\n    const memUsed = blockSize * (N + p);\n    if (memUsed > maxmem) {\n        throw new Error(`Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`);\n    }\n    // [B0...Bp−1] ← PBKDF2HMAC-SHA256(Passphrase, Salt, 1, blockSize*ParallelizationFactor)\n    // Since it has only one iteration there is no reason to use async variant\n    const B = pbkdf2(sha256, password, salt, { c: 1, dkLen: blockSize * p });\n    const B32 = u32(B);\n    // Re-used between parallel iterations. Array(iterations) of B\n    const V = u32(new Uint8Array(blockSize * N));\n    const tmp = u32(new Uint8Array(blockSize));\n    let blockMixCb = () => { };\n    if (onProgress) {\n        const totalBlockMix = 2 * N * p;\n        // Invoke callback if progress changes from 10.01 to 10.02\n        // Allows to draw smooth progress bar on up to 8K screen\n        const callbackPer = Math.max(Math.floor(totalBlockMix / 10000), 1);\n        let blockMixCnt = 0;\n        blockMixCb = () => {\n            blockMixCnt++;\n            if (onProgress && (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix))\n                onProgress(blockMixCnt / totalBlockMix);\n        };\n    }\n    return { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick };\n}\nfunction scryptOutput(password, dkLen, B, V, tmp) {\n    const res = pbkdf2(sha256, password, B, { c: 1, dkLen });\n    B.fill(0);\n    V.fill(0);\n    tmp.fill(0);\n    return res;\n}\n/**\n * Scrypt KDF from RFC 7914.\n * @param password - pass\n * @param salt - salt\n * @param opts - parameters\n * - `N` is cpu/mem work factor (power of 2 e.g. 2**18)\n * - `r` is block size (8 is common), fine-tunes sequential memory read size and performance\n * - `p` is parallelization factor (1 is common)\n * - `dkLen` is output key length in bytes e.g. 32.\n * - `asyncTick` - (default: 10) max time in ms for which async function can block execution\n * - `maxmem` - (default: `1024 ** 3 + 1024` aka 1GB+1KB). A limit that the app could use for scrypt\n * - `onProgress` - callback function that would be executed for progress report\n * @returns Derived key\n */\nexport function scrypt(password, salt, opts) {\n    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb } = scryptInit(password, salt, opts);\n    for (let pi = 0; pi < p; pi++) {\n        const Pi = blockSize32 * pi;\n        for (let i = 0; i < blockSize32; i++)\n            V[i] = B32[Pi + i]; // V[0] = B[i]\n        for (let i = 0, pos = 0; i < N - 1; i++) {\n            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n            blockMixCb();\n        }\n        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n        blockMixCb();\n        for (let i = 0; i < N; i++) {\n            // First u32 of the last 64-byte block (u32 is LE)\n            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n            for (let k = 0; k < blockSize32; k++)\n                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n            blockMixCb();\n        }\n    }\n    return scryptOutput(password, dkLen, B, V, tmp);\n}\n/**\n * Scrypt KDF from RFC 7914.\n */\nexport async function scryptAsync(password, salt, opts) {\n    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick } = scryptInit(password, salt, opts);\n    for (let pi = 0; pi < p; pi++) {\n        const Pi = blockSize32 * pi;\n        for (let i = 0; i < blockSize32; i++)\n            V[i] = B32[Pi + i]; // V[0] = B[i]\n        let pos = 0;\n        await asyncLoop(N - 1, asyncTick, () => {\n            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n            blockMixCb();\n        });\n        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n        blockMixCb();\n        await asyncLoop(N, asyncTick, () => {\n            // First u32 of the last 64-byte block (u32 is LE)\n            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n            for (let k = 0; k < blockSize32; k++)\n                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n            blockMixCb();\n        });\n    }\n    return scryptOutput(password, dkLen, B, V, tmp);\n}\n//# sourceMappingURL=scrypt.js.map","import { scrypt as _nobleSync, scryptAsync as _nobleAsync } from '@noble/hashes/scrypt';\nimport { getBytes, hexlify as H } from '../utils/index.js';\nlet lockedSync = false, lockedAsync = false;\nconst _scryptAsync = async function (passwd, salt, N, r, p, dkLen, onProgress) {\n    return await _nobleAsync(passwd, salt, { N, r, p, dkLen, onProgress });\n};\nconst _scryptSync = function (passwd, salt, N, r, p, dkLen) {\n    return _nobleSync(passwd, salt, { N, r, p, dkLen });\n};\nlet __scryptAsync = _scryptAsync;\nlet __scryptSync = _scryptSync;\n/**\n * The [scrypt PBKDF](https://en.wikipedia.org/wiki/Scrypt) uses a memory and cpu hard method of derivation to increase\n * the resource cost to brute-force a password for a given key.\n *\n * This means this algorithm is intentionally slow, and can be tuned to become slower. As computation and memory speed\n * improve over time, increasing the difficulty maintains the cost of an attacker.\n *\n * For example, if a target time of 5 seconds is used, a legitimate user which knows their password requires only 5\n * seconds to unlock their account. A 6 character password has 68 billion possibilities, which would require an attacker\n * to invest over 10,000 years of CPU time. This is of course a crude example (as password generally aren't random), but\n * demonstrates to value of imposing large costs to decryption.\n *\n * For this reason, if building a UI which involved decrypting or encrypting datsa using scrypt, it is recommended to\n * use a [**ProgressCallback**](../types-aliases/ProgressCallback) (as event short periods can seem lik an eternity if\n * the UI freezes). Including the phrase //\"decrypting\"// in the UI can also help, assuring the user their waiting is\n * for a good reason.\n *\n * @category Crypto\n * @example\n *\n * ```ts\n * // The password must be converted to bytes, and it is generally\n * // best practices to ensure the string has been normalized. Many\n * // formats explicitly indicate the normalization form to use.\n * password = 'hello';\n * passwordBytes = toUtf8Bytes(password, 'NFKC');\n *\n * salt = id('some-salt');\n *\n * // Compute the scrypt\n * scrypt(passwordBytes, salt, 1024, 8, 1, 16);\n * ```\n *\n * @param {BytesLike} _passwd - The password to use.\n * @param {BytesLike} _salt - The salt to use.\n * @param {number} N - The CPU/memory cost parameter.\n * @param {number} r - The block size parameter.\n * @param {number} p - The parallelization parameter.\n * @param {number} dkLen - The length of the key to generate.\n * @param {ProgressCallback} [progress] - A callback to update the progress.\n * @returns {Promise<string>} The key derived from the password.\n */\nexport async function scrypt(_passwd, _salt, N, r, p, dkLen, progress) {\n    const passwd = getBytes(_passwd, 'passwd');\n    const salt = getBytes(_salt, 'salt');\n    return H(await __scryptAsync(passwd, salt, N, r, p, dkLen, progress));\n}\nscrypt._ = _scryptAsync;\nscrypt.lock = function () {\n    lockedAsync = true;\n};\nscrypt.register = function (func) {\n    if (lockedAsync) {\n        throw new Error('scrypt is locked');\n    }\n    __scryptAsync = func;\n};\nObject.freeze(scrypt);\n/**\n * Provides a synchronous variant of {@link scrypt | **scrypt**}.\n *\n * This will completely lock up and freeze the UI in a browser and will prevent any event loop from progressing. For\n * this reason, it is preferred to use the [async variant](scrypt).\n *\n * @category Crypto\n * @example\n *\n * ```ts\n * // The password must be converted to bytes, and it is generally\n * // best practices to ensure the string has been normalized. Many\n * // formats explicitly indicate the normalization form to use.\n * password = 'hello';\n * passwordBytes = toUtf8Bytes(password, 'NFKC');\n *\n * salt = id('some-salt');\n *\n * // Compute the scrypt\n * scryptSync(passwordBytes, salt, 1024, 8, 1, 16);\n * ```\n *\n * @param {BytesLike} _passwd - The password to use.\n * @param {BytesLike} _salt - The salt to use.\n * @param {number} N - The CPU/memory cost parameter.\n * @param {number} r - The block size parameter.\n * @param {number} p - The parallelization parameter.\n * @param {number} dkLen - The length of the key to generate.\n * @returns {string} The key derived from the password.\n */\nexport function scryptSync(_passwd, _salt, N, r, p, dkLen) {\n    const passwd = getBytes(_passwd, 'passwd');\n    const salt = getBytes(_salt, 'salt');\n    return H(__scryptSync(passwd, salt, N, r, p, dkLen));\n}\nscryptSync._ = _scryptSync;\nscryptSync.lock = function () {\n    lockedSync = true;\n};\nscryptSync.register = function (func) {\n    if (lockedSync) {\n        throw new Error('scryptSync is locked');\n    }\n    __scryptSync = func;\n};\nObject.freeze(scryptSync);\n//# sourceMappingURL=scrypt.js.map","import { createHash } from './crypto.js';\nimport { getBytes, hexlify } from '../utils/index.js';\nconst _sha256 = function (data) {\n    return createHash('sha256').update(data).digest();\n};\nconst _sha512 = function (data) {\n    return createHash('sha512').update(data).digest();\n};\nlet __sha256 = _sha256;\nlet __sha512 = _sha512;\nlet locked256 = false, locked512 = false;\n/**\n * Compute the cryptographic SHA2-256 hash of `data`.\n *\n * @category Crypto\n * @example\n *\n * ```ts\n * sha256('0x');\n *\n * sha256('0x1337');\n *\n * sha256(new Uint8Array([0x13, 0x37]));\n * ```\n *\n * @param {BytesLike} _data - The data to hash.\n * @returns {string} The hash of the data.\n */\nexport function sha256(_data) {\n    const data = getBytes(_data, 'data');\n    return hexlify(__sha256(data));\n}\nsha256._ = _sha256;\nsha256.lock = function () {\n    locked256 = true;\n};\nsha256.register = function (func) {\n    if (locked256) {\n        throw new Error('sha256 is locked');\n    }\n    __sha256 = func;\n};\nObject.freeze(sha256);\n/**\n * Compute the cryptographic SHA2-512 hash of `data`.\n *\n * @category Crypto\n * @example\n *\n * ```ts\n * sha512('0x');\n *\n * sha512('0x1337');\n *\n * sha512(new Uint8Array([0x13, 0x37]));\n * ```\n *\n * @param {BytesLike} _data - The data to hash.\n * @returns {string} The hash of the data.\n */\nexport function sha512(_data) {\n    const data = getBytes(_data, 'data');\n    return hexlify(__sha512(data));\n}\nsha512._ = _sha512;\nsha512.lock = function () {\n    locked512 = true;\n};\nsha512.register = function (func) {\n    if (locked512) {\n        throw new Error('sha512 is locked');\n    }\n    __sha512 = func;\n};\nObject.freeze(sha256);\n//# sourceMappingURL=sha2.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a) => a instanceof Uint8Array;\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (u8a(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\nexport function equalBytes(b1, b2) {\n    // We don't care about timing attacks here\n    if (b1.length !== b2.length)\n        return false;\n    for (let i = 0; i < b1.length; i++)\n        if (b1[i] !== b2[i])\n            return false;\n    return true;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n, pos, value) => {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || val instanceof Uint8Array,\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, numberToBytesBE, numberToBytesLE, bytesToNumberBE, bytesToNumberLE, ensureBytes, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        if (!(data instanceof Uint8Array))\n            throw new Error('ui8a expected');\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (key instanceof Uint8Array)\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            if (this.is0()) {\n                // (0, 1, 0) aka ZERO is invalid in most contexts.\n                // In BLS, ZERO can be serialized, so we allow it.\n                // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = item instanceof Uint8Array;\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || sg instanceof Uint8Array) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexport const secp256k1 = createCurve({\n    a: BigInt(0),\n    b: BigInt(7),\n    Fp,\n    n: secp256k1N,\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1),\n    lowS: true,\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","/**\n * A constant for the zero address.\n *\n * (**i.e.** `\"0x0000000000000000000000000000000000000000\"`)\n *\n * @category Constants\n */\nexport const ZeroAddress = '0x0000000000000000000000000000000000000000';\n//# sourceMappingURL=addresses.js.map","/**\n * A constant for the zero hash.\n *\n * (**i.e.** `\"0x0000000000000000000000000000000000000000000000000000000000000000\"`)\n *\n * @category Constants\n */\nexport const ZeroHash = '0x0000000000000000000000000000000000000000000000000000000000000000';\n//# sourceMappingURL=hashes.js.map","/**\n * A constant for the order N for the secp256k1 curve.\n *\n * (**i.e.** `0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141n`)\n *\n * @category Constants\n */\nexport const N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\n/**\n * A constant for the number of wei in a single ether.\n *\n * (**i.e.** `1000000000000000000n`)\n *\n * @category Constants\n */\nexport const WeiPerEther = BigInt('1000000000000000000');\n/**\n * A constant for the maximum value for a `uint256`.\n *\n * (**i.e.** `0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn`)\n *\n * @category Constants\n */\nexport const MaxUint256 = BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\n/**\n * A constant for the minimum value for an `int256`.\n *\n * (**i.e.** `-8000000000000000000000000000000000000000000000000000000000000000n`)\n *\n * @category Constants\n */\nexport const MinInt256 = BigInt('0x8000000000000000000000000000000000000000000000000000000000000000') * BigInt(-1);\n/**\n * A constant for the maximum value for an `int256`.\n *\n * (**i.e.** `0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn`)\n *\n * @category Constants\n */\nexport const MaxInt256 = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\n//# sourceMappingURL=numbers.js.map","// NFKC (composed)             // (decomposed)\n/**\n * A constant for the ether symbol (normalized using NFKC).\n *\n * (**i.e.** `\"\\\\u039e\"`)\n *\n * @category Constants\n */\nexport const quaisymbol = '\\u039e'; // \"\\uD835\\uDF63\";\n/**\n * A constant for the Quai Network equivalent of the [EIP-191](https://eips.ethereum.org/EIPS/eip-191) personal message\n * prefix.\n *\n * (**i.e.** `\"\\\\x19Quai Signed Message:\\\\n\"`)\n *\n * @category Constants\n */\nexport const MessagePrefix = '\\x19Quai Signed Message:\\n';\n/**\n * A constant for the [EIP-191](https://eips.ethereum.org/EIPS/eip-191) personal message prefix.\n *\n * (**i.e.** `\"\\\\x19Ethereum Signed Message:\\\\n\"`)\n *\n * @category Constants\n */\nexport const EthMessagePrefix = '\\x19Ethereum Signed Message:\\n';\n//# sourceMappingURL=strings.js.map","import { ZoneData } from './zones.js';\n/**\n * A shard represents a chain within the Quai network hierarchy. A shard refer to the Prime chain, a region under the\n * Prime chain, or a Zone within a region. The value is a hexadecimal string representing the encoded value of the\n * shard. Read more [here](https://github.com/quai-network/qips/blob/master/qip-0002.md).\n *\n * @category Constants\n */\nexport var Shard;\n(function (Shard) {\n    Shard[\"Cyprus\"] = \"0x0\";\n    Shard[\"Cyprus1\"] = \"0x00\";\n    Shard[\"Cyprus2\"] = \"0x01\";\n    Shard[\"Cyprus3\"] = \"0x02\";\n    Shard[\"Paxos\"] = \"0x1\";\n    Shard[\"Paxos1\"] = \"0x10\";\n    Shard[\"Paxos2\"] = \"0x11\";\n    Shard[\"Paxos3\"] = \"0x12\";\n    Shard[\"Hydra\"] = \"0x2\";\n    Shard[\"Hydra1\"] = \"0x20\";\n    Shard[\"Hydra2\"] = \"0x21\";\n    Shard[\"Hydra3\"] = \"0x22\";\n    Shard[\"Prime\"] = \"0x\";\n})(Shard || (Shard = {}));\nfunction shardFromBytes(shard) {\n    switch (shard) {\n        case '0x':\n            return Shard.Prime;\n        case '0x0':\n            return Shard.Cyprus;\n        case '0x1':\n            return Shard.Paxos;\n        case '0x2':\n            return Shard.Hydra;\n        case '0x00':\n            return Shard.Cyprus1;\n        case '0x01':\n            return Shard.Cyprus2;\n        case '0x02':\n            return Shard.Cyprus3;\n        case '0x10':\n            return Shard.Paxos1;\n        case '0x11':\n            return Shard.Paxos2;\n        case '0x12':\n            return Shard.Paxos3;\n        case '0x20':\n            return Shard.Hydra1;\n        case '0x21':\n            return Shard.Hydra2;\n        case '0x22':\n            return Shard.Hydra3;\n        default:\n            throw new Error('Invalid shard');\n    }\n}\n/**\n * Constant data that defines each shard within the network.\n *\n * @category Constants\n */\nexport const ShardData = [\n    ...ZoneData,\n    {\n        name: 'Cyprus',\n        nickname: 'cyprus',\n        shard: 'region-0',\n        context: 2,\n        byte: '0x0',\n    },\n    {\n        name: 'Paxos',\n        nickname: 'paxos',\n        shard: 'region-1',\n        context: 2,\n        byte: '0x1',\n    },\n    {\n        name: 'Hydra',\n        nickname: 'hydra',\n        shard: 'region-2',\n        context: 2,\n        byte: '0x2',\n    },\n    {\n        name: 'Prime',\n        nickname: 'prime',\n        shard: 'prime',\n        context: 2,\n        byte: '0x',\n    },\n];\nexport function toShard(shard) {\n    return shardFromBytes(ShardData.find((it) => it.name == shard || it.byte == shard || it.nickname == shard || it.shard == shard)\n        ?.byte || '');\n}\nexport function fromShard(shard, key) {\n    return ShardData.find((it) => it.byte == shard)?.[key] || '';\n}\n//# sourceMappingURL=shards.js.map","import { ZeroHash } from '../constants/index.js';\nimport { concat, dataLength, getBigInt, getBytes, getNumber, hexlify, toBeArray, isHexString, zeroPadValue, assertArgument, assertPrivate, } from '../utils/index.js';\n// Constants\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_2 = BigInt(2);\nconst BN_27 = BigInt(27);\nconst BN_28 = BigInt(28);\nconst BN_35 = BigInt(35);\nconst _guard = {};\nfunction toUint256(value) {\n    return zeroPadValue(toBeArray(value), 32);\n}\n/**\n * A Signature @TODO\n *\n * @category Crypto\n */\nexport class Signature {\n    #r;\n    #s;\n    #v;\n    #networkV;\n    /**\n     * The `r` value for a signautre.\n     *\n     * This represents the `x` coordinate of a \"reference\" or challenge point, from which the `y` can be computed.\n     */\n    get r() {\n        return this.#r;\n    }\n    set r(value) {\n        assertArgument(dataLength(value) === 32, 'invalid r', 'value', value);\n        this.#r = hexlify(value);\n    }\n    /**\n     * The `s` value for a signature.\n     */\n    get s() {\n        return this.#s;\n    }\n    set s(_value) {\n        assertArgument(dataLength(_value) === 32, 'invalid s', 'value', _value);\n        const value = hexlify(_value);\n        assertArgument(parseInt(value.substring(0, 3)) < 8, 'non-canonical s', 'value', value);\n        this.#s = value;\n    }\n    /**\n     * The `v` value for a signature.\n     *\n     * Since a given `x` value for `r` has two possible values for its correspondin `y`, the `v` indicates which of the\n     * two `y` values to use.\n     *\n     * It is normalized to the values `27` or `28` for legacy purposes.\n     */\n    get v() {\n        return this.#v;\n    }\n    set v(value) {\n        const v = getNumber(value, 'value');\n        assertArgument(v === 27 || v === 28, 'invalid v', 'v', value);\n        this.#v = v;\n    }\n    /**\n     * The EIP-155 `v` for legacy transactions. For non-legacy transactions, this value is `null`.\n     */\n    get networkV() {\n        return this.#networkV;\n    }\n    /**\n     * The chain ID for EIP-155 legacy transactions. For non-legacy transactions, this value is `null`.\n     */\n    get legacyChainId() {\n        const v = this.networkV;\n        if (v == null) {\n            return null;\n        }\n        return Signature.getChainId(v);\n    }\n    /**\n     * The `yParity` for the signature.\n     *\n     * See `v` for more details on how this value is used.\n     */\n    get yParity() {\n        return this.v === 27 ? 0 : 1;\n    }\n    /**\n     * The [EIP-2098](https://eips.ethereum.org/EIPS/eip-2098) compact representation of the `yParity` and `s` compacted\n     * into a single `bytes32`.\n     */\n    get yParityAndS() {\n        // The EIP-2098 compact representation\n        const yParityAndS = getBytes(this.s);\n        if (this.yParity) {\n            yParityAndS[0] |= 0x80;\n        }\n        return hexlify(yParityAndS);\n    }\n    /**\n     * The [EIP-2098](https://eips.ethereum.org/EIPS/eip-2098) compact representation.\n     */\n    get compactSerialized() {\n        return concat([this.r, this.yParityAndS]);\n    }\n    /**\n     * The serialized representation.\n     */\n    get serialized() {\n        return concat([this.r, this.s, this.yParity ? '0x1c' : '0x1b']);\n    }\n    /**\n     * @ignore\n     */\n    constructor(guard, r, s, v) {\n        assertPrivate(guard, _guard, 'Signature');\n        this.#r = r;\n        this.#s = s;\n        this.#v = v;\n        this.#networkV = null;\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return `Signature { r: \"${this.r}\", s: \"${this.s}\", yParity: ${this.yParity}, networkV: ${this.networkV} }`;\n    }\n    /**\n     * Returns a new identical {@link Signature | **Signature**}.\n     */\n    clone() {\n        const clone = new Signature(_guard, this.r, this.s, this.v);\n        if (this.networkV) {\n            clone.#networkV = this.networkV;\n        }\n        return clone;\n    }\n    /**\n     * Returns a representation that is compatible with `JSON.stringify`.\n     */\n    toJSON() {\n        const networkV = this.networkV;\n        return {\n            _type: 'signature',\n            networkV: networkV != null ? networkV.toString() : null,\n            r: this.r,\n            s: this.s,\n            v: this.v,\n        };\n    }\n    /**\n     * Compute the chain ID from the `v` in a legacy EIP-155 transactions.\n     *\n     * @example\n     *\n     * ```ts\n     * Signature.getChainId(45);\n     *\n     * Signature.getChainId(46);\n     * ```\n     *\n     * @param {BigNumberish} v - The `v` value from the signature.\n     * @returns {bigint} The chain ID.\n     */\n    static getChainId(v) {\n        const bv = getBigInt(v, 'v');\n        // The v is not an EIP-155 v, so it is the unspecified chain ID\n        if (bv == BN_27 || bv == BN_28) {\n            return BN_0;\n        }\n        // Bad value for an EIP-155 v\n        assertArgument(bv >= BN_35, 'invalid EIP-155 v', 'v', v);\n        return (bv - BN_35) / BN_2;\n    }\n    /**\n     * Compute the `v` for a chain ID for a legacy EIP-155 transactions.\n     *\n     * Legacy transactions which use [EIP-155](https://eips.ethereum.org/EIPS/eip-155) hijack the `v` property to\n     * include the chain ID.\n     *\n     * @example\n     *\n     * ```ts\n     * Signature.getChainIdV(5, 27);\n     *\n     * Signature.getChainIdV(5, 28);\n     * ```\n     *\n     * @param {BigNumberish} chainId - The chain ID.\n     * @param {27 | 28} v - The `v` value.\n     * @returns {bigint} The `v` value.\n     */\n    static getChainIdV(chainId, v) {\n        return getBigInt(chainId) * BN_2 + BigInt(35 + v - 27);\n    }\n    /**\n     * Compute the normalized legacy transaction `v` from a `yParirty`, a legacy transaction `v` or a legacy\n     * [EIP-155](https://eips.ethereum.org/EIPS/eip-155) transaction.\n     *\n     * @example\n     *\n     * ```ts\n     * // The values 0 and 1 imply v is actually yParity\n     * Signature.getNormalizedV(0);\n     *\n     * // Legacy non-EIP-1559 transaction (i.e. 27 or 28)\n     * Signature.getNormalizedV(27);\n     *\n     * // Legacy EIP-155 transaction (i.e. >= 35)\n     * Signature.getNormalizedV(46);\n     *\n     * // Invalid values throw\n     * Signature.getNormalizedV(5);\n     * ```\n     *\n     * @param {BigNumberish} v - The `v` value.\n     * @returns {27 | 28} The normalized `v` value.\n     * @throws {Error} Thrown if the `v` is invalid.\n     */\n    static getNormalizedV(v) {\n        const bv = getBigInt(v);\n        if (bv === BN_0 || bv === BN_27) {\n            return 27;\n        }\n        if (bv === BN_1 || bv === BN_28) {\n            return 28;\n        }\n        assertArgument(bv >= BN_35, 'invalid v', 'v', v);\n        // Otherwise, EIP-155 v means odd is 27 and even is 28\n        return bv & BN_1 ? 27 : 28;\n    }\n    /**\n     * Creates a new {@link Signature | **Signature**}.\n     *\n     * If no `sig` is provided, a new {@link Signature | **Signature**} is created with default values.\n     *\n     * If `sig` is a string, it is parsed.\n     *\n     * @param {SignatureLike} [sig] - The signature to create.\n     * @returns {Signature} The new signature.\n     */\n    static from(sig) {\n        function assertError(check, message) {\n            assertArgument(check, message, 'signature', sig);\n        }\n        if (sig == null) {\n            return new Signature(_guard, ZeroHash, ZeroHash, 27);\n        }\n        if (typeof sig === 'string') {\n            const bytes = getBytes(sig, 'signature');\n            if (bytes.length === 64) {\n                const r = hexlify(bytes.slice(0, 32));\n                const s = bytes.slice(32, 64);\n                const v = s[0] & 0x80 ? 28 : 27;\n                s[0] &= 0x7f;\n                return new Signature(_guard, r, hexlify(s), v);\n            }\n            if (bytes.length === 65) {\n                const r = hexlify(bytes.slice(0, 32));\n                const s = bytes.slice(32, 64);\n                assertError((s[0] & 0x80) === 0, 'non-canonical s');\n                const v = Signature.getNormalizedV(bytes[64]);\n                return new Signature(_guard, r, hexlify(s), v);\n            }\n            assertError(false, 'invalid raw signature length');\n        }\n        if (sig instanceof Signature) {\n            return sig.clone();\n        }\n        // Get r\n        const _r = sig.r;\n        assertError(_r != null, 'missing r');\n        const r = toUint256(_r);\n        // Get s; by any means necessary (we check consistency below)\n        const s = (function (s, yParityAndS) {\n            if (s != null) {\n                return toUint256(s);\n            }\n            if (yParityAndS != null) {\n                assertError(isHexString(yParityAndS, 32), 'invalid yParityAndS');\n                const bytes = getBytes(yParityAndS);\n                bytes[0] &= 0x7f;\n                return hexlify(bytes);\n            }\n            assertError(false, 'missing s');\n        })(sig.s, sig.yParityAndS);\n        assertError((getBytes(s)[0] & 0x80) == 0, 'non-canonical s');\n        // Get v; by any means necessary (we check consistency below)\n        const { networkV, v } = (function (_v, yParityAndS, yParity) {\n            if (_v != null) {\n                const v = getBigInt(_v);\n                return {\n                    networkV: v >= BN_35 ? v : undefined,\n                    v: Signature.getNormalizedV(v),\n                };\n            }\n            if (yParityAndS != null) {\n                assertError(isHexString(yParityAndS, 32), 'invalid yParityAndS');\n                return { v: getBytes(yParityAndS)[0] & 0x80 ? 28 : 27 };\n            }\n            if (yParity != null) {\n                switch (yParity) {\n                    case 0:\n                        return { v: 27 };\n                    case 1:\n                        return { v: 28 };\n                }\n                assertError(false, 'invalid yParity');\n            }\n            assertError(false, 'missing v');\n        })(sig.v, sig.yParityAndS, sig.yParity);\n        const result = new Signature(_guard, r, s, v);\n        if (networkV) {\n            result.#networkV = networkV;\n        }\n        // If multiple of v, yParity, yParityAndS we given, check they match\n        assertError(!('yParity' in sig && sig.yParity !== result.yParity), 'yParity mismatch');\n        assertError(!('yParityAndS' in sig && sig.yParityAndS !== result.yParityAndS), 'yParityAndS mismatch');\n        return result;\n    }\n}\n//# sourceMappingURL=signature.js.map","/**\n * Add details about signing here.\n */\nimport { secp256k1 } from '@noble/curves/secp256k1';\nimport { concat, dataLength, getBytes, getBytesCopy, hexlify, toBeHex, assertArgument } from '../utils/index.js';\nimport { Signature } from './signature.js';\n/**\n * A **SigningKey** provides high-level access to the elliptic curve cryptography (ECC) operations and key management.\n *\n * @category Crypto\n */\nexport class SigningKey {\n    #privateKey;\n    /**\n     * Creates a new **SigningKey** for `privateKey`.\n     */\n    constructor(privateKey) {\n        assertArgument(dataLength(privateKey) === 32, 'invalid private key', 'privateKey', '[REDACTED]');\n        this.#privateKey = hexlify(privateKey);\n    }\n    /**\n     * The private key.\n     */\n    get privateKey() {\n        return this.#privateKey;\n    }\n    /**\n     * The uncompressed public key.\n     *\n     * This will always begin with the prefix `0x04` and be 132 characters long (the `0x` prefix and 130 hexadecimal\n     * nibbles).\n     */\n    get publicKey() {\n        return SigningKey.computePublicKey(this.#privateKey);\n    }\n    /**\n     * The compressed public key.\n     *\n     * This will always begin with either the prefix `0x02` or `0x03` and be 68 characters long (the `0x` prefix and 33\n     * hexadecimal nibbles)\n     */\n    get compressedPublicKey() {\n        return SigningKey.computePublicKey(this.#privateKey, true);\n    }\n    /**\n     * Return the signature of the signed `digest`.\n     *\n     * @param {BytesLike} digest - The data to sign.\n     * @returns {Signature} The signature of the data.\n     * @throws {Error} If the digest is not 32 bytes long.\n     */\n    sign(digest) {\n        assertArgument(dataLength(digest) === 32, 'invalid digest length', 'digest', digest);\n        const sig = secp256k1.sign(getBytesCopy(digest), getBytesCopy(this.#privateKey), {\n            lowS: true,\n        });\n        return Signature.from({\n            r: toBeHex('0x' + sig.r.toString(16), 32),\n            s: toBeHex('0x' + sig.s.toString(16), 32),\n            v: sig.recovery ? 0x1c : 0x1b,\n        });\n    }\n    /**\n     * Returns the [ECDH](https://en.wikipedia.org/wiki/Elliptic-curve_Diffie-Hellman) shared secret between this\n     * private key and the `other` key.\n     *\n     * The `other` key may be any type of key, a raw public key, a compressed/uncompressed pubic key or aprivate key.\n     *\n     * Best practice is usually to use a cryptographic hash on the returned value before using it as a symetric secret.\n     *\n     * @example\n     *\n     * ```ts\n     * sign1 = new SigningKey(id('some-secret-1'));\n     * sign2 = new SigningKey(id('some-secret-2'));\n     *\n     * // Notice that privA.computeSharedSecret(pubB)...\n     * sign1.computeSharedSecret(sign2.publicKey);\n     *\n     * // ...is equal to privB.computeSharedSecret(pubA).\n     * sign2.computeSharedSecret(sign1.publicKey);\n     * ```\n     *\n     * @param {BytesLike} other - The other key to compute the shared secret with.\n     * @returns {string} The shared secret.\n     */\n    computeSharedSecret(other) {\n        const pubKey = SigningKey.computePublicKey(other);\n        return hexlify(secp256k1.getSharedSecret(getBytesCopy(this.#privateKey), getBytes(pubKey), false));\n    }\n    /**\n     * Compute the public key for `key`, optionally `compressed`.\n     *\n     * The `key` may be any type of key, a raw public key, a compressed/uncompressed public key or private key.\n     *\n     * @example\n     *\n     * ```ts\n     * sign = new SigningKey(id('some-secret'));\n     *\n     * // Compute the uncompressed public key for a private key\n     * SigningKey.computePublicKey(sign.privateKey);\n     *\n     * // Compute the compressed public key for a private key\n     * SigningKey.computePublicKey(sign.privateKey, true);\n     *\n     * // Compute the uncompressed public key\n     * SigningKey.computePublicKey(sign.publicKey, false);\n     *\n     * // Compute the Compressed a public key\n     * SigningKey.computePublicKey(sign.publicKey, true);\n     * ```\n     *\n     * @param {BytesLike} key - The key to compute the public key for.\n     * @param {boolean} [compressed] - Whether to return the compressed public key.\n     * @returns {string} The public key.\n     */\n    static computePublicKey(key, compressed) {\n        let bytes = getBytes(key, 'key');\n        // private key\n        if (bytes.length === 32) {\n            const pubKey = secp256k1.getPublicKey(bytes, !!compressed);\n            return hexlify(pubKey);\n        }\n        // raw public key; use uncompressed key with 0x04 prefix\n        if (bytes.length === 64) {\n            const pub = new Uint8Array(65);\n            pub[0] = 0x04;\n            pub.set(bytes, 1);\n            bytes = pub;\n        }\n        const point = secp256k1.ProjectivePoint.fromHex(bytes);\n        return hexlify(point.toRawBytes(compressed));\n    }\n    /**\n     * Returns the public key for the private key which produced the `signature` for the given `digest`.\n     *\n     * @example\n     *\n     * ```ts\n     * key = new SigningKey(id('some-secret'));\n     * digest = id('hello world');\n     * sig = key.sign(digest);\n     *\n     * // Notice the signer public key...\n     * key.publicKey;\n     *\n     * // ...is equal to the recovered public key\n     * SigningKey.recoverPublicKey(digest, sig);\n     * ```\n     *\n     * @param {BytesLike} digest - The data that was signed.\n     * @param {SignatureLike} signature - The signature of the data.\n     * @returns {string} The public key.\n     */\n    static recoverPublicKey(digest, signature) {\n        assertArgument(dataLength(digest) === 32, 'invalid digest length', 'digest', digest);\n        const sig = Signature.from(signature);\n        let secpSig = secp256k1.Signature.fromCompact(getBytesCopy(concat([sig.r, sig.s])));\n        secpSig = secpSig.addRecoveryBit(sig.yParity);\n        const pubKey = secpSig.recoverPublicKey(getBytesCopy(digest));\n        assertArgument(pubKey != null, 'invalid signautre for digest', 'signature', signature);\n        return '0x' + pubKey.toHex(false);\n    }\n    /**\n     * Returns the point resulting from adding the ellipic curve points `p0` and `p1`.\n     *\n     * This is not a common function most developers should require, but can be useful for certain privacy-specific\n     * techniques.\n     *\n     * For example, it is used by [**QuaiHDWallet**](../classes/QuaiHDWallet) to compute child addresses from parent\n     * public keys and chain codes.\n     *\n     * @param {BytesLike} p0 - The first point to add.\n     * @param {BytesLike} p1 - The second point to add.\n     * @param {boolean} [compressed] - Whether to return the compressed public key.\n     * @returns {string} The sum of the points.\n     */\n    static addPoints(p0, p1, compressed) {\n        const pub0 = secp256k1.ProjectivePoint.fromHex(SigningKey.computePublicKey(p0).substring(2));\n        const pub1 = secp256k1.ProjectivePoint.fromHex(SigningKey.computePublicKey(p1).substring(2));\n        return '0x' + pub0.add(pub1).toHex(!!compressed);\n    }\n}\n//# sourceMappingURL=signing-key.js.map","import { sha256 } from '@noble/hashes/sha256';\nimport { secp256k1, schnorr } from '@noble/curves/secp256k1';\n// BigInt / Uint8Array versions of Crypto functions that do not require point\n// math. If your JS interpreter has BigInt, you can use all of these. If not,\n// you'll need to either shim it in or override more of these functions.\n// Idea from noble-secp256k1, be nice to bad JS parsers\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _5n = BigInt(5);\nconst _7n = BigInt(7);\nconst _64n = BigInt(64);\nconst _64mask = BigInt('0xFFFFFFFFFFFFFFFF');\nconst CURVE = {\n    b: BigInt(7),\n    P: BigInt('0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F'),\n    n: BigInt('0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141'),\n};\n// Big Endian\nfunction read32b(bytes) {\n    if (bytes.length !== 32)\n        throw new Error(`Expected 32-bytes, not ${bytes.length}`);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.length);\n    let b = view.getBigUint64(0);\n    for (let offs = 8; offs < bytes.length; offs += 8) {\n        b <<= _64n;\n        b += view.getBigUint64(offs);\n    }\n    return b;\n}\nfunction write32b(num, dest = new Uint8Array(32)) {\n    // All input values are modulo P or n, so no bounds checking needed\n    const view = new DataView(dest.buffer, dest.byteOffset, dest.length);\n    for (let offs = 24; offs >= 0; offs -= 8) {\n        view.setBigUint64(offs, num & _64mask);\n        num >>= _64n;\n    }\n    return dest;\n}\nfunction readScalar(bytes) {\n    const a = read32b(bytes);\n    if (a >= CURVE.n)\n        throw new Error('Expected value mod n');\n    return a;\n}\nfunction readSecret(bytes) {\n    const a = readScalar(bytes);\n    if (a === 0n)\n        throw new Error('Expected non-zero');\n    return a;\n}\n// The short Weierstrass form curve equation simplifes to y^2 = x^3 + 7.\nfunction secp256k1Right(x) {\n    const x2 = (x * x) % CURVE.P;\n    const x3 = (x2 * x) % CURVE.P;\n    return (x3 + CURVE.b) % CURVE.P;\n}\n// For prime P, the Jacobi Symbol of 'a' is 1 if and only if 'a' is a quadratic\n// residue mod P, ie. there exists a value 'x' for whom x^2 = a.\nfunction jacobiSymbol(a) {\n    if (a === _0n)\n        return 0; // Vanishingly improbable\n    let p = CURVE.P;\n    let sign = 1;\n    // This algorithm is fairly heavily optimized, so don't simplify it w/o benchmarking\n    for (;;) {\n        let and3;\n        // Handle runs of zeros efficiently w/o flipping sign each time\n        for (and3 = a & _3n; and3 === _0n; a >>= _2n, and3 = a & _3n)\n            ;\n        // If there's one more zero, shift it off and flip the sign\n        if (and3 === _2n) {\n            a >>= _1n;\n            const pand7 = p & _7n;\n            if (pand7 === _3n || pand7 === _5n)\n                sign = -sign;\n        }\n        if (a === _1n)\n            break;\n        if ((_3n & a) === _3n && (_3n & p) === _3n)\n            sign = -sign;\n        [a, p] = [p % a, a];\n    }\n    return sign > 0 ? 1 : -1;\n}\nfunction isPoint(p) {\n    if (p.length < 33)\n        return false;\n    const t = p[0];\n    if (p.length === 33) {\n        return (t === 0x02 || t === 0x03) && isXOnlyPoint(p.subarray(1));\n    }\n    if (t !== 0x04 || p.length !== 65)\n        return false;\n    const x = read32b(p.subarray(1, 33));\n    if (x === _0n)\n        return false;\n    if (x >= CURVE.P)\n        return false;\n    const y = read32b(p.subarray(33));\n    if (y === _0n)\n        return false;\n    if (y >= CURVE.P)\n        return false;\n    const left = (y * y) % CURVE.P;\n    const right = secp256k1Right(x);\n    return left === right;\n}\nfunction isXOnlyPoint(p) {\n    if (p.length !== 32)\n        return false;\n    const x = read32b(p);\n    if (x === _0n)\n        return false;\n    if (x >= CURVE.P)\n        return false;\n    const y2 = secp256k1Right(x);\n    return jacobiSymbol(y2) === 1; // If sqrt(y^2) exists, x is on the curve.\n}\nfunction scalarAdd(a, b) {\n    const aN = readScalar(a);\n    const bN = readScalar(b);\n    const sum = (aN + bN) % CURVE.n;\n    return write32b(sum);\n}\nfunction scalarMultiply(a, b) {\n    const aN = readScalar(a);\n    const bN = readScalar(b);\n    const product = (aN * bN) % CURVE.n;\n    return write32b(product);\n}\nfunction scalarNegate(a) {\n    const aN = readScalar(a);\n    const negated = aN === _0n ? _0n : CURVE.n - aN;\n    return write32b(negated);\n}\nfunction scalarMod(a) {\n    const aN = read32b(a);\n    const remainder = aN % CURVE.n;\n    return write32b(remainder);\n}\nfunction isScalar(t) {\n    try {\n        readScalar(t);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nfunction isSecret(s) {\n    try {\n        readSecret(s);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nfunction pointNegate(p) {\n    // hasEvenY does basic structure check, so start there\n    const even = hasEvenY(p);\n    // `from` because node.Buffer.slice doesn't copy but looks like a Uint8Array\n    const negated = Uint8Array.from(p);\n    if (p.length === 33) {\n        negated[0] = even ? 3 : 2;\n    }\n    else if (p.length === 65) {\n        const y = read32b(p.subarray(33));\n        if (y >= CURVE.P)\n            throw new Error('Expected Y coordinate mod P');\n        const minusY = y === _0n ? _0n : CURVE.P - y;\n        write32b(minusY, negated.subarray(33));\n    }\n    return negated;\n}\nfunction pointX(p) {\n    if (p.length === 32)\n        return p;\n    hasEvenY(p); // hasEvenY throws if not well structured\n    return p.slice(1, 33);\n}\nfunction hasEvenY(p) {\n    if (p.length === 33) {\n        if (p[0] === 2)\n            return true;\n        else if (p[0] === 3)\n            return false;\n        else\n            throw new Error('Wrong first byte to be a point');\n    }\n    if (p.length === 65) {\n        if (p[0] !== 4)\n            throw new Error('Wrong first byte to be point');\n        return p[64] % 2 === 0;\n    }\n    throw new Error('Wrong length to be a point');\n}\nfunction pointMultiplyUnsafe(p, a, compress) {\n    try {\n        const product = secp256k1.ProjectivePoint.fromHex(p).multiplyAndAddUnsafe(secp256k1.ProjectivePoint.ZERO, BigInt(`0x${Buffer.from(a).toString('hex')}`), BigInt(1));\n        if (!product)\n            return null;\n        return product.toRawBytes(compress);\n    }\n    catch {\n        return null;\n    }\n}\nfunction pointMultiplyAndAddUnsafe(p1, a, p2, compress) {\n    try {\n        const p2p = secp256k1.ProjectivePoint.fromHex(p2);\n        const p = secp256k1.ProjectivePoint.fromHex(p1).multiplyAndAddUnsafe(p2p, BigInt(`0x${Buffer.from(a).toString('hex')}`), BigInt(1));\n        if (!p)\n            return null;\n        return p.toRawBytes(compress);\n    }\n    catch {\n        return null;\n    }\n}\nfunction pointAdd(a, b, compress) {\n    try {\n        return secp256k1.ProjectivePoint.fromHex(a).add(secp256k1.ProjectivePoint.fromHex(b)).toRawBytes(compress);\n    }\n    catch {\n        return null;\n    }\n}\nfunction pointAddTweak(p, tweak, compress) {\n    try {\n        const P = secp256k1.ProjectivePoint.fromHex(p);\n        const t = readSecret(tweak);\n        const Q = secp256k1.ProjectivePoint.BASE.multiplyAndAddUnsafe(P, t, 1n);\n        if (!Q)\n            throw new Error('Tweaked point at infinity');\n        return Q.toRawBytes(compress);\n    }\n    catch {\n        return null;\n    }\n}\nfunction pointCompress(p, compress = true) {\n    return secp256k1.ProjectivePoint.fromHex(p).toRawBytes(compress);\n}\nfunction liftX(p) {\n    try {\n        return secp256k1.ProjectivePoint.fromHex(p).toRawBytes(false);\n    }\n    catch {\n        return null;\n    }\n}\nfunction getPublicKey(s, compress) {\n    try {\n        return secp256k1.getPublicKey(s, compress);\n    }\n    catch {\n        return null;\n    }\n}\nfunction taggedHash(tag, ...messages) {\n    return schnorr.utils.taggedHash(tag, ...messages);\n}\nfunction sha256Hash(...messages) {\n    const h = sha256.create();\n    for (const message of messages)\n        h.update(message);\n    return h.digest();\n}\nexport const musigCrypto = {\n    read32b,\n    write32b,\n    readScalar,\n    readSecret,\n    secp256k1Right,\n    jacobiSymbol,\n    isPoint,\n    isXOnlyPoint,\n    scalarAdd,\n    scalarMultiply,\n    scalarNegate,\n    scalarMod,\n    isScalar,\n    isSecret,\n    pointNegate,\n    pointX,\n    hasEvenY,\n    pointMultiplyUnsafe,\n    pointMultiplyAndAddUnsafe,\n    pointAdd,\n    pointAddTweak,\n    pointCompress,\n    liftX,\n    getPublicKey,\n    taggedHash,\n    sha256: sha256Hash,\n};\n//# sourceMappingURL=musig.js.map","/**\n * A fundamental building block of Ethereum is the underlying cryptographic primitives.\n */\nnull;\n// We import all these so we can export lock()\nimport { computeHmac } from './hmac.js';\nimport { keccak256 } from './keccak.js';\nimport { ripemd160 } from './ripemd160.js';\nimport { pbkdf2 } from './pbkdf2.js';\nimport { randomBytes } from './random.js';\nimport { scrypt, scryptSync } from './scrypt.js';\nimport { sha256, sha512 } from './sha2.js';\nexport { computeHmac, randomBytes, keccak256, ripemd160, sha256, sha512, pbkdf2, scrypt, scryptSync };\nexport { SigningKey } from './signing-key.js';\nexport { Signature } from './signature.js';\n/**\n * Once called, prevents any future change to the underlying cryptographic primitives using the `.register` feature for\n * hooks.\n *\n * @category Crypto\n */\nfunction lock() {\n    computeHmac.lock();\n    keccak256.lock();\n    pbkdf2.lock();\n    randomBytes.lock();\n    ripemd160.lock();\n    scrypt.lock();\n    scryptSync.lock();\n    sha256.lock();\n    sha512.lock();\n    randomBytes.lock();\n}\nexport { lock };\nexport { musigCrypto } from './musig.js';\n//# sourceMappingURL=index.js.map","import { keccak256, SigningKey } from '../crypto/index.js';\nimport { getBytes, assertArgument, concat, zeroPadValue, dataSlice, toBigInt, toBeHex, stripZerosLeft, } from '../utils/index.js';\nexport function formatMixedCaseChecksumAddress(address) {\n    address = address.toLowerCase();\n    const chars = address.substring(2).split('');\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n    const hashed = getBytes(keccak256(expanded));\n    for (let i = 0; i < 40; i += 2) {\n        if (hashed[i >> 1] >> 4 >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return '0x' + chars.join('');\n}\n/**\n * Returns a normalized and checksumed address for `address`. This accepts non-checksum addressesa and checksum\n * addresses.\n *\n * The checksum in Quai uses the capitalization (upper-case vs lower-case) of the characters within an address to encode\n * its checksum, which offers, on average, a checksum of 15-bits.\n *\n * If `address` contains both upper-case and lower-case, it is assumed to already be a checksum address and its checksum\n * is validated, and if the address fails its expected checksum an error is thrown.\n *\n * If you wish the checksum of `address` to be ignore, it should be converted to lower-case (i.e. `.toLowercase()`)\n * before being passed in. This should be a very rare situation though, that you wish to bypass the safeguards in place\n * to protect against an address that has been incorrectly copied from another source.\n *\n * @category Address\n * @example\n *\n * ```js\n * // Adds the checksum (via upper-casing specific letters)\n * getAddress('0x8ba1f109551bd432803012645ac136ddd64dba72');\n *\n * // Throws an error if an address contains mixed case,\n * // but the checksum fails\n * getAddress('0x8Ba1f109551bD432803012645Ac136ddd64DBA72');\n * ```\n */\nexport function getAddress(address) {\n    assertArgument(typeof address === 'string', 'invalid address', 'address', address);\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (!address.startsWith('0x')) {\n            address = '0x' + address;\n        }\n        const result = formatMixedCaseChecksumAddress(address);\n        // If original address is mix cased and recomputed version doesn't\n        // match the original this could indicate a potential typo or mispaste.\n        assertArgument(!address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) || result === address, 'invalid address checksum', 'address', address);\n        return result;\n    }\n    assertArgument(false, 'invalid address string format', 'address', address);\n}\nexport function getContractAddress(from, nonce, data) {\n    const nonceBytes = zeroPadValue(toBeHex(toBigInt(nonce)), 8);\n    return getAddress(dataSlice(keccak256(concat([getAddress(from), nonceBytes, stripZerosLeft(data)])), 12));\n}\n/**\n * Returns the address for the `key`.\n *\n * The key may be any standard form of public key or a private key.\n *\n * @category Address\n * @param {string | SigningKey} key - The key to compute the address for.\n * @returns {string} The address.\n */\nexport function computeAddress(key) {\n    let pubkey;\n    if (typeof key === 'string') {\n        pubkey = SigningKey.computePublicKey(key, false);\n    }\n    else {\n        pubkey = key.publicKey;\n    }\n    return getAddress(keccak256('0x' + pubkey.substring(4)).substring(26));\n}\n/**\n * Returns the recovered address for the private key that was used to sign `digest` that resulted in `signature`.\n *\n * @category Address\n * @param {BytesLike} digest - The digest of the message.\n * @param {SignatureLike} signature - The signature.\n * @returns {string} The address.\n */\nexport function recoverAddress(digest, signature) {\n    return computeAddress(SigningKey.recoverPublicKey(digest, signature));\n}\n//# sourceMappingURL=address.js.map","import { assertArgument } from '../utils/index.js';\nimport { formatMixedCaseChecksumAddress, getAddress } from './address.js';\n/**\n * Returns true if `value` is an object which implements the [**Addressable**](../interfaces/Addressable) interface.\n *\n * @category Address\n * @example\n *\n * ```js\n * // Wallets and AbstractSigner sub-classes\n * isAddressable(Wallet.createRandom());\n *\n * // Contracts\n * contract = new Contract('0x643aA0A61eADCC9Cc202D1915D942d35D005400C', [], provider);\n * isAddressable(contract);\n * ```\n *\n * @param {any} value - The value to check.\n * @returns {boolean} True if the value is an Addressable.\n */\nexport function isAddressable(value) {\n    return value && typeof value.getAddress === 'function';\n}\n/**\n * Returns true if `value` is a valid address.\n *\n * @category Address\n * @example\n *\n * ```js\n * // Valid address\n * isAddress('0x8ba1f109551bD432803012645Ac136ddd64DBA72');\n *\n * // Invalid checksum\n * isAddress('0x8Ba1f109551bD432803012645Ac136ddd64DBa72');\n * ```\n *\n * @param {any} value - The value to check.\n * @returns {boolean} True if the value is a valid address.\n */\nexport function isAddress(value) {\n    try {\n        getAddress(value);\n        return true;\n        // eslint-disable-next-line no-empty\n    }\n    catch (error) { }\n    return false;\n}\nasync function checkAddress(target, promise) {\n    const result = await promise;\n    if (result == null || result === '0x0000000000000000000000000000000000000000') {\n        assertArgument(false, 'invalid AddressLike value; did not resolve to a value address', 'target', target);\n    }\n    return result;\n}\n/**\n * Resolves to an address for the `target`, which may be any supported address type, an\n * [**Addressable**](../interfaces/Addressable) or a Promise which resolves to an address.\n *\n * @category Address\n * @example\n *\n * ```js\n * addr = '0x6B175474E89094C44Da98b954EedeAC495271d0F';\n *\n * // Addresses are return synchronously\n * resolveAddress(addr, provider);\n *\n * // Address promises are resolved asynchronously\n * resolveAddress(Promise.resolve(addr));\n *\n * // Addressable objects are resolved asynchronously\n * contract = new Contract(addr, []);\n * resolveAddress(contract, provider);\n * ```\n *\n * @param {AddressLike} target - The target to resolve to an address.\n * @returns {string | Promise<string>} The resolved address.\n */\nexport function resolveAddress(target) {\n    if (typeof target === 'string') {\n        if (target.match(/^0x[0-9a-f]{40}$/i)) {\n            return target;\n        }\n    }\n    else if (isAddressable(target)) {\n        return checkAddress(target, target.getAddress());\n    }\n    else if (target && typeof target.then === 'function') {\n        return checkAddress(target, target);\n    }\n    assertArgument(false, 'unsupported addressable value', 'target', target);\n}\n/**\n * Checks if the address is a valid mixed case checksummed address.\n *\n * @category Address\n * @param address - The address to validate.\n * @returns True if the address is a valid mixed case checksummed address.\n */\nexport function validateAddress(address) {\n    assertArgument(typeof address === 'string', 'address must be string', 'address', address);\n    assertArgument(Boolean(address.match(/^(0x)?[0-9a-fA-F]{40}$/)), 'invalid address string format', 'address', address);\n    assertArgument(formatMixedCaseChecksumAddress(address) === address, 'invalid address checksum', 'address', address);\n}\n/**\n * Checks whether a given address is in the Qi ledger scope by checking the 9th bit of the address.\n *\n * @category Address\n * @param {string} address - The address to check\n * @returns {boolean} True if the address is in the Qi ledger scope, false otherwise.\n */\nexport function isQiAddress(address) {\n    const secondByte = address.substring(4, 6);\n    const binaryString = parseInt(secondByte, 16).toString(2).padStart(8, '0');\n    const isUTXO = binaryString[0] === '1';\n    return isUTXO;\n}\n/**\n * Checks whether a given address is in the Quai ledger scope by checking the 9th bit of the address.\n *\n * @category Address\n * @param {string} address - The address to check\n * @returns {boolean} True if the address is in the Quai ledger scope, false otherwise.\n */\nexport function isQuaiAddress(address) {\n    return !isQiAddress(address);\n}\n//# sourceMappingURL=checks.js.map","import { Ledger, toZone } from '../constants/zones.js';\nimport { isQiAddress } from '../address/checks.js';\n/**\n * Retrieves the shard information for a given address based on its byte prefix. The function parses the address to\n * extract its byte prefix, then filters the ShardData to find a matching shard entry. If no matching shard is found, it\n * returns null.\n *\n * @category Utils\n * @param {string} address - The blockchain address to be analyzed. The address should start with \"0x\" followed by the\n *   hexadecimal representation.\n * @returns {Object | null} An object containing the shard information, or null if no\n */\nexport function getZoneForAddress(address) {\n    try {\n        return toZone(address.slice(0, 4));\n    }\n    catch (error) {\n        return null;\n    }\n}\n/**\n * Extracts both zone and UTXO information from a given blockchain address. This function first determines the address's\n * zone by its byte prefix, then checks the 9th bit of the address to ascertain if it's a UTXO or non-UTXO address.\n *\n * @category Utils\n * @param {string} address - The blockchain address to be analyzed, expected to start with \"0x\" followed by its\n *   hexadecimal representation.\n * @returns {Object | null} An object containing the zone and UTXO information, or null if no address is found.\n */\nexport function getAddressDetails(address) {\n    const isQiLedger = (parseInt(address.substring(4, 5), 16) & 0x1) === Ledger.Qi;\n    return { zone: toZone(address.substring(0, 4)), ledger: isQiLedger ? Ledger.Qi : Ledger.Quai };\n}\n/**\n * Determines the transaction type based on the sender and recipient addresses. The function checks if both addresses\n * are UTXO addresses, in which case it returns 2. If only the sender address is a UTXO address, it returns 1.\n * Otherwise, it returns 0.\n *\n * @category Utils\n * @param {string | null} from - The sender address. If null, the function returns 0.\n * @param {string | null} to - The recipient address. If null, the function returns 0.\n * @returns {number} The transaction type based on the addresses.\n */\nexport function getTxType(from, to) {\n    if (from === null || to === null)\n        return 0;\n    const senderAddressIsQi = isQiAddress(from);\n    const recipientAddressIsQi = isQiAddress(to);\n    switch (true) {\n        case senderAddressIsQi && recipientAddressIsQi:\n            return 2;\n        case senderAddressIsQi && !recipientAddressIsQi:\n            return 1;\n        default:\n            return 0;\n    }\n}\n/**\n * Location of a chain within the Quai hierarchy\n *\n * Prime = [] region[0] = [0] zone[1,2] = [1, 2]\n *\n * @param shard - The shard to get the location for\n * @returns The location of the chain within the Quai hierarchy\n */\nexport function getNodeLocationFromZone(zone) {\n    const zoneId = zone.slice(2);\n    if (zoneId.length > 2) {\n        throw new Error(`Invalid zone: ${zone}`);\n    }\n    else if (zoneId.length === 0) {\n        return [];\n    }\n    return zoneId.split('').map(Number);\n}\nexport function getZoneFromNodeLocation(location) {\n    if (location.length > 2) {\n        throw new Error('Invalid location');\n    }\n    return toZone(`0x${location.join('')}`);\n}\n//# sourceMappingURL=shards.js.map","import { defineProperties, concat, getBytesCopy, getNumber, hexlify, toBeArray, toBigInt, toNumber, assert, assertArgument, } from '../../utils/index.js';\n/**\n * @ignore\n */\nexport const WordSize = 32;\nconst Padding = new Uint8Array(WordSize);\n// Properties used to immediate pass through to the underlying object\n// - `then` is used to detect if an object is a Promise for await\nconst passProperties = ['then'];\nconst _guard = {};\nfunction throwError(name, error) {\n    const wrapped = new Error(`deferred error during ABI decoding triggered accessing ${name}`);\n    wrapped.error = error;\n    throw wrapped;\n}\n/**\n * A {@link Result | **Result**} is a sub-class of Array, which allows accessing any of its values either positionally by\n * its index or, if keys are provided by its name.\n *\n * @category Application Binary Interface\n */\nexport class Result extends Array {\n    #names;\n    /**\n     * @ignore\n     */\n    constructor(...args) {\n        // To properly sub-class Array so the other built-in\n        // functions work, the constructor has to behave fairly\n        // well. So, in the event we are created via fromItems()\n        // we build the read-only Result object we want, but on\n        // any other input, we use the default constructor\n        // constructor(guard: any, items: Array<any>, keys?: Array<null | string>);\n        const guard = args[0];\n        let items = args[1];\n        let names = (args[2] || []).slice();\n        let wrap = true;\n        if (guard !== _guard) {\n            items = args;\n            names = [];\n            wrap = false;\n        }\n        // Can't just pass in ...items since an array of length 1\n        // is a special case in the super.\n        super(items.length);\n        items.forEach((item, index) => {\n            this[index] = item;\n        });\n        // Find all unique keys\n        const nameCounts = names.reduce((accum, name) => {\n            if (typeof name === 'string') {\n                accum.set(name, (accum.get(name) || 0) + 1);\n            }\n            return accum;\n        }, new Map());\n        // Remove any key thats not unique\n        this.#names = Object.freeze(items.map((item, index) => {\n            const name = names[index];\n            if (name != null && nameCounts.get(name) === 1) {\n                return name;\n            }\n            return null;\n        }));\n        if (!wrap) {\n            return;\n        }\n        // A wrapped Result is immutable\n        Object.freeze(this);\n        // Proxy indices and names so we can trap deferred errors\n        return new Proxy(this, {\n            get: (target, prop, receiver) => {\n                if (typeof prop === 'string') {\n                    // Index accessor\n                    if (prop.match(/^[0-9]+$/)) {\n                        const index = getNumber(prop, '%index');\n                        if (index < 0 || index >= this.length) {\n                            throw new RangeError('out of result range');\n                        }\n                        const item = target[index];\n                        if (item instanceof Error) {\n                            throwError(`index ${index}`, item);\n                        }\n                        return item;\n                    }\n                    // Pass important checks (like `then` for Promise) through\n                    if (passProperties.indexOf(prop) >= 0) {\n                        return Reflect.get(target, prop, receiver);\n                    }\n                    const value = target[prop];\n                    if (value instanceof Function) {\n                        // Make sure functions work with private variables\n                        // See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy#no_private_property_forwarding\n                        return function (...args) {\n                            return value.apply(this === receiver ? target : this, args);\n                        };\n                    }\n                    else if (!(prop in target)) {\n                        // Possible name accessor\n                        return target.getValue.apply(this === receiver ? target : this, [prop]);\n                    }\n                }\n                return Reflect.get(target, prop, receiver);\n            },\n        });\n    }\n    /**\n     * Returns the Result as a normal Array.\n     *\n     * This will throw if there are any outstanding deferred errors.\n     */\n    toArray() {\n        const result = [];\n        this.forEach((item, index) => {\n            if (item instanceof Error) {\n                throwError(`index ${index}`, item);\n            }\n            result.push(item);\n        });\n        return result;\n    }\n    /**\n     * Returns the Result as an Object with each name-value pair.\n     *\n     * This will throw if any value is unnamed, or if there are any outstanding deferred errors.\n     */\n    toObject() {\n        return this.#names.reduce(\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        (accum, name, index) => {\n            assert(name != null, 'value at index ${ index } unnamed', 'UNSUPPORTED_OPERATION', {\n                operation: 'toObject()',\n            });\n            // Add values for names that don't conflict\n            if (!(name in accum)) {\n                accum[name] = this.getValue(name);\n            }\n            return accum;\n        }, {});\n    }\n    /**\n     * @ignore\n     */\n    slice(start, end) {\n        if (start == null) {\n            start = 0;\n        }\n        if (start < 0) {\n            start += this.length;\n            if (start < 0) {\n                start = 0;\n            }\n        }\n        if (end == null) {\n            end = this.length;\n        }\n        if (end < 0) {\n            end += this.length;\n            if (end < 0) {\n                end = 0;\n            }\n        }\n        if (end > this.length) {\n            end = this.length;\n        }\n        const result = [], names = [];\n        for (let i = start; i < end; i++) {\n            result.push(this[i]);\n            names.push(this.#names[i]);\n        }\n        return new Result(_guard, result, names);\n    }\n    /**\n     * @ignore\n     */\n    filter(callback, thisArg) {\n        const result = [], names = [];\n        for (let i = 0; i < this.length; i++) {\n            const item = this[i];\n            if (item instanceof Error) {\n                throwError(`index ${i}`, item);\n            }\n            if (callback.call(thisArg, item, i, this)) {\n                result.push(item);\n                names.push(this.#names[i]);\n            }\n        }\n        return new Result(_guard, result, names);\n    }\n    /**\n     * @ignore\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-constraint\n    map(callback, thisArg) {\n        const result = [];\n        for (let i = 0; i < this.length; i++) {\n            const item = this[i];\n            if (item instanceof Error) {\n                throwError(`index ${i}`, item);\n            }\n            result.push(callback.call(thisArg, item, i, this));\n        }\n        return result;\n    }\n    /**\n     * Returns the value for `name`.\n     *\n     * Since it is possible to have a key whose name conflicts with a method on a {@link Result | **Result**} or its\n     * superclass Array, or any JavaScript keyword, this ensures all named values are still accessible by name.\n     *\n     * @param {string} name - The name of the value to retrieve.\n     *\n     * @returns The value for `name`.\n     */\n    getValue(name) {\n        const index = this.#names.indexOf(name);\n        if (index === -1) {\n            return undefined;\n        }\n        const value = this[index];\n        if (value instanceof Error) {\n            throwError(`property ${JSON.stringify(name)}`, value.error);\n        }\n        return value;\n    }\n    /**\n     * Creates a new {@link Result | **Result**} for `items` with each entry also accessible by its corresponding name in\n     * `keys`.\n     *\n     * @param {any[]} items - The items to include in the Result.\n     * @param {(null | string)[]} [keys] - The names for each item in `items`.\n     *\n     * @returns The new Result.\n     */\n    static fromItems(items, keys) {\n        return new Result(_guard, items, keys);\n    }\n}\n/**\n * Returns all errors found in a {@link Result | **Result**}.\n *\n * Since certain errors encountered when creating a {@link Result | **Result**} do not impact the ability to continue\n * parsing data, they are deferred until they are actually accessed. Hence a faulty string in an Event that is never\n * used does not impact the program flow.\n *\n * However, sometimes it may be useful to access, identify or validate correctness of a {@link Result | **Result**}.\n *\n * @category Application Binary Interface\n * @param {Result} result - The Result to check for errors.\n *\n * @returns An array of objects with the path to the error and the error itself.\n */\nexport function checkResultErrors(result) {\n    // Find the first error (if any)\n    const errors = [];\n    const checkErrors = function (path, object) {\n        if (!Array.isArray(object)) {\n            return;\n        }\n        for (const key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n            try {\n                checkErrors(childPath, object[key]);\n            }\n            catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    };\n    checkErrors([], result);\n    return errors;\n}\nfunction getValue(value) {\n    let bytes = toBeArray(value);\n    assert(bytes.length <= WordSize, 'value out-of-bounds', 'BUFFER_OVERRUN', {\n        buffer: bytes,\n        length: WordSize,\n        offset: bytes.length,\n    });\n    if (bytes.length !== WordSize) {\n        bytes = getBytesCopy(concat([Padding.slice(bytes.length % WordSize), bytes]));\n    }\n    return bytes;\n}\n/**\n * @ignore\n */\nexport class Coder {\n    // The coder name:\n    //   - address, uint256, tuple, array, etc.\n    name;\n    // The fully expanded type, including composite types:\n    //   - address, uint256, tuple(address,bytes), uint256[3][4][],  etc.\n    type;\n    // The localName bound in the signature, in this example it is \"baz\":\n    //   - tuple(address foo, uint bar) baz\n    localName;\n    // Whether this type is dynamic:\n    //  - Dynamic: bytes, string, address[], tuple(boolean[]), etc.\n    //  - Not Dynamic: address, uint256, boolean[3], tuple(address, uint8)\n    dynamic;\n    constructor(name, type, localName, dynamic) {\n        defineProperties(this, { name, type, localName, dynamic }, {\n            name: 'string',\n            type: 'string',\n            localName: 'string',\n            dynamic: 'boolean',\n        });\n    }\n    _throwError(message, value) {\n        assertArgument(false, message, this.localName, value);\n    }\n}\n/**\n * @ignore\n */\nexport class Writer {\n    // An array of WordSize lengthed objects to concatenation\n    #data;\n    #dataLength;\n    constructor() {\n        this.#data = [];\n        this.#dataLength = 0;\n    }\n    get data() {\n        return concat(this.#data);\n    }\n    get length() {\n        return this.#dataLength;\n    }\n    #writeData(data) {\n        this.#data.push(data);\n        this.#dataLength += data.length;\n        return data.length;\n    }\n    appendWriter(writer) {\n        return this.#writeData(getBytesCopy(writer.data));\n    }\n    // Arrayish item; pad on the right to *nearest* WordSize\n    writeBytes(value) {\n        let bytes = getBytesCopy(value);\n        const paddingOffset = bytes.length % WordSize;\n        if (paddingOffset) {\n            bytes = getBytesCopy(concat([bytes, Padding.slice(paddingOffset)]));\n        }\n        return this.#writeData(bytes);\n    }\n    // Numeric item; pad on the left *to* WordSize\n    writeValue(value) {\n        return this.#writeData(getValue(value));\n    }\n    // Inserts a numeric place-holder, returning a callback that can\n    // be used to asjust the value later\n    writeUpdatableValue() {\n        const offset = this.#data.length;\n        this.#data.push(Padding);\n        this.#dataLength += WordSize;\n        return (value) => {\n            this.#data[offset] = getValue(value);\n        };\n    }\n}\n/**\n * @ignore\n */\nexport class Reader {\n    // Allows incomplete unpadded data to be read; otherwise an error\n    // is raised if attempting to overrun the buffer. This is required\n    // to deal with an old Solidity bug, in which event data for\n    // external (not public thoguh) was tightly packed.\n    allowLoose;\n    #data;\n    #offset;\n    #bytesRead;\n    #parent;\n    #maxInflation;\n    constructor(data, allowLoose, maxInflation) {\n        defineProperties(this, { allowLoose: !!allowLoose });\n        this.#data = getBytesCopy(data);\n        this.#bytesRead = 0;\n        this.#parent = null;\n        this.#maxInflation = maxInflation != null ? maxInflation : 1024;\n        this.#offset = 0;\n    }\n    get data() {\n        return hexlify(this.#data);\n    }\n    get dataLength() {\n        return this.#data.length;\n    }\n    get consumed() {\n        return this.#offset;\n    }\n    get bytes() {\n        return new Uint8Array(this.#data);\n    }\n    #incrementBytesRead(count) {\n        if (this.#parent) {\n            return this.#parent.#incrementBytesRead(count);\n        }\n        this.#bytesRead += count;\n        // Check for excessive inflation (see: #4537)\n        assert(this.#maxInflation < 1 || this.#bytesRead <= this.#maxInflation * this.dataLength, \n        // eslint-disable-next-line no-useless-escape\n        `compressed ABI data exceeds inflation ratio of ${this.#maxInflation} ( see: https:/\\/github.com/ethers-io/ethers.js/issues/4537 )`, 'BUFFER_OVERRUN', {\n            buffer: getBytesCopy(this.#data),\n            offset: this.#offset,\n            length: count,\n            info: {\n                bytesRead: this.#bytesRead,\n                dataLength: this.dataLength,\n            },\n        });\n    }\n    #peekBytes(offset, length, loose) {\n        let alignedLength = Math.ceil(length / WordSize) * WordSize;\n        if (this.#offset + alignedLength > this.#data.length) {\n            if (this.allowLoose && loose && this.#offset + length <= this.#data.length) {\n                alignedLength = length;\n            }\n            else {\n                assert(false, 'data out-of-bounds', 'BUFFER_OVERRUN', {\n                    buffer: getBytesCopy(this.#data),\n                    length: this.#data.length,\n                    offset: this.#offset + alignedLength,\n                });\n            }\n        }\n        return this.#data.slice(this.#offset, this.#offset + alignedLength);\n    }\n    // Create a sub-reader with the same underlying data, but offset\n    subReader(offset) {\n        const reader = new Reader(this.#data.slice(this.#offset + offset), this.allowLoose, this.#maxInflation);\n        reader.#parent = this;\n        return reader;\n    }\n    // Read bytes\n    readBytes(length, loose) {\n        const bytes = this.#peekBytes(0, length, !!loose);\n        this.#incrementBytesRead(length);\n        this.#offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n    // Read a numeric values\n    readValue() {\n        return toBigInt(this.readBytes(WordSize));\n    }\n    readIndex() {\n        return toNumber(this.readBytes(WordSize));\n    }\n}\n//# sourceMappingURL=abstract-coder.js.map","import { keccak256 } from '../crypto/index.js';\nimport { concat, dataSlice, getBigInt, getBytes, assertArgument } from '../utils/index.js';\nimport { getAddress } from './address.js';\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\n/**\n * Returns the address that would result from a `CREATE` for `tx`.\n *\n * This can be used to compute the address a contract will be deployed to by an EOA when sending a deployment\n * transaction (i.e. when the `to` address is `null`).\n *\n * This can also be used to compute the address a contract will be deployed to by a contract, by using the contract's\n * address as the `to` and the contract's nonce.\n *\n * @category Address\n * @example\n *\n * ```js\n * from = '0x8ba1f109551bD432803012645Ac136ddd64DBA72';\n * nonce = 5;\n *\n * getCreateAddress({ from, nonce });\n * ```\n *\n * @param {object} tx - The transaction object.\n * @param {string} tx.from - The address of the sender.\n * @param {BigNumberish} tx.nonce - The nonce of the sender.\n * @param {string} [tx.data] - The data of the transaction.\n */\nexport function getCreateAddress(tx) {\n    const from = getAddress(tx.from);\n    const nonce = getBigInt(tx.nonce, 'tx.nonce');\n    const nonceBytes = bigEndianNonce(nonce);\n    const fromBytes = getBytes(from);\n    const codeBytes = tx.data ? getBytes(tx.data) : new Uint8Array();\n    const concatenated = new Uint8Array([...fromBytes, ...nonceBytes, ...codeBytes]);\n    const hash = keccak256(concatenated);\n    return getAddress(dataSlice(hash, 12));\n}\n/**\n * Returns the address that would result from a `CREATE2` operation with the given `from`, `salt` and `initCodeHash`.\n *\n * To compute the `initCodeHash` from a contract's init code, use the [**keccak256**](../functions/keccak256) function.\n *\n * For a quick overview and example of `CREATE2`, see [Wisps: The Magical World of\n * Create2](https://blog.ricmoo.com/wisps-the-magical-world-of-create2-5c2177027604).\n *\n * @category Address\n * @example\n *\n * ```js\n * // The address of the contract\n * from = '0x8ba1f109551bD432803012645Ac136ddd64DBA72';\n *\n * // The salt\n * salt = id('HelloWorld');\n *\n * // The hash of the initCode\n * initCode = '0x6394198df16000526103ff60206004601c335afa6040516060f3';\n * initCodeHash = keccak256(initCode);\n *\n * getCreate2Address(from, salt, initCodeHash);\n * ```\n *\n * @param {string} _from - The address of the sender.\n * @param {BytesLike} _salt - The salt value.\n * @param {BytesLike} _initCodeHash - The hash of the init code.\n * @returns {string} The computed address.\n * @throws {Error} If the salt is not exactly 32 bytes long.\n * @throws {Error} If the initCodeHash is not exactly 32 bytes long.\n */\nexport function getCreate2Address(_from, _salt, _initCodeHash) {\n    const from = getAddress(_from);\n    const salt = getBytes(_salt, 'salt');\n    const initCodeHash = getBytes(_initCodeHash, 'initCodeHash');\n    assertArgument(salt.length === 32, 'salt must be 32 bytes', 'salt', _salt);\n    assertArgument(initCodeHash.length === 32, 'initCodeHash must be 32 bytes', 'initCodeHash', _initCodeHash);\n    return getAddress(dataSlice(keccak256(concat(['0xff', from, salt, initCodeHash])), 12));\n}\n// Helper function to convert a BigInt nonce to a big-endian byte array\nfunction bigEndianNonce(nonce) {\n    const buffer = new ArrayBuffer(8);\n    const view = new DataView(buffer);\n    view.setBigUint64(0, nonce, false);\n    return new Uint8Array(buffer);\n}\n//# sourceMappingURL=contract-address.js.map","/**\n * A Typed object allows a value to have its type explicitly specified.\n *\n * For example, in Solidity, the value `45` could represent a `uint8` or a `uint256`. The value `0x1234` could represent\n * a `bytes2` or `bytes`.\n *\n * Since JavaScript has no meaningful way to explicitly inform any APIs which what the type is, this allows transparent\n * interoperation with Soldity.\n *\n * @category Application Binary Interface\n */\nimport { assertPrivate, defineProperties } from '../utils/index.js';\nconst _guard = {};\nfunction n(value, width) {\n    let signed = false;\n    if (width < 0) {\n        signed = true;\n        width *= -1;\n    }\n    // @TODO: Check range is valid for value\n    return new Typed(_guard, `${signed ? '' : 'u'}int${width}`, value, { signed, width });\n}\nfunction b(value, size) {\n    // @TODO: Check range is valid for value\n    return new Typed(_guard, `bytes${size ? size : ''}`, value, { size });\n}\nconst _typedSymbol = Symbol.for('_quais_typed');\n/**\n * The **Typed** class to wrap values providing explicit type information.\n *\n * @category Application Binary Interface\n */\nexport class Typed {\n    /**\n     * The type, as a Solidity-compatible type.\n     */\n    type;\n    /**\n     * The actual value.\n     */\n    value;\n    #options;\n    /**\n     * @ignore\n     */\n    _typedSymbol;\n    /**\n     * @ignore\n     */\n    constructor(guard, type, value, options) {\n        if (options == null) {\n            options = null;\n        }\n        assertPrivate(_guard, guard, 'Typed');\n        defineProperties(this, { _typedSymbol, type, value });\n        this.#options = options;\n        // Check the value is valid\n        this.format();\n    }\n    /**\n     * Format the type as a Human-Readable type.\n     *\n     * @returns The human-readable type for the provided type.\n     * @throws If the type is array or dynamic array.\n     */\n    format() {\n        if (this.type === 'array') {\n            throw new Error('');\n        }\n        else if (this.type === 'dynamicArray') {\n            throw new Error('');\n        }\n        else if (this.type === 'tuple') {\n            return `tuple(${this.value.map((v) => v.format()).join(',')})`;\n        }\n        return this.type;\n    }\n    /**\n     * The default value returned by this type.\n     *\n     * @returns The default value for this type.\n     */\n    defaultValue() {\n        return 0;\n    }\n    /**\n     * The minimum value for numeric types.\n     *\n     * @returns The minimum value for the provided numeric type.\n     */\n    minValue() {\n        return 0;\n    }\n    /**\n     * The maximum value for numeric types.\n     *\n     * @returns The maximum value for the provided numeric type.\n     */\n    maxValue() {\n        return 0;\n    }\n    /**\n     * Returns whether this is a {@link TypedBigInt | **TypedBigInt**}. If true, a type guard is provided.\n     *\n     * @returns `true` if this is a big integer.\n     */\n    isBigInt() {\n        return !!this.type.match(/^u?int[0-9]+$/);\n    }\n    /**\n     * Returns whether this is a {@link TypedData | **TypedData**}. If true, a type guard is provided.\n     *\n     * @returns {boolean} `true` if this is a number.\n     */\n    isData() {\n        return this.type.startsWith('bytes');\n    }\n    /**\n     * Return whether this is a {@link TypedString | **TypedString**}. If true, a type guard is provided.\n     *\n     * @returns {boolean} `true` if this is a string.\n     */\n    isString() {\n        return this.type === 'string';\n    }\n    /**\n     * Returns the tuple name.\n     *\n     * @returns {boolean} The tuple name if this is a tuple.\n     * @throws If this is not a tuple.\n     */\n    get tupleName() {\n        if (this.type !== 'tuple') {\n            throw TypeError('not a tuple');\n        }\n        return this.#options;\n    }\n    /**\n     * Returns the length of a typed array.\n     *\n     * @returns {number} The length of the array type or `-1` if it is dynamic.\n     * @throws If this is not an array.\n     */\n    get arrayLength() {\n        if (this.type !== 'array') {\n            throw TypeError('not an array');\n        }\n        if (this.#options === true) {\n            return -1;\n        }\n        if (this.#options === false) {\n            return this.value.length;\n        }\n        return null;\n    }\n    /**\n     * Returns a new **Typed** of `type` with the `value`.\n     *\n     * @param {string} type - The type to use.\n     * @param {any} value - The value to use.\n     */\n    static from(type, value) {\n        return new Typed(_guard, type, value);\n    }\n    /**\n     * Return a new `uint8` type for v.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint8`.\n     * @returns {uint8} A new `uint8` type for `v`.\n     */\n    static uint8(v) {\n        return n(v, 8);\n    }\n    /**\n     * Return a new `uint16` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint16`.\n     * @returns A new `uint16` type for `v`.\n     */\n    static uint16(v) {\n        return n(v, 16);\n    }\n    /**\n     * Return a new `uint24` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint24`.\n     * @returns A new `uint24` type for `v`.\n     */\n    static uint24(v) {\n        return n(v, 24);\n    }\n    /**\n     * Return a new `uint32` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint32`.\n     * @returns A new `uint32` type for `v`.\n     */\n    static uint32(v) {\n        return n(v, 32);\n    }\n    /**\n     * Return a new `uint40` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint40`.\n     * @returns A new `uint40` type for `v`.\n     */\n    static uint40(v) {\n        return n(v, 40);\n    }\n    /**\n     * Return a new `uint48` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint48`.\n     * @returns A new `uint48` type for `v`.\n     */\n    static uint48(v) {\n        return n(v, 48);\n    }\n    /**\n     * Return a new `uint56` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint56`.\n     * @returns A new `uint56` type for `v`.\n     */\n    static uint56(v) {\n        return n(v, 56);\n    }\n    /**\n     * Return a new `uint64` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint64`.\n     * @returns A new `uint64` type for `v`.\n     */\n    static uint64(v) {\n        return n(v, 64);\n    }\n    /**\n     * Return a new `uint72` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint72`.\n     * @returns A new `uint72` type for `v`.\n     */\n    static uint72(v) {\n        return n(v, 72);\n    }\n    /**\n     * Return a new `uint80` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint80`.\n     * @returns A new `uint80` type for `v`.\n     */\n    static uint80(v) {\n        return n(v, 80);\n    }\n    /**\n     * Return a new `uint88` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint88`.\n     * @returns A new `uint88` type for `v`.\n     */\n    static uint88(v) {\n        return n(v, 88);\n    }\n    /**\n     * Return a new `uint96` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint96`.\n     * @returns A new `uint96` type for `v`.\n     */\n    static uint96(v) {\n        return n(v, 96);\n    }\n    /**\n     * Return a new `uint104` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint104`.\n     * @returns A new `uint104` type for `v`.\n     */\n    static uint104(v) {\n        return n(v, 104);\n    }\n    /**\n     * Return a new `uint112` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint112`.\n     * @returns A new `uint112` type for `v`.\n     */\n    static uint112(v) {\n        return n(v, 112);\n    }\n    /**\n     * Return a new `uint120` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint120`.\n     * @returns A new `uint120` type for `v`.\n     */\n    static uint120(v) {\n        return n(v, 120);\n    }\n    /**\n     * Return a new `uint128` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint128`.\n     * @returns A new `uint128` type for `v`.\n     */\n    static uint128(v) {\n        return n(v, 128);\n    }\n    /**\n     * Return a new `uint136` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint136`.\n     * @returns A new `uint136` type for `v`.\n     */\n    static uint136(v) {\n        return n(v, 136);\n    }\n    /**\n     * Return a new `uint144` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint144`.\n     * @returns A new `uint144` type for `v`.\n     */\n    static uint144(v) {\n        return n(v, 144);\n    }\n    /**\n     * Return a new `uint152` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint152`.\n     * @returns A new `uint152` type for `v`.\n     */\n    static uint152(v) {\n        return n(v, 152);\n    }\n    /**\n     * Return a new `uint160` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint160`.\n     * @returns A new `uint160` type for `v`.\n     */\n    static uint160(v) {\n        return n(v, 160);\n    }\n    /**\n     * Return a new `uint168` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint168`.\n     * @returns A new `uint168` type for `v`.\n     */\n    static uint168(v) {\n        return n(v, 168);\n    }\n    /**\n     * Return a new `uint176` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint176`.\n     * @returns A new `uint176` type for `v`.\n     */\n    static uint176(v) {\n        return n(v, 176);\n    }\n    /**\n     * Return a new `uint184` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint184`.\n     * @returns A new `uint184` type for `v`.\n     */\n    static uint184(v) {\n        return n(v, 184);\n    }\n    /**\n     * Return a new `uint192` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint192`.\n     * @returns A new `uint192` type for `v`.\n     */\n    static uint192(v) {\n        return n(v, 192);\n    }\n    /**\n     * Return a new `uint200` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint200`.\n     * @returns A new `uint200` type for `v`.\n     */\n    static uint200(v) {\n        return n(v, 200);\n    }\n    /**\n     * Return a new `uint208` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint208`.\n     * @returns A new `uint208` type for `v`.\n     */\n    static uint208(v) {\n        return n(v, 208);\n    }\n    /**\n     * Return a new `uint216` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint216`.\n     * @returns A new `uint216` type for `v`.\n     */\n    static uint216(v) {\n        return n(v, 216);\n    }\n    /**\n     * Return a new `uint224` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint224`.\n     * @returns A new `uint224` type for `v`.\n     */\n    static uint224(v) {\n        return n(v, 224);\n    }\n    /**\n     * Return a new `uint232` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint232`.\n     * @returns A new `uint232` type for `v`.\n     */\n    static uint232(v) {\n        return n(v, 232);\n    }\n    /**\n     * Return a new `uint240` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint240`.\n     * @returns A new `uint240` type for `v`.\n     */\n    static uint240(v) {\n        return n(v, 240);\n    }\n    /**\n     * Return a new `uint248` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint248`.\n     * @returns A new `uint248` type for `v`.\n     */\n    static uint248(v) {\n        return n(v, 248);\n    }\n    /**\n     * Return a new `uint256` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint256`.\n     * @returns A new `uint256` type for `v`.\n     */\n    static uint256(v) {\n        return n(v, 256);\n    }\n    /**\n     * Return a new `uint256` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to a `uint256`.\n     * @returns A new `uint256` type for `v`.\n     */\n    static uint(v) {\n        return n(v, 256);\n    }\n    /**\n     * Return a new `int8` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int8`.\n     * @returns A new `int8` type for `v`.\n     */\n    static int8(v) {\n        return n(v, -8);\n    }\n    /**\n     * Return a new `int16` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int16`.\n     * @returns A new `int16` type for `v`.\n     */\n    static int16(v) {\n        return n(v, -16);\n    }\n    /**\n     * Return a new `int24` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int24`.\n     * @returns A new `int24` type for `v`.\n     */\n    static int24(v) {\n        return n(v, -24);\n    }\n    /**\n     * Return a new `int32` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int32`.\n     * @returns A new `int32` type for `v`.\n     */\n    static int32(v) {\n        return n(v, -32);\n    }\n    /**\n     * Return a new `int40` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int40`.\n     * @returns A new `int40` type for `v`.\n     */\n    static int40(v) {\n        return n(v, -40);\n    }\n    /**\n     * Return a new `int48` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int48`.\n     * @returns A new `int48` type for `v`.\n     */\n    static int48(v) {\n        return n(v, -48);\n    }\n    /**\n     * Return a new `int56` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int56`.\n     * @returns A new `int56` type for `v`.\n     */\n    static int56(v) {\n        return n(v, -56);\n    }\n    /**\n     * Return a new `int64` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int64`.\n     * @returns A new `int64` type for `v`.\n     */\n    static int64(v) {\n        return n(v, -64);\n    }\n    /**\n     * Return a new `int72` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int72`.\n     * @returns A new `int72` type for `v`.\n     */\n    static int72(v) {\n        return n(v, -72);\n    }\n    /**\n     * Return a new `int80` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int80`.\n     * @returns A new `int80` type for `v`.\n     */\n    static int80(v) {\n        return n(v, -80);\n    }\n    /**\n     * Return a new `int88` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int88`.\n     * @returns A new `int88` type for `v`.\n     */\n    static int88(v) {\n        return n(v, -88);\n    }\n    /**\n     * Return a new `int96` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int96`.\n     * @returns A new `int96` type for `v`.\n     */\n    static int96(v) {\n        return n(v, -96);\n    }\n    /**\n     * Return a new `int104` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int104`.\n     * @returns A new `int104` type for `v`.\n     */\n    static int104(v) {\n        return n(v, -104);\n    }\n    /**\n     * Return a new `int112` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int112`.\n     * @returns A new `int112` type for `v`.\n     */\n    static int112(v) {\n        return n(v, -112);\n    }\n    /**\n     * Return a new `int120` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int120`.\n     * @returns A new `int120` type for `v`.\n     */\n    static int120(v) {\n        return n(v, -120);\n    }\n    /**\n     * Return a new `int128` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int128`.\n     * @returns A new `int128` type for `v`.\n     */\n    static int128(v) {\n        return n(v, -128);\n    }\n    /**\n     * Return a new `int136` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int136`.\n     * @returns A new `int136` type for `v`.\n     */\n    static int136(v) {\n        return n(v, -136);\n    }\n    /**\n     * Return a new `int144` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int144`.\n     * @returns A new `int144` type for `v`.\n     */\n    static int144(v) {\n        return n(v, -144);\n    }\n    /**\n     * Return a new `int152` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int152`.\n     * @returns A new `int152` type for `v`.\n     */\n    static int152(v) {\n        return n(v, -152);\n    }\n    /**\n     * Return a new `int160` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int160`.\n     * @returns A new `int160` type for `v`.\n     */\n    static int160(v) {\n        return n(v, -160);\n    }\n    /**\n     * Return a new `int168` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int168`.\n     * @returns A new `int168` type for `v`.\n     */\n    static int168(v) {\n        return n(v, -168);\n    }\n    /**\n     * Return a new `int176` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int176`.\n     * @returns A new `int176` type for `v`.\n     */\n    static int176(v) {\n        return n(v, -176);\n    }\n    /**\n     * Return a new `int184` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int184`.\n     * @returns A new `int184` type for `v`.\n     */\n    static int184(v) {\n        return n(v, -184);\n    }\n    /**\n     * Return a new `int192` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int192`.\n     * @returns A new `int192` type for `v`.\n     */\n    static int192(v) {\n        return n(v, -192);\n    }\n    /**\n     * Return a new `int200` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int200`.\n     * @returns A new `int200` type for `v`.\n     */\n    static int200(v) {\n        return n(v, -200);\n    }\n    /**\n     * Return a new `int208` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int208`.\n     * @returns A new `int208` type for `v`.\n     */\n    static int208(v) {\n        return n(v, -208);\n    }\n    /**\n     * Return a new `int216` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int216`.\n     * @returns A new `int216` type for `v`.\n     */\n    static int216(v) {\n        return n(v, -216);\n    }\n    /**\n     * Return a new `int224` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int224`.\n     * @returns A new `int224` type for `v`.\n     */\n    static int224(v) {\n        return n(v, -224);\n    }\n    /**\n     * Return a new `int232` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int232`.\n     * @returns A new `int232` type for `v`.\n     */\n    static int232(v) {\n        return n(v, -232);\n    }\n    /**\n     * Return a new `int240` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int240`.\n     * @returns A new `int240` type for `v`.\n     */\n    static int240(v) {\n        return n(v, -240);\n    }\n    /**\n     * Return a new `int248` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int248`.\n     * @returns A new `int248` type for `v`.\n     */\n    static int248(v) {\n        return n(v, -248);\n    }\n    /**\n     * Return a new `int256` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int256`.\n     * @returns A new `int256` type for `v`.\n     */\n    static int256(v) {\n        return n(v, -256);\n    }\n    /**\n     * Return a new `int256` type for `v`.\n     *\n     * @param {BigNumberish} v - The value to convert to an `int256`.\n     * @returns A new `int256` type for `v`.\n     */\n    static int(v) {\n        return n(v, -256);\n    }\n    /**\n     * Return a new `bytes1` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes1`.\n     * @returns A new `bytes1` type for `v`.\n     */\n    static bytes1(v) {\n        return b(v, 1);\n    }\n    /**\n     * Return a new `bytes2` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes2`.\n     * @returns A new `bytes2` type for `v`.\n     */\n    static bytes2(v) {\n        return b(v, 2);\n    }\n    /**\n     * Return a new `bytes3` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes3`.\n     * @returns A new `bytes3` type for `v`.\n     */\n    static bytes3(v) {\n        return b(v, 3);\n    }\n    /**\n     * Return a new `bytes4` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes4`.\n     * @returns A new `bytes4` type for `v`.\n     */\n    static bytes4(v) {\n        return b(v, 4);\n    }\n    /**\n     * Return a new `bytes5` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes5`.\n     * @returns A new `bytes5` type for `v`.\n     */\n    static bytes5(v) {\n        return b(v, 5);\n    }\n    /**\n     * Return a new `bytes6` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes6`.\n     * @returns A new `bytes6` type for `v`.\n     */\n    static bytes6(v) {\n        return b(v, 6);\n    }\n    /**\n     * Return a new `bytes7` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes7`.\n     * @returns A new `bytes7` type for `v`.\n     */\n    static bytes7(v) {\n        return b(v, 7);\n    }\n    /**\n     * Return a new `bytes8` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes8`.\n     * @returns A new `bytes8` type for `v`.\n     */\n    static bytes8(v) {\n        return b(v, 8);\n    }\n    /**\n     * Return a new `bytes9` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes9`.\n     * @returns A new `bytes9` type for `v`.\n     */\n    static bytes9(v) {\n        return b(v, 9);\n    }\n    /**\n     * Return a new `bytes10` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes10`.\n     * @returns A new `bytes10` type for `v`.\n     */\n    static bytes10(v) {\n        return b(v, 10);\n    }\n    /**\n     * Return a new `bytes11` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes11`.\n     * @returns A new `bytes11` type for `v`.\n     */\n    static bytes11(v) {\n        return b(v, 11);\n    }\n    /**\n     * Return a new `bytes12` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes12`.\n     * @returns A new `bytes12` type for `v`.\n     */\n    static bytes12(v) {\n        return b(v, 12);\n    }\n    /**\n     * Return a new `bytes13` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes13`.\n     * @returns A new `bytes13` type for `v`.\n     */\n    static bytes13(v) {\n        return b(v, 13);\n    }\n    /**\n     * Return a new `bytes14` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes14`.\n     * @returns A new `bytes14` type for `v`.\n     */\n    static bytes14(v) {\n        return b(v, 14);\n    }\n    /**\n     * Return a new `bytes15` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes15`.\n     * @returns A new `bytes15` type for `v`.\n     */\n    static bytes15(v) {\n        return b(v, 15);\n    }\n    /**\n     * Return a new `bytes16` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes16`.\n     * @returns A new `bytes16` type for `v`.\n     */\n    static bytes16(v) {\n        return b(v, 16);\n    }\n    /**\n     * Return a new `bytes17` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes17`.\n     * @returns A new `bytes17` type for `v`.\n     */\n    static bytes17(v) {\n        return b(v, 17);\n    }\n    /**\n     * Return a new `bytes18` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes18`.\n     * @returns A new `bytes18` type for `v`.\n     */\n    static bytes18(v) {\n        return b(v, 18);\n    }\n    /**\n     * Return a new `bytes19` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes19`.\n     * @returns A new `bytes19` type for `v`.\n     */\n    static bytes19(v) {\n        return b(v, 19);\n    }\n    /**\n     * Return a new `bytes20` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes20`.\n     * @returns A new `bytes20` type for `v`.\n     */\n    static bytes20(v) {\n        return b(v, 20);\n    }\n    /**\n     * Return a new `bytes21` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes21`.\n     * @returns A new `bytes21` type for `v`.\n     */\n    static bytes21(v) {\n        return b(v, 21);\n    }\n    /**\n     * Return a new `bytes22` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes22`.\n     * @returns A new `bytes22` type for `v`.\n     */\n    static bytes22(v) {\n        return b(v, 22);\n    }\n    /**\n     * Return a new `bytes23` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes23`.\n     * @returns A new `bytes23` type for `v`.\n     */\n    static bytes23(v) {\n        return b(v, 23);\n    }\n    /**\n     * Return a new `bytes24` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes24`.\n     * @returns A new `bytes24` type for `v`.\n     */\n    static bytes24(v) {\n        return b(v, 24);\n    }\n    /**\n     * Return a new `bytes25` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes25`.\n     * @returns A new `bytes25` type for `v`.\n     */\n    static bytes25(v) {\n        return b(v, 25);\n    }\n    /**\n     * Return a new `bytes26` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes26`.\n     * @returns A new `bytes26` type for `v`.\n     */\n    static bytes26(v) {\n        return b(v, 26);\n    }\n    /**\n     * Return a new `bytes27` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes27`.\n     * @returns A new `bytes27` type for `v`.\n     */\n    static bytes27(v) {\n        return b(v, 27);\n    }\n    /**\n     * Return a new `bytes28` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes28`.\n     * @returns A new `bytes28` type for `v`.\n     */\n    static bytes28(v) {\n        return b(v, 28);\n    }\n    /**\n     * Return a new `bytes29` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes29`.\n     * @returns A new `bytes29` type for `v`.\n     */\n    static bytes29(v) {\n        return b(v, 29);\n    }\n    /**\n     * Return a new `bytes30` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes30`.\n     * @returns A new `bytes30` type for `v`.\n     */\n    static bytes30(v) {\n        return b(v, 30);\n    }\n    /**\n     * Return a new `bytes31` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes31`.\n     * @returns A new `bytes31` type for `v`.\n     */\n    static bytes31(v) {\n        return b(v, 31);\n    }\n    /**\n     * Return a new `bytes32` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes32`.\n     * @returns A new `bytes32` type for `v`.\n     */\n    static bytes32(v) {\n        return b(v, 32);\n    }\n    /**\n     * Return a new `address` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to an `address`.\n     * @returns A new `address` type for `v`.\n     */\n    static address(v) {\n        return new Typed(_guard, 'address', v);\n    }\n    /**\n     * Return a new `bool` type for `v`.\n     *\n     * @param {any} v - The value to convert to a `bool`.\n     * @returns A new `bool` type for `v`.\n     */\n    static bool(v) {\n        return new Typed(_guard, 'bool', !!v);\n    }\n    /**\n     * Return a new `bytes` type for `v`.\n     *\n     * @param {BytesLike} v - The value to convert to a `bytes`.\n     * @returns A new `bytes` type for `v`.\n     */\n    static bytes(v) {\n        return new Typed(_guard, 'bytes', v);\n    }\n    /**\n     * Return a new `string` type for `v`.\n     *\n     * @param {string} v - The value to convert to a `string`.\n     * @returns A new `string` type for `v`.\n     */\n    static string(v) {\n        return new Typed(_guard, 'string', v);\n    }\n    /**\n     * Return a new `array` type for v, allowing dynamic length.\n     *\n     * @param {(any | Typed)[]} v - The value to convert to an `array`.\n     * @param {null | boolean} dynamic - Whether the array is dynamic.\n     * @returns A new `array` type for `v`.\n     */\n    static array(v, dynamic) {\n        throw new Error('not implemented yet');\n        return new Typed(_guard, 'array', v, dynamic);\n    }\n    /**\n     * Return a new `tuple` type for v, with the optional name.\n     *\n     * @param {(any | Typed)[]} v - The value to convert to a `tuple`.\n     * @param {string} name - The name of the tuple.\n     * @returns A new `tuple` type for `v`.\n     */\n    static tuple(v, name) {\n        throw new Error('not implemented yet');\n        return new Typed(_guard, 'tuple', v, name);\n    }\n    /**\n     * Return a new `overrides` type with the provided properties.\n     *\n     * @param {Record<string, any>} v - A record containing the properties to be included in the `overrides` type.\n     * @returns A new `overrides` type with the given properties.\n     */\n    static overrides(v) {\n        return new Typed(_guard, 'overrides', Object.assign({}, v));\n    }\n    /**\n     * Returns true only if `value` is a {@link Typed | **Typed**} instance.\n     *\n     * @param {any} value - The value to check.\n     * @returns {boolean} True if `value` is a {@link Typed | **Typed**} instance.\n     */\n    static isTyped(value) {\n        return value && typeof value === 'object' && '_typedSymbol' in value && value._typedSymbol === _typedSymbol;\n    }\n    /**\n     * If the value is a {@link Typed | **Typed**} instance, validates the underlying value and returns it, otherwise\n     * returns value directly.\n     *\n     * This is useful for functions that with to accept either a {@link Typed | **Typed**} object or values.\n     *\n     * @param {Typed | T} value - The value to dereference.\n     * @param {string} type - The dereferenced value.\n     */\n    static dereference(value, type) {\n        if (Typed.isTyped(value)) {\n            if (value.type !== type) {\n                throw new Error(`invalid type: expected ${type}, got ${value.type}`);\n            }\n            return value.value;\n        }\n        return value;\n    }\n}\n//# sourceMappingURL=typed.js.map","import { getAddress } from \"../../address/index.js\";\nimport { toBeHex } from \"../../utils/maths.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n/**\n *  @ignore\n */\nexport class AddressCoder extends Coder {\n    constructor(localName) {\n        super(\"address\", \"address\", localName, false);\n    }\n    defaultValue() {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n    encode(writer, _value) {\n        let value = Typed.dereference(_value, \"string\");\n        try {\n            value = getAddress(value);\n        }\n        catch (error) {\n            return this._throwError(error.message, _value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        return getAddress(toBeHex(reader.readValue(), 20));\n    }\n}\n//# sourceMappingURL=address.js.map","import { Coder } from \"./abstract-coder.js\";\n/**\n *  Clones the functionality of an existing Coder, but without a localName\n *\n *  @ignore\n */\nexport class AnonymousCoder extends Coder {\n    coder;\n    constructor(coder) {\n        super(coder.name, coder.type, \"_\", coder.dynamic);\n        this.coder = coder;\n    }\n    defaultValue() {\n        return this.coder.defaultValue();\n    }\n    encode(writer, value) {\n        return this.coder.encode(writer, value);\n    }\n    decode(reader) {\n        return this.coder.decode(reader);\n    }\n}\n//# sourceMappingURL=anonymous.js.map","import { defineProperties, isError, assert, assertArgument, assertArgumentCount } from \"../../utils/index.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder, Result, WordSize, Writer } from \"./abstract-coder.js\";\nimport { AnonymousCoder } from \"./anonymous.js\";\n/**\n *  @ignore\n */\nexport function pack(writer, coders, values) {\n    let arrayValues = [];\n    if (Array.isArray(values)) {\n        arrayValues = values;\n    }\n    else if (values && typeof (values) === \"object\") {\n        let unique = {};\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            assert(name, \"cannot encode object for signature with missing names\", \"INVALID_ARGUMENT\", { argument: \"values\", info: { coder }, value: values });\n            assert(!unique[name], \"cannot encode object for signature with duplicate names\", \"INVALID_ARGUMENT\", { argument: \"values\", info: { coder }, value: values });\n            unique[name] = true;\n            return values[name];\n        });\n    }\n    else {\n        assertArgument(false, \"invalid tuple value\", \"tuple\", values);\n    }\n    assertArgument(coders.length === arrayValues.length, \"types/value length mismatch\", \"tuple\", values);\n    let staticWriter = new Writer();\n    let dynamicWriter = new Writer();\n    let updateFuncs = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n        }\n        else {\n            coder.encode(staticWriter, value);\n        }\n    });\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\n/**\n *  @ignore\n */\nexport function unpack(reader, coders) {\n    let values = [];\n    let keys = [];\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n    coders.forEach((coder) => {\n        let value = null;\n        if (coder.dynamic) {\n            let offset = reader.readIndex();\n            let offsetReader = baseReader.subReader(offset);\n            try {\n                value = coder.decode(offsetReader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (isError(error, \"BUFFER_OVERRUN\")) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        else {\n            try {\n                value = coder.decode(reader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (isError(error, \"BUFFER_OVERRUN\")) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        if (value == undefined) {\n            throw new Error(\"investigate\");\n        }\n        values.push(value);\n        keys.push(coder.localName || null);\n    });\n    return Result.fromItems(values, keys);\n}\n/**\n *  @ignore\n */\nexport class ArrayCoder extends Coder {\n    coder;\n    length;\n    constructor(coder, length, localName) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        defineProperties(this, { coder, length });\n    }\n    defaultValue() {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n        const result = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n    encode(writer, _value) {\n        const value = Typed.dereference(_value, \"array\");\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n        let count = this.length;\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n        assertArgumentCount(value.length, count, \"coder array\" + (this.localName ? (\" \" + this.localName) : \"\"));\n        let coders = [];\n        for (let i = 0; i < value.length; i++) {\n            coders.push(this.coder);\n        }\n        return pack(writer, coders, value);\n    }\n    decode(reader) {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readIndex();\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            assert(count * WordSize <= reader.dataLength, \"insufficient data length\", \"BUFFER_OVERRUN\", { buffer: reader.bytes, offset: count * WordSize, length: reader.dataLength });\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) {\n            coders.push(new AnonymousCoder(this.coder));\n        }\n        return unpack(reader, coders);\n    }\n}\n//# sourceMappingURL=array.js.map","import { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n/**\n *  @ignore\n */\nexport class BooleanCoder extends Coder {\n    constructor(localName) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n    defaultValue() {\n        return false;\n    }\n    encode(writer, _value) {\n        const value = Typed.dereference(_value, \"bool\");\n        return writer.writeValue(value ? 1 : 0);\n    }\n    decode(reader) {\n        return !!reader.readValue();\n    }\n}\n//# sourceMappingURL=boolean.js.map","import { getBytesCopy, hexlify } from \"../../utils/index.js\";\nimport { Coder } from \"./abstract-coder.js\";\n/**\n *  @ignore\n */\nexport class DynamicBytesCoder extends Coder {\n    constructor(type, localName) {\n        super(type, type, localName, true);\n    }\n    defaultValue() {\n        return \"0x\";\n    }\n    encode(writer, value) {\n        value = getBytesCopy(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n    decode(reader) {\n        return reader.readBytes(reader.readIndex(), true);\n    }\n}\n/**\n *  @ignore\n */\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"bytes\", localName);\n    }\n    decode(reader) {\n        return hexlify(super.decode(reader));\n    }\n}\n//# sourceMappingURL=bytes.js.map","import { defineProperties, getBytesCopy, hexlify } from \"../../utils/index.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n/**\n *  @ignore\n */\nexport class FixedBytesCoder extends Coder {\n    size;\n    constructor(size, localName) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        defineProperties(this, { size }, { size: \"number\" });\n    }\n    defaultValue() {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n    encode(writer, _value) {\n        let data = getBytesCopy(Typed.dereference(_value, this.type));\n        if (data.length !== this.size) {\n            this._throwError(\"incorrect data length\", _value);\n        }\n        return writer.writeBytes(data);\n    }\n    decode(reader) {\n        return hexlify(reader.readBytes(this.size));\n    }\n}\n//# sourceMappingURL=fixed-bytes.js.map","import { Coder } from \"./abstract-coder.js\";\nconst Empty = new Uint8Array([]);\n/**\n *  @ignore\n */\nexport class NullCoder extends Coder {\n    constructor(localName) {\n        super(\"null\", \"\", localName, false);\n    }\n    defaultValue() {\n        return null;\n    }\n    encode(writer, value) {\n        if (value != null) {\n            this._throwError(\"not null\", value);\n        }\n        return writer.writeBytes(Empty);\n    }\n    decode(reader) {\n        reader.readBytes(0);\n        return null;\n    }\n}\n//# sourceMappingURL=null.js.map","import { defineProperties, fromTwos, getBigInt, mask, toTwos } from \"../../utils/index.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder, WordSize } from \"./abstract-coder.js\";\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n/**\n *  @ignore\n */\nexport class NumberCoder extends Coder {\n    size;\n    signed;\n    constructor(size, signed, localName) {\n        const name = ((signed ? \"int\" : \"uint\") + (size * 8));\n        super(name, name, localName, false);\n        defineProperties(this, { size, signed }, { size: \"number\", signed: \"boolean\" });\n    }\n    defaultValue() {\n        return 0;\n    }\n    encode(writer, _value) {\n        let value = getBigInt(Typed.dereference(_value, this.type));\n        // Check bounds are safe for encoding\n        let maxUintValue = mask(BN_MAX_UINT256, WordSize * 8);\n        if (this.signed) {\n            let bounds = mask(maxUintValue, (this.size * 8) - 1);\n            if (value > bounds || value < -(bounds + BN_1)) {\n                this._throwError(\"value out-of-bounds\", _value);\n            }\n            value = toTwos(value, 8 * WordSize);\n        }\n        else if (value < BN_0 || value > mask(maxUintValue, this.size * 8)) {\n            this._throwError(\"value out-of-bounds\", _value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        let value = mask(reader.readValue(), this.size * 8);\n        if (this.signed) {\n            value = fromTwos(value, this.size * 8);\n        }\n        return value;\n    }\n}\n//# sourceMappingURL=number.js.map","import { toUtf8Bytes, toUtf8String } from \"../../encoding/index.js\";\nimport { Typed } from \"../typed.js\";\nimport { DynamicBytesCoder } from \"./bytes.js\";\n/**\n *  @ignore\n */\nexport class StringCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"string\", localName);\n    }\n    defaultValue() {\n        return \"\";\n    }\n    encode(writer, _value) {\n        return super.encode(writer, toUtf8Bytes(Typed.dereference(_value, \"string\")));\n    }\n    decode(reader) {\n        return toUtf8String(super.decode(reader));\n    }\n}\n//# sourceMappingURL=string.js.map","import { defineProperties } from \"../../utils/properties.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\nimport { pack, unpack } from \"./array.js\";\n/**\n *  @ignore\n */\nexport class TupleCoder extends Coder {\n    coders;\n    constructor(coders, localName) {\n        let dynamic = false;\n        const types = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n        super(\"tuple\", type, localName, dynamic);\n        defineProperties(this, { coders: Object.freeze(coders.slice()) });\n    }\n    defaultValue() {\n        const values = [];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) {\n                    accum[name] = 0;\n                }\n                accum[name]++;\n            }\n            return accum;\n        }, {});\n        // Add named values\n        this.coders.forEach((coder, index) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) {\n                return;\n            }\n            if (name === \"length\") {\n                name = \"_length\";\n            }\n            if (values[name] != null) {\n                return;\n            }\n            values[name] = values[index];\n        });\n        return Object.freeze(values);\n    }\n    encode(writer, _value) {\n        const value = Typed.dereference(_value, \"tuple\");\n        return pack(writer, this.coders, value);\n    }\n    decode(reader) {\n        return unpack(reader, this.coders);\n    }\n}\n//# sourceMappingURL=tuple.js.map","import { keccak256 } from '../crypto/index.js';\nimport { toUtf8Bytes } from '../encoding/index.js';\n/**\n * A simple hashing function which operates on UTF-8 strings to compute an 32-byte identifier.\n *\n * This simply computes the {@link toUtf8Bytes | **UTF-8 bytes**} and computes the {@link keccak256 | **keccak256**}.\n *\n * @category Hash\n * @example\n *\n * ```ts\n * id('hello world');\n * ```\n *\n * @param {string} value - The string to hash.\n * @returns {string} The 32-byte identifier.\n */\nexport function id(value) {\n    return keccak256(toUtf8Bytes(value));\n}\n//# sourceMappingURL=id.js.map","import { keccak256 } from '../crypto/index.js';\nimport { MessagePrefix } from '../constants/index.js';\nimport { recoverAddress } from '../address/index.js';\nimport { concat } from '../utils/index.js';\nimport { toUtf8Bytes } from '../encoding/index.js';\nimport { EthMessagePrefix } from '../constants/strings.js';\n/**\n * Computes the Quai Network equivalent of the [EIP-191](https://eips.ethereum.org/EIPS/eip-191) personal-sign message\n * digest to sign.\n *\n * This prefixes the message with {@link MessagePrefix | **MessagePrefix**} and the decimal length of `message` and\n * computes the {@link keccak256 | **keccak256**} digest.\n *\n * If `message` is a string, it is converted to its UTF-8 bytes first. To compute the digest of a\n * [**DataHexString**](../types-aliases/DataHex), it must be converted to [**bytes**](../functions/getBytes).\n *\n * @category Hash\n * @example\n *\n * ```ts\n * hashMessage('Hello World');\n *\n * // Hashes the SIX (6) string characters, i.e.\n * // [ \"0\", \"x\", \"4\", \"2\", \"4\", \"3\" ]\n * hashMessage('0x4243');\n *\n * // Hashes the TWO (2) bytes [ 0x42, 0x43 ]...\n * hashMessage(getBytes('0x4243'));\n *\n * // ...which is equal to using data\n * hashMessage(new Uint8Array([0x42, 0x43]));\n * ```\n *\n * @param {Uint8Array | string} message - The message to hash.\n * @returns {string} The message digest.\n */\nexport function hashMessage(message) {\n    if (typeof message === 'string') {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([toUtf8Bytes(MessagePrefix), toUtf8Bytes(String(message.length)), message]));\n}\n/**\n * Return the address of the private key that produced the signature `sig` during signing for `message`.\n *\n * @category Hash\n * @param {Uint8Array | string} message - The message that was signed.\n * @param {SignatureLike} sig - The signature to verify.\n * @returns {string} The address of the signer.\n */\nexport function verifyMessage(message, sig) {\n    const digest = hashMessage(message);\n    return recoverAddress(digest, sig);\n}\n/**\n * Computes the [EIP-191](https://eips.ethereum.org/EIPS/eip-191) personal-sign message digest to sign.\n *\n * This prefixes the message with {@link EthMessagePrefix | **EthMessagePrefix**} and the decimal length of `message` and\n * computes the {@link keccak256 | **keccak256**} digest.\n *\n * If `message` is a string, it is converted to its UTF-8 bytes first. To compute the digest of a\n * [**DataHexString**](../types-aliases/DataHex), it must be converted to [**bytes**](../functions/getBytes).\n *\n * This is the same as `hashMessage` except it uses `EthMessagePrefix` instead of `MessagePrefix` and is available for\n * broader compatibility with EVM signing practices.\n *\n * @category Hash\n * @param message\n * @returns\n */\nexport function ethHashMessage(message) {\n    if (typeof message === 'string') {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([toUtf8Bytes(EthMessagePrefix), toUtf8Bytes(String(message.length)), message]));\n}\n/**\n * Return the address of the private key that produced the signature `sig` during signing for `message`.\n *\n * This is the same as `verifyMessage` except it uses `EthMessagePrefix` instead of `MessagePrefix` and is available for\n * broader compatibility with EVM signing practices.\n *\n * @category Hash\n * @param message - The message that was signed.\n * @param sig - The signature to verify.\n * @returns {string} The address of the signer.\n */\nexport function ethVerifyMessage(message, sig) {\n    const digest = ethHashMessage(message);\n    return recoverAddress(digest, sig);\n}\n//# sourceMappingURL=message.js.map","import { getAddress } from '../address/index.js';\nimport { keccak256 as _keccak256, sha256 as _sha256 } from '../crypto/index.js';\nimport { concat, dataLength, getBytes, hexlify, toBeArray, toTwos, zeroPadBytes, zeroPadValue, assertArgument, } from '../utils/index.js';\nimport { toUtf8Bytes } from '../encoding/index.js';\nconst regexBytes = new RegExp('^bytes([0-9]+)$');\nconst regexNumber = new RegExp('^(u?int)([0-9]*)$');\nconst regexArray = new RegExp('^(.*)\\\\[([0-9]*)\\\\]$');\nfunction _pack(type, value, isArray) {\n    switch (type) {\n        case 'address':\n            if (isArray) {\n                return getBytes(zeroPadValue(value, 32));\n            }\n            return getBytes(getAddress(value));\n        case 'string':\n            return toUtf8Bytes(value);\n        case 'bytes':\n            return getBytes(value);\n        case 'bool':\n            value = value ? '0x01' : '0x00';\n            if (isArray) {\n                return getBytes(zeroPadValue(value, 32));\n            }\n            return getBytes(value);\n    }\n    let match = type.match(regexNumber);\n    if (match) {\n        const signed = match[1] === 'int';\n        let size = parseInt(match[2] || '256');\n        assertArgument((!match[2] || match[2] === String(size)) && size % 8 === 0 && size !== 0 && size <= 256, 'invalid number type', 'type', type);\n        if (isArray) {\n            size = 256;\n        }\n        if (signed) {\n            value = toTwos(value, size);\n        }\n        return getBytes(zeroPadValue(toBeArray(value), size / 8));\n    }\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n        assertArgument(String(size) === match[1] && size !== 0 && size <= 32, 'invalid bytes type', 'type', type);\n        assertArgument(dataLength(value) === size, `invalid value for ${type}`, 'value', value);\n        if (isArray) {\n            return getBytes(zeroPadBytes(value, 32));\n        }\n        return value;\n    }\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        assertArgument(count === value.length, `invalid array length for ${type}`, 'value', value);\n        const result = [];\n        value.forEach(function (value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return getBytes(concat(result));\n    }\n    assertArgument(false, 'invalid type', 'type', type);\n}\n// @TODO: Array Enum\n/**\n * Computes the [Non-Standard Packed\n * Mode](https://docs.soliditylang.org/en/v0.8.14/abi-spec.html#non-standard-packed-mode) representation of `values`\n * respectively to their `types`.\n *\n * @category Hash\n * @example\n *\n * ```ts\n * addr = '0x8ba1f109551bd432803012645ac136ddd64dba72';\n * solidityPacked(['address', 'uint'], [addr, 45]);\n * ```\n *\n * @param {string[]} types - The types of the values.\n * @param {ReadonlyArray<any>} values - The values to pack.\n * @returns {string} The packed values.\n */\nexport function solidityPacked(types, values) {\n    assertArgument(types.length === values.length, 'wrong number of values; expected ${ types.length }', 'values', values);\n    const tight = [];\n    types.forEach(function (type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\n/**\n * Computes the [Non-Standard Packed\n * Mode](https://docs.soliditylang.org/en/v0.8.14/abi-spec.html#non-standard-packed-mode)\n * [**keccak256**](../functions/keccak256) hash of `values` respectively to their `types`.\n *\n * @category Hash\n * @example\n *\n * ```ts\n * addr = '0x8ba1f109551bd432803012645ac136ddd64dba72';\n * solidityPackedKeccak256(['address', 'uint'], [addr, 45]);\n * ```\n *\n * @param {ReadonlyArray<string>} types - The types of the values.\n * @param {ReadonlyArray<any>} values - The values to hash.\n * @returns {string} The hash of the packed values.\n */\nexport function solidityPackedKeccak256(types, values) {\n    return _keccak256(solidityPacked(types, values));\n}\n/**\n * Computes the [Non-Standard Packed\n * Mode](https://docs.soliditylang.org/en/v0.8.14/abi-spec.html#non-standard-packed-mode) [sha256](../functions/sha256)\n * hash of `values` respectively to their `types`.\n *\n * @category Hash\n * @example\n *\n * ```ts\n * addr = '0x8ba1f109551bd432803012645ac136ddd64dba72';\n * solidityPackedSha256(['address', 'uint'], [addr, 45]);\n * ```\n *\n * @param {ReadonlyArray<string>} types - The types of the values.\n * @param {ReadonlyArray<any>} values - The values to hash.\n * @returns {string} The hash of the packed values.\n */\nexport function solidityPackedSha256(types, values) {\n    return _sha256(solidityPacked(types, values));\n}\n//# sourceMappingURL=solidity.js.map","//import { TypedDataDomain, TypedDataField } from \"@quaisproject/providerabstract-signer\";\nimport { getAddress } from '../address/index.js';\nimport { keccak256 } from '../crypto/index.js';\nimport { recoverAddress } from '../address/index.js';\nimport { concat, defineProperties, getBigInt, getBytes, hexlify, mask, toBeHex, toQuantity, toTwos, zeroPadValue, assertArgument, } from '../utils/index.js';\nimport { id } from './id.js';\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst BN__1 = BigInt(-1);\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nfunction hexPadRight(value) {\n    const bytes = getBytes(value);\n    const padOffset = bytes.length % 32;\n    if (padOffset) {\n        return concat([bytes, padding.slice(padOffset)]);\n    }\n    return hexlify(bytes);\n}\nconst hexTrue = toBeHex(BN_1, 32);\nconst hexFalse = toBeHex(BN_0, 32);\nconst domainFieldTypes = {\n    name: 'string',\n    version: 'string',\n    chainId: 'uint256',\n    verifyingContract: 'address',\n    salt: 'bytes32',\n};\nconst domainFieldNames = ['name', 'version', 'chainId', 'verifyingContract', 'salt'];\nfunction checkString(key) {\n    return function (value) {\n        assertArgument(typeof value === 'string', `invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n        return value;\n    };\n}\nconst domainChecks = {\n    name: checkString('name'),\n    version: checkString('version'),\n    chainId: function (_value) {\n        const value = getBigInt(_value, 'domain.chainId');\n        assertArgument(value >= 0, 'invalid chain ID', 'domain.chainId', _value);\n        if (Number.isSafeInteger(value)) {\n            return Number(value);\n        }\n        return toQuantity(value);\n    },\n    verifyingContract: function (value) {\n        try {\n            return getAddress(value);\n            // eslint-disable-next-line no-empty\n        }\n        catch (error) { }\n        assertArgument(false, `invalid domain value \"verifyingContract\"`, 'domain.verifyingContract', value);\n    },\n    salt: function (value) {\n        const bytes = getBytes(value, 'domain.salt');\n        assertArgument(bytes.length === 32, `invalid domain value \"salt\"`, 'domain.salt', value);\n        return hexlify(bytes);\n    },\n};\nfunction getBaseEncoder(type) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = match[1] === '';\n            const width = parseInt(match[2] || '256');\n            assertArgument(width % 8 === 0 && width !== 0 && width <= 256 && (match[2] == null || match[2] === String(width)), 'invalid numeric width', 'type', type);\n            const boundsUpper = mask(BN_MAX_UINT256, signed ? width - 1 : width);\n            const boundsLower = signed ? (boundsUpper + BN_1) * BN__1 : BN_0;\n            return function (_value) {\n                const value = getBigInt(_value, 'value');\n                assertArgument(value >= boundsLower && value <= boundsUpper, `value out-of-bounds for ${type}`, 'value', value);\n                return toBeHex(signed ? toTwos(value, 256) : value, 32);\n            };\n        }\n    }\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            assertArgument(width !== 0 && width <= 32 && match[1] === String(width), 'invalid bytes width', 'type', type);\n            return function (value) {\n                const bytes = getBytes(value);\n                assertArgument(bytes.length === width, `invalid length for ${type}`, 'value', value);\n                return hexPadRight(value);\n            };\n        }\n    }\n    switch (type) {\n        case 'address':\n            return function (value) {\n                return zeroPadValue(getAddress(value), 32);\n            };\n        case 'bool':\n            return function (value) {\n                return !value ? hexFalse : hexTrue;\n            };\n        case 'bytes':\n            return function (value) {\n                return keccak256(value);\n            };\n        case 'string':\n            return function (value) {\n                return id(value);\n            };\n    }\n    return null;\n}\nfunction encodeType(name, fields) {\n    return `${name}(${fields.map(({ name, type }) => type + ' ' + name).join(',')})`;\n}\n/**\n * A **TypedDataEncode** prepares and encodes [EIP-712](https://eips.ethereum.org/EIPS/eip-712) payloads for signed\n * typed data.\n *\n * This is useful for those that wish to compute various components of a typed data hash, primary types, or\n * sub-components, but generally the higher level [`Signer.signTypedData`](../classes/Signer#signTypedData) is more\n * useful.\n *\n * @category Hash\n */\nexport class TypedDataEncoder {\n    /**\n     * The primary type for the structured {@link types | **types**}.\n     *\n     * This is derived automatically from the {@link types | **types**}, since no recursion is possible, once the DAG for\n     * the types is consturcted internally, the primary type must be the only remaining type with no parent nodes.\n     */\n    primaryType;\n    #types;\n    /**\n     * The types.\n     */\n    get types() {\n        return JSON.parse(this.#types);\n    }\n    #fullTypes;\n    #encoderCache;\n    /**\n     * Create a new **TypedDataEncoder** for `types`.\n     *\n     * This performs all necessary checking that types are valid and do not violate the\n     * [EIP-712](https://eips.ethereum.org/EIPS/eip-712) structural constraints as well as computes the\n     * {@link primaryType | **primaryType**}.\n     */\n    constructor(types) {\n        this.#types = JSON.stringify(types);\n        this.#fullTypes = new Map();\n        this.#encoderCache = new Map();\n        // Link struct types to their direct child structs\n        const links = new Map();\n        // Link structs to structs which contain them as a child\n        const parents = new Map();\n        // Link all subtypes within a given struct\n        const subtypes = new Map();\n        Object.keys(types).forEach((type) => {\n            links.set(type, new Set());\n            parents.set(type, []);\n            subtypes.set(type, new Set());\n        });\n        for (const name in types) {\n            const uniqueNames = new Set();\n            for (const field of types[name]) {\n                // Check each field has a unique name\n                assertArgument(!uniqueNames.has(field.name), `duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, 'types', types);\n                uniqueNames.add(field.name);\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1] || null;\n                assertArgument(baseType !== name, `circular type reference to ${JSON.stringify(baseType)}`, 'types', types);\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    continue;\n                }\n                assertArgument(parents.has(baseType), `unknown type ${JSON.stringify(baseType)}`, 'types', types);\n                // Add linkage\n                parents.get(baseType).push(name);\n                links.get(name).add(baseType);\n            }\n        }\n        // Deduce the primary type\n        const primaryTypes = Array.from(parents.keys()).filter((n) => parents.get(n).length === 0);\n        assertArgument(primaryTypes.length !== 0, 'missing primary type', 'types', types);\n        assertArgument(primaryTypes.length === 1, `ambiguous primary types or unused types: ${primaryTypes.map((t) => JSON.stringify(t)).join(', ')}`, 'types', types);\n        defineProperties(this, { primaryType: primaryTypes[0] });\n        // Check for circular type references\n        function checkCircular(type, found) {\n            assertArgument(!found.has(type), `circular type reference to ${JSON.stringify(type)}`, 'types', types);\n            found.add(type);\n            for (const child of links.get(type)) {\n                if (!parents.has(child)) {\n                    continue;\n                }\n                // Recursively check children\n                checkCircular(child, found);\n                // Mark all ancestors as having this decendant\n                for (const subtype of found) {\n                    subtypes.get(subtype).add(child);\n                }\n            }\n            found.delete(type);\n        }\n        checkCircular(this.primaryType, new Set());\n        // Compute each fully describe type\n        for (const [name, set] of subtypes) {\n            const st = Array.from(set);\n            st.sort();\n            this.#fullTypes.set(name, encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(''));\n        }\n    }\n    /**\n     * Returnthe encoder for the specific `type`.\n     *\n     * @param {string} type - The type to get the encoder for.\n     * @returns {(value: any) => string} The encoder for the type.\n     */\n    getEncoder(type) {\n        let encoder = this.#encoderCache.get(type);\n        if (!encoder) {\n            encoder = this.#getEncoder(type);\n            this.#encoderCache.set(type, encoder);\n        }\n        return encoder;\n    }\n    #getEncoder(type) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return encoder;\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            return (value) => {\n                assertArgument(!match[3] || parseInt(match[3]) === value.length, `array length mismatch; expected length ${parseInt(match[3])}`, 'value', value);\n                let result = value.map(subEncoder);\n                if (this.#fullTypes.has(subtype)) {\n                    result = result.map(keccak256);\n                }\n                return keccak256(concat(result));\n            };\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this.#fullTypes.get(type));\n            return (value) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this.#fullTypes.has(type)) {\n                        return keccak256(result);\n                    }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return concat(values);\n            };\n        }\n        assertArgument(false, `unknown type: ${type}`, 'type', type);\n    }\n    /**\n     * Return the full type for `name`.\n     *\n     * @param {string} name - The name to get the full type for.\n     * @returns {string} The full type.\n     */\n    encodeType(name) {\n        const result = this.#fullTypes.get(name);\n        assertArgument(result, `unknown type: ${JSON.stringify(name)}`, 'name', name);\n        return result;\n    }\n    /**\n     * Return the encoded `value` for the `type`.\n     *\n     * @param {string} type - The type to encode the value for.\n     * @param {any} value - The value to encode.\n     * @returns {string} The encoded value.\n     */\n    encodeData(type, value) {\n        return this.getEncoder(type)(value);\n    }\n    /**\n     * Returns the hash of `value` for the type of `name`.\n     *\n     * @param {string} name - The name of the type.\n     * @param {Record<string, any>} value - The value to hash.\n     * @returns {string} The hash of the value.\n     */\n    hashStruct(name, value) {\n        return keccak256(this.encodeData(name, value));\n    }\n    /**\n     * Return the fulled encoded `value` for the {@link types | **types**}.\n     *\n     * @param {Record<string, any>} value - The value to encode.\n     * @returns {string} The encoded value.\n     */\n    encode(value) {\n        return this.encodeData(this.primaryType, value);\n    }\n    /**\n     * Return the hash of the fully encoded `value` for the {@link types | **types**}.\n     *\n     * @param {Record<string, any>} value - The value to hash.\n     * @returns {string} The hash of the value.\n     */\n    hash(value) {\n        return this.hashStruct(this.primaryType, value);\n    }\n    /**\n     * @ignore\n     */\n    _visit(type, value, callback) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            assertArgument(!match[3] || parseInt(match[3]) === value.length, `array length mismatch; expected length ${parseInt(match[3])}`, 'value', value);\n            return value.map((v) => this._visit(match[1], v, callback));\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, {});\n        }\n        assertArgument(false, `unknown type: ${type}`, 'type', type);\n    }\n    /**\n     * Call `calback` for each value in `value`, passing the type and component within `value`.\n     *\n     * This is useful for replacing addresses or other transformation that may be desired on each component, based on\n     * its type.\n     *\n     * @param {Record<string, any>} value - The value to visit.\n     * @param {(type: string, data: any) => any} callback - The callback to call for each value.\n     * @returns {any} The result of the callback.\n     */\n    visit(value, callback) {\n        return this._visit(this.primaryType, value, callback);\n    }\n    /**\n     * Create a new **TypedDataEncoder** for `types`.\n     *\n     * @param {Record<string, TypedDataField[]>} types - The types to encode.\n     * @returns {TypedDataEncoder} The encoder for the types.\n     * @throws {Error} If the types are invalid.\n     */\n    static from(types) {\n        return new TypedDataEncoder(types);\n    }\n    /**\n     * Return the primary type for `types`.\n     *\n     * @param {Record<string, TypedDataField[]>} types - The types to get the primary type for.\n     * @returns {string} The primary type.\n     * @throws {Error} If the types are invalid.\n     */\n    static getPrimaryType(types) {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n    /**\n     * Return the hashed struct for `value` using `types` and `name`.\n     *\n     * @param {string} name - The name of the type.\n     * @param {Record<string, TypedDataField[]>} types - The types to hash.\n     * @param {Record<string, any>} value - The value to hash.\n     * @returns {string} The hash of the value.\n     */\n    static hashStruct(name, types, value) {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n    /**\n     * Return the domain hash for `domain`.\n     *\n     * @param {TypedDataDomain} domain - The domain to hash.\n     * @returns {string} The hash of the domain.\n     * @throws {Error} If the domain is invalid.\n     */\n    static hashDomain(domain) {\n        const domainFields = [];\n        for (const name in domain) {\n            if (domain[name] == null) {\n                continue;\n            }\n            const type = domainFieldTypes[name];\n            assertArgument(type, `invalid typed-data domain key: ${JSON.stringify(name)}`, 'domain', domain);\n            domainFields.push({ name, type });\n        }\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n        return TypedDataEncoder.hashStruct('EIP712Domain', { EIP712Domain: domainFields }, domain);\n    }\n    /**\n     * Return the fully encoded [EIP-712](https://eips.ethereum.org/EIPS/eip-712) `value` for `types` with `domain`.\n     *\n     * @param {TypedDataDomain} domain - The domain to use.\n     * @param {Record<string, TypedDataField[]>} types - The types to encode.\n     * @param {Record<string, any>} value - The value to encode.\n     * @returns {string} The encoded value.\n     */\n    static encode(domain, types, value) {\n        return concat(['0x1901', TypedDataEncoder.hashDomain(domain), TypedDataEncoder.from(types).hash(value)]);\n    }\n    /**\n     * Return the hash of the fully encoded [EIP-712](https://eips.ethereum.org/EIPS/eip-712) `value` for `types` with\n     * `domain`.\n     *\n     * @param {TypedDataDomain} domain - The domain to use.\n     * @param {Record<string, TypedDataField[]>} types - The types to hash.\n     * @param {Record<string, any>} value - The value to hash.\n     * @returns {string} The hash of the value.\n     */\n    static hash(domain, types, value) {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n    /**\n     * Returns the JSON-encoded payload expected by nodes which implement the JSON-RPC\n     * [EIP-712](https://eips.ethereum.org/EIPS/eip-712) method.\n     *\n     * @param {TypedDataDomain} domain - The domain to use.\n     * @param {Record<string, TypedDataField[]>} types - The types to encode.\n     * @param {Record<string, any>} value - The value to encode.\n     * @returns {any} The JSON-encoded payload.\n     */\n    static getPayload(domain, types, value) {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n        // Derive the EIP712Domain Struct reference type\n        const domainValues = {};\n        const domainTypes = [];\n        domainFieldNames.forEach((name) => {\n            const value = domain[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n        const encoder = TypedDataEncoder.from(types);\n        const typesWithDomain = Object.assign({}, types);\n        assertArgument(typesWithDomain.EIP712Domain == null, 'types must not contain EIP712Domain type', 'types.EIP712Domain', types);\n        typesWithDomain.EIP712Domain = domainTypes;\n        // Validate the data structures and types\n        encoder.encode(value);\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type, value) => {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(getBytes(value));\n                }\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return getBigInt(value).toString();\n                }\n                switch (type) {\n                    case 'address':\n                        return value.toLowerCase();\n                    case 'bool':\n                        return !!value;\n                    case 'string':\n                        assertArgument(typeof value === 'string', 'invalid string', 'value', value);\n                        return value;\n                }\n                assertArgument(false, 'unsupported type', 'type', type);\n            }),\n        };\n    }\n}\n/**\n * Compute the address used to sign the typed data for the `signature`.\n *\n * @category Hash\n * @param {TypedDataDomain} domain - The domain of the typed data.\n * @param {Record<string, TypedDataField[]>} types - The types of the typed data.\n * @param {Record<string, any>} value - The value of the typed data.\n * @param {SignatureLike} signature - The signature to verify.\n * @returns {string} The address that signed the typed data.\n */\nexport function verifyTypedData(domain, types, value, signature) {\n    return recoverAddress(TypedDataEncoder.hash(domain, types, value), signature);\n}\n//# sourceMappingURL=typed-data.js.map","/**\n * A fragment is a single item from an ABI, which may represent any of:\n *\n * - {@link FunctionFragment | Functions}\n * - {@link EventFragment | Events}\n * - {@link ConstructorFragment | Constructors}\n * - Custom {@link ErrorFragment | Errors}\n * - {@link FallbackFragment | Fallback or Recieve} functions\n *\n * @category Application Binary Interface\n */\nimport { defineProperties, getBigInt, getNumber, assert, assertPrivate, assertArgument } from '../utils/index.js';\nimport { id } from '../hash/index.js';\n// [ \"a\", \"b\" ] => { \"a\": 1, \"b\": 1 }\nfunction setify(items) {\n    const result = new Set();\n    items.forEach((k) => result.add(k));\n    return Object.freeze(result);\n}\nconst _kwVisibDeploy = 'external public payable';\nconst KwVisibDeploy = setify(_kwVisibDeploy.split(' '));\n// Visibility Keywords\nconst _kwVisib = 'constant external internal payable private public pure view';\nconst KwVisib = setify(_kwVisib.split(' '));\nconst _kwTypes = 'constructor error event fallback function receive struct';\nconst KwTypes = setify(_kwTypes.split(' '));\nconst _kwModifiers = 'calldata memory storage payable indexed';\nconst KwModifiers = setify(_kwModifiers.split(' '));\nconst _kwOther = 'tuple returns';\n// All Keywords\nconst _keywords = [_kwTypes, _kwModifiers, _kwOther, _kwVisib].join(' ');\nconst Keywords = setify(_keywords.split(' '));\n// Single character tokens\nconst SimpleTokens = {\n    '(': 'OPEN_PAREN',\n    ')': 'CLOSE_PAREN',\n    '[': 'OPEN_BRACKET',\n    ']': 'CLOSE_BRACKET',\n    ',': 'COMMA',\n    '@': 'AT',\n};\n// Parser regexes to consume the next token\nconst regexWhitespacePrefix = new RegExp('^(\\\\s*)');\nconst regexNumberPrefix = new RegExp('^([0-9]+)');\nconst regexIdPrefix = new RegExp('^([a-zA-Z$_][a-zA-Z0-9$_]*)');\n// Parser regexs to check validity\nconst regexId = new RegExp('^([a-zA-Z$_][a-zA-Z0-9$_]*)$');\nconst regexType = new RegExp('^(address|bool|bytes([0-9]*)|string|u?int([0-9]*))$');\n/**\n * Represents a parsed list of tokens.\n *\n * @category Application Binary Interface\n */\nclass TokenString {\n    #offset;\n    #tokens;\n    get offset() {\n        return this.#offset;\n    }\n    get length() {\n        return this.#tokens.length - this.#offset;\n    }\n    constructor(tokens) {\n        this.#offset = 0;\n        this.#tokens = tokens.slice();\n    }\n    /**\n     * Returns a clone of the current token string.\n     *\n     * @returns {TokenString} A cloned TokenString object.\n     */\n    clone() {\n        return new TokenString(this.#tokens);\n    }\n    reset() {\n        this.#offset = 0;\n    }\n    /**\n     * @ignore\n     */\n    #subTokenString(from = 0, to = 0) {\n        return new TokenString(this.#tokens.slice(from, to).map((t) => {\n            return Object.freeze(Object.assign({}, t, {\n                match: t.match - from,\n                linkBack: t.linkBack - from,\n                linkNext: t.linkNext - from,\n            }));\n        }));\n    }\n    // Pops and returns the value of the next token, if it is a keyword in allowed; throws if out of tokens\n    popKeyword(allowed) {\n        const top = this.peek();\n        if (top.type !== 'KEYWORD' || !allowed.has(top.text)) {\n            throw new Error(`expected keyword ${top.text}`);\n        }\n        return this.pop().text;\n    }\n    // Pops and returns the value of the next token if it is `type`; throws if out of tokens\n    popType(type) {\n        if (this.peek().type !== type) {\n            throw new Error(`expected ${type}; got ${JSON.stringify(this.peek())}`);\n        }\n        return this.pop().text;\n    }\n    // Pops and returns a \"(\" TOKENS \")\"\n    popParen() {\n        const top = this.peek();\n        if (top.type !== 'OPEN_PAREN') {\n            throw new Error('bad start');\n        }\n        const result = this.#subTokenString(this.#offset + 1, top.match + 1);\n        this.#offset = top.match + 1;\n        return result;\n    }\n    // Pops and returns the items within \"(\" ITEM1 \",\" ITEM2 \",\" ... \")\"\n    popParams() {\n        const top = this.peek();\n        if (top.type !== 'OPEN_PAREN') {\n            throw new Error('bad start');\n        }\n        const result = [];\n        while (this.#offset < top.match - 1) {\n            const link = this.peek().linkNext;\n            result.push(this.#subTokenString(this.#offset + 1, link));\n            this.#offset = link;\n        }\n        this.#offset = top.match + 1;\n        return result;\n    }\n    // Returns the top Token, throwing if out of tokens\n    peek() {\n        if (this.#offset >= this.#tokens.length) {\n            throw new Error('out-of-bounds');\n        }\n        return this.#tokens[this.#offset];\n    }\n    // Returns the next value, if it is a keyword in `allowed`\n    peekKeyword(allowed) {\n        const top = this.peekType('KEYWORD');\n        return top != null && allowed.has(top) ? top : null;\n    }\n    // Returns the value of the next token if it is `type`\n    peekType(type) {\n        if (this.length === 0) {\n            return null;\n        }\n        const top = this.peek();\n        return top.type === type ? top.text : null;\n    }\n    // Returns the next token; throws if out of tokens\n    pop() {\n        const result = this.peek();\n        this.#offset++;\n        return result;\n    }\n    toString() {\n        const tokens = [];\n        for (let i = this.#offset; i < this.#tokens.length; i++) {\n            const token = this.#tokens[i];\n            tokens.push(`${token.type}:${token.text}`);\n        }\n        return `<TokenString ${tokens.join(' ')}>`;\n    }\n}\nfunction lex(text) {\n    const tokens = [];\n    const throwError = (message) => {\n        const token = offset < text.length ? JSON.stringify(text[offset]) : '$EOI';\n        throw new Error(`invalid token ${token} at ${offset}: ${message}`);\n    };\n    const brackets = [];\n    const commas = [];\n    let offset = 0;\n    while (offset < text.length) {\n        // Strip off any leading whitespace\n        let cur = text.substring(offset);\n        let match = cur.match(regexWhitespacePrefix);\n        if (match) {\n            offset += match[1].length;\n            cur = text.substring(offset);\n        }\n        const token = {\n            depth: brackets.length,\n            linkBack: -1,\n            linkNext: -1,\n            match: -1,\n            type: '',\n            text: '',\n            offset,\n            value: -1,\n        };\n        tokens.push(token);\n        const type = SimpleTokens[cur[0]] || '';\n        if (type) {\n            token.type = type;\n            token.text = cur[0];\n            offset++;\n            if (type === 'OPEN_PAREN') {\n                brackets.push(tokens.length - 1);\n                commas.push(tokens.length - 1);\n            }\n            else if (type == 'CLOSE_PAREN') {\n                if (brackets.length === 0) {\n                    throwError('no matching open bracket');\n                }\n                token.match = brackets.pop();\n                tokens[token.match].match = tokens.length - 1;\n                token.depth--;\n                token.linkBack = commas.pop();\n                tokens[token.linkBack].linkNext = tokens.length - 1;\n            }\n            else if (type === 'COMMA') {\n                token.linkBack = commas.pop();\n                tokens[token.linkBack].linkNext = tokens.length - 1;\n                commas.push(tokens.length - 1);\n            }\n            else if (type === 'OPEN_BRACKET') {\n                token.type = 'BRACKET';\n            }\n            else if (type === 'CLOSE_BRACKET') {\n                // Remove the CLOSE_BRACKET\n                let suffix = tokens.pop().text;\n                if (tokens.length > 0 && tokens[tokens.length - 1].type === 'NUMBER') {\n                    const value = tokens.pop().text;\n                    suffix = value + suffix;\n                    tokens[tokens.length - 1].value = getNumber(value);\n                }\n                if (tokens.length === 0 || tokens[tokens.length - 1].type !== 'BRACKET') {\n                    throw new Error('missing opening bracket');\n                }\n                tokens[tokens.length - 1].text += suffix;\n            }\n            continue;\n        }\n        match = cur.match(regexIdPrefix);\n        if (match) {\n            token.text = match[1];\n            offset += token.text.length;\n            if (Keywords.has(token.text)) {\n                token.type = 'KEYWORD';\n                continue;\n            }\n            if (token.text.match(regexType)) {\n                token.type = 'TYPE';\n                continue;\n            }\n            token.type = 'ID';\n            continue;\n        }\n        match = cur.match(regexNumberPrefix);\n        if (match) {\n            token.text = match[1];\n            token.type = 'NUMBER';\n            offset += token.text.length;\n            continue;\n        }\n        throw new Error(`unexpected token ${JSON.stringify(cur[0])} at position ${offset}`);\n    }\n    return new TokenString(tokens.map((t) => Object.freeze(t)));\n}\n// Check only one of `allowed` is in `set`\nfunction allowSingle(set, allowed) {\n    const included = [];\n    for (const key in allowed.keys()) {\n        if (set.has(key)) {\n            included.push(key);\n        }\n    }\n    if (included.length > 1) {\n        throw new Error(`conflicting types: ${included.join(', ')}`);\n    }\n}\n// Functions to process a Solidity Signature TokenString from left-to-right for...\n// ...the name with an optional type, returning the name\nfunction consumeName(type, tokens) {\n    if (tokens.peekKeyword(KwTypes)) {\n        const keyword = tokens.pop().text;\n        if (keyword !== type) {\n            throw new Error(`expected ${type}, got ${keyword}`);\n        }\n    }\n    return tokens.popType('ID');\n}\n// ...all keywords matching allowed, returning the keywords\nfunction consumeKeywords(tokens, allowed) {\n    const keywords = new Set();\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const keyword = tokens.peekType('KEYWORD');\n        if (keyword == null || (allowed && !allowed.has(keyword))) {\n            break;\n        }\n        tokens.pop();\n        if (keywords.has(keyword)) {\n            throw new Error(`duplicate keywords: ${JSON.stringify(keyword)}`);\n        }\n        keywords.add(keyword);\n    }\n    return Object.freeze(keywords);\n}\n// ...all visibility keywords, returning the coalesced mutability\nfunction consumeMutability(tokens) {\n    const modifiers = consumeKeywords(tokens, KwVisib);\n    // Detect conflicting modifiers\n    allowSingle(modifiers, setify('constant payable nonpayable'.split(' ')));\n    allowSingle(modifiers, setify('pure view payable nonpayable'.split(' ')));\n    // Process mutability states\n    if (modifiers.has('view')) {\n        return 'view';\n    }\n    if (modifiers.has('pure')) {\n        return 'pure';\n    }\n    if (modifiers.has('payable')) {\n        return 'payable';\n    }\n    if (modifiers.has('nonpayable')) {\n        return 'nonpayable';\n    }\n    // Process legacy `constant` last\n    if (modifiers.has('constant')) {\n        return 'view';\n    }\n    return 'nonpayable';\n}\n// ...a parameter list, returning the ParamType list\nfunction consumeParams(tokens, allowIndexed) {\n    return tokens.popParams().map((t) => ParamType.from(t, allowIndexed));\n}\n// ...a gas limit, returning a BigNumber or null if none\nfunction consumeGas(tokens) {\n    if (tokens.peekType('AT')) {\n        tokens.pop();\n        if (tokens.peekType('NUMBER')) {\n            return getBigInt(tokens.pop().text);\n        }\n        throw new Error('invalid gas');\n    }\n    return null;\n}\nfunction consumeEoi(tokens) {\n    if (tokens.length) {\n        throw new Error(`unexpected tokens: ${tokens.toString()}`);\n    }\n}\nconst regexArrayType = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nfunction verifyBasicType(type) {\n    const match = type.match(regexType);\n    assertArgument(match, 'invalid type', 'type', type);\n    if (type === 'uint') {\n        return 'uint256';\n    }\n    if (type === 'int') {\n        return 'int256';\n    }\n    if (match[2]) {\n        // bytesXX\n        const length = parseInt(match[2]);\n        assertArgument(length !== 0 && length <= 32, 'invalid bytes length', 'type', type);\n    }\n    else if (match[3]) {\n        // intXX or uintXX\n        const size = parseInt(match[3]);\n        assertArgument(size !== 0 && size <= 256 && size % 8 === 0, 'invalid numeric width', 'type', type);\n    }\n    return type;\n}\n// Make the Fragment constructors effectively private\nconst _guard = {};\nconst internal = Symbol.for('_quais_internal');\nconst ParamTypeInternal = '_ParamTypeInternal';\nconst ErrorFragmentInternal = '_ErrorInternal';\nconst EventFragmentInternal = '_EventInternal';\nconst ConstructorFragmentInternal = '_ConstructorInternal';\nconst FallbackFragmentInternal = '_FallbackInternal';\nconst FunctionFragmentInternal = '_FunctionInternal';\nconst StructFragmentInternal = '_StructInternal';\n/**\n * Each input and output of a {@link Fragment | **Fragment**} is an Array of {@link ParamType | **ParamType**}.\n *\n * @category Application Binary Interface\n */\nexport class ParamType {\n    /**\n     * The local name of the parameter (or `\"\"` if unbound)\n     */\n    name;\n    /**\n     * The fully qualified type (e.g. `\"address\"`, `\"tuple(address)\"`, `\"uint256[3][]\"`)\n     */\n    type;\n    /**\n     * The base type (e.g. `\"address\"`, `\"tuple\"`, `\"array\"`)\n     */\n    baseType;\n    /**\n     * True if the parameters is indexed.\n     *\n     * For non-indexable types this is `null`.\n     */\n    indexed;\n    /**\n     * The components for the tuple.\n     *\n     * For non-tuple types this is `null`.\n     */\n    components;\n    /**\n     * The array length, or `-1` for dynamic-lengthed arrays.\n     *\n     * For non-array types this is `null`.\n     */\n    arrayLength;\n    /**\n     * The type of each child in the array.\n     *\n     * For non-array types this is `null`.\n     */\n    arrayChildren;\n    /**\n     * @ignore\n     */\n    constructor(guard, name, type, baseType, indexed, components, arrayLength, arrayChildren) {\n        assertPrivate(guard, _guard, 'ParamType');\n        Object.defineProperty(this, internal, { value: ParamTypeInternal });\n        if (components) {\n            components = Object.freeze(components.slice());\n        }\n        if (baseType === 'array') {\n            if (arrayLength == null || arrayChildren == null) {\n                throw new Error('');\n            }\n        }\n        else if (arrayLength != null || arrayChildren != null) {\n            throw new Error('');\n        }\n        if (baseType === 'tuple') {\n            if (components == null) {\n                throw new Error('');\n            }\n        }\n        else if (components != null) {\n            throw new Error('');\n        }\n        defineProperties(this, {\n            name,\n            type,\n            baseType,\n            indexed,\n            components,\n            arrayLength,\n            arrayChildren,\n        });\n    }\n    /**\n     * Return a string representation of this type.\n     *\n     * For example,\n     *\n     * `sighash\" => \"(uint256,address)\"`\n     *\n     * `\"minimal\" => \"tuple(uint256,address) indexed\"`\n     *\n     * `\"full\" => \"tuple(uint256 foo, address bar) indexed baz\"`\n     *\n     * @returns {string} The formatted type.\n     */\n    format(format) {\n        if (format == null) {\n            format = 'sighash';\n        }\n        if (format === 'json') {\n            const name = this.name || '';\n            if (this.isArray()) {\n                const result = JSON.parse(this.arrayChildren.format('json'));\n                result.name = name;\n                result.type += `[${this.arrayLength < 0 ? '' : String(this.arrayLength)}]`;\n                return JSON.stringify(result);\n            }\n            const result = {\n                type: this.baseType === 'tuple' ? 'tuple' : this.type,\n                name,\n            };\n            if (typeof this.indexed === 'boolean') {\n                result.indexed = this.indexed;\n            }\n            if (this.isTuple()) {\n                result.components = this.components.map((c) => JSON.parse(c.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n        let result = '';\n        // Array\n        if (this.isArray()) {\n            result += this.arrayChildren.format(format);\n            result += `[${this.arrayLength < 0 ? '' : String(this.arrayLength)}]`;\n        }\n        else {\n            if (this.isTuple()) {\n                result +=\n                    '(' + this.components.map((comp) => comp.format(format)).join(format === 'full' ? ', ' : ',') + ')';\n            }\n            else {\n                result += this.type;\n            }\n        }\n        if (format !== 'sighash') {\n            if (this.indexed === true) {\n                result += ' indexed';\n            }\n            if (format === 'full' && this.name) {\n                result += ' ' + this.name;\n            }\n        }\n        return result;\n    }\n    /**\n     * This provides a type guard ensuring that {@link arrayChildren | **arrayChildren**} and\n     * {@link arrayLength | **arrayLength**} are non-null.\n     *\n     * @returns {boolean} True if this is an Array type.\n     */\n    isArray() {\n        return this.baseType === 'array';\n    }\n    /**\n     * This provides a type guard ensuring that {@link components | **components**} is non-null.\n     *\n     * @returns {boolean} True if this is a Tuple type.\n     */\n    isTuple() {\n        return this.baseType === 'tuple';\n    }\n    /**\n     * This provides a type guard ensuring that {@link indexed | **indexed**} is non-null.\n     *\n     * @returns {boolean} True if this is an Indexable type.\n     */\n    isIndexable() {\n        return this.indexed != null;\n    }\n    /**\n     * Walks the **ParamType** with `value`, calling `process` on each type, destructing the `value` recursively.\n     */\n    walk(value, process) {\n        if (this.isArray()) {\n            if (!Array.isArray(value)) {\n                throw new Error('invalid array value');\n            }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error('array is wrong length');\n            }\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const _this = this;\n            return value.map((v) => _this.arrayChildren.walk(v, process));\n        }\n        if (this.isTuple()) {\n            if (!Array.isArray(value)) {\n                throw new Error('invalid tuple value');\n            }\n            if (value.length !== this.components.length) {\n                throw new Error('array is wrong length');\n            }\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const _this = this;\n            return value.map((v, i) => _this.components[i].walk(v, process));\n        }\n        return process(this.type, value);\n    }\n    /**\n     * @ignore\n     */\n    #walkAsync(promises, value, process, setValue) {\n        if (this.isArray()) {\n            if (!Array.isArray(value)) {\n                throw new Error('invalid array value');\n            }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error('array is wrong length');\n            }\n            const childType = this.arrayChildren;\n            const result = value.slice();\n            result.forEach((value, index) => {\n                childType.#walkAsync(promises, value, process, (value) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n        if (this.isTuple()) {\n            const components = this.components;\n            // Convert the object into an array\n            let result;\n            if (Array.isArray(value)) {\n                result = value.slice();\n            }\n            else {\n                if (value == null || typeof value !== 'object') {\n                    throw new Error('invalid tuple value');\n                }\n                result = components.map((param) => {\n                    if (!param.name) {\n                        throw new Error('cannot use object value with unnamed components');\n                    }\n                    if (!(param.name in value)) {\n                        throw new Error(`missing value for component ${param.name}`);\n                    }\n                    return value[param.name];\n                });\n            }\n            if (result.length !== this.components.length) {\n                throw new Error('array is wrong length');\n            }\n            result.forEach((value, index) => {\n                components[index].#walkAsync(promises, value, process, (value) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n        const result = process(this.type, value);\n        if (result.then) {\n            promises.push((async function () {\n                setValue(await result);\n            })());\n        }\n        else {\n            setValue(result);\n        }\n    }\n    /**\n     * Walks the **ParamType** with `value`, asynchronously calling `process` on each type, destructing the `value`\n     * recursively.\n     *\n     * This can be used to resolve ENS naes by walking and resolving each `\"address\"` type.\n     */\n    async walkAsync(value, process) {\n        const promises = [];\n        const result = [value];\n        this.#walkAsync(promises, value, process, (value) => {\n            result[0] = value;\n        });\n        if (promises.length) {\n            await Promise.all(promises);\n        }\n        return result[0];\n    }\n    /**\n     * Creates a new **ParamType** for `obj`.\n     *\n     * If `allowIndexed` then the `indexed` keyword is permitted, otherwise the `indexed` keyword will throw an error.\n     */\n    static from(obj, allowIndexed) {\n        if (ParamType.isParamType(obj)) {\n            return obj;\n        }\n        if (typeof obj === 'string') {\n            try {\n                return ParamType.from(lex(obj), allowIndexed);\n            }\n            catch (error) {\n                assertArgument(false, 'invalid param type', 'obj', obj);\n            }\n        }\n        else if (obj instanceof TokenString) {\n            let type = '', baseType = '';\n            let comps = null;\n            if (consumeKeywords(obj, setify(['tuple'])).has('tuple') || obj.peekType('OPEN_PAREN')) {\n                // Tuple\n                baseType = 'tuple';\n                comps = obj.popParams().map((t) => ParamType.from(t));\n                type = `tuple(${comps.map((c) => c.format()).join(',')})`;\n            }\n            else {\n                // Normal\n                type = verifyBasicType(obj.popType('TYPE'));\n                baseType = type;\n            }\n            // Check for Array\n            let arrayChildren = null;\n            let arrayLength = null;\n            while (obj.length && obj.peekType('BRACKET')) {\n                const bracket = obj.pop(); //arrays[i];\n                arrayChildren = new ParamType(_guard, '', type, baseType, null, comps, arrayLength, arrayChildren);\n                arrayLength = bracket.value;\n                type += bracket.text;\n                baseType = 'array';\n                comps = null;\n            }\n            let indexed = null;\n            const keywords = consumeKeywords(obj, KwModifiers);\n            if (keywords.has('indexed')) {\n                if (!allowIndexed) {\n                    throw new Error('');\n                }\n                indexed = true;\n            }\n            const name = obj.peekType('ID') ? obj.pop().text : '';\n            if (obj.length) {\n                throw new Error('leftover tokens');\n            }\n            return new ParamType(_guard, name, type, baseType, indexed, comps, arrayLength, arrayChildren);\n        }\n        const name = obj.name;\n        assertArgument(!name || (typeof name === 'string' && name.match(regexId)), 'invalid name', 'obj.name', name);\n        let indexed = obj.indexed;\n        if (indexed != null) {\n            assertArgument(allowIndexed, 'parameter cannot be indexed', 'obj.indexed', obj.indexed);\n            indexed = !!indexed;\n        }\n        let type = obj.type;\n        const arrayMatch = type.match(regexArrayType);\n        if (arrayMatch) {\n            const arrayLength = parseInt(arrayMatch[2] || '-1');\n            const arrayChildren = ParamType.from({\n                type: arrayMatch[1],\n                components: obj.components,\n            });\n            return new ParamType(_guard, name || '', type, 'array', indexed, null, arrayLength, arrayChildren);\n        }\n        if (type === 'tuple' || type.startsWith('tuple(' /* fix: ) */) || type.startsWith('(' /* fix: ) */)) {\n            const comps = obj.components != null ? obj.components.map((c) => ParamType.from(c)) : null;\n            const tuple = new ParamType(_guard, name || '', type, 'tuple', indexed, comps, null, null);\n            // @TODO: use lexer to validate and normalize type\n            return tuple;\n        }\n        type = verifyBasicType(obj.type);\n        return new ParamType(_guard, name || '', type, type, indexed, null, null, null);\n    }\n    /**\n     * Returns true if `value` is a **ParamType**.\n     */\n    static isParamType(value) {\n        return value && value[internal] === ParamTypeInternal;\n    }\n}\n/**\n * An abstract class to represent An individual fragment from a parse ABI.\n *\n * @category Application Binary Interface\n */\nexport class Fragment {\n    /**\n     * The type of the fragment.\n     */\n    type;\n    /**\n     * The inputs for the fragment.\n     */\n    inputs;\n    /**\n     * @ignore\n     */\n    constructor(guard, type, inputs) {\n        assertPrivate(guard, _guard, 'Fragment');\n        inputs = Object.freeze(inputs.slice());\n        defineProperties(this, { type, inputs });\n    }\n    /**\n     * Creates a new **Fragment** for `obj`, wich can be any supported ABI frgament type.\n     */\n    static from(obj) {\n        if (typeof obj === 'string') {\n            // Try parsing JSON...\n            try {\n                Fragment.from(JSON.parse(obj));\n                // eslint-disable-next-line no-empty\n            }\n            catch (e) { }\n            // ...otherwise, use the human-readable lexer\n            return Fragment.from(lex(obj));\n        }\n        if (obj instanceof TokenString) {\n            // Human-readable ABI (already lexed)\n            const type = obj.peekKeyword(KwTypes);\n            switch (type) {\n                case 'constructor':\n                    return ConstructorFragment.from(obj);\n                case 'error':\n                    return ErrorFragment.from(obj);\n                case 'event':\n                    return EventFragment.from(obj);\n                case 'fallback':\n                case 'receive':\n                    return FallbackFragment.from(obj);\n                case 'function':\n                    return FunctionFragment.from(obj);\n                case 'struct':\n                    return StructFragment.from(obj);\n            }\n        }\n        else if (typeof obj === 'object') {\n            // JSON ABI\n            switch (obj.type) {\n                case 'constructor':\n                    return ConstructorFragment.from(obj);\n                case 'error':\n                    return ErrorFragment.from(obj);\n                case 'event':\n                    return EventFragment.from(obj);\n                case 'fallback':\n                case 'receive':\n                    return FallbackFragment.from(obj);\n                case 'function':\n                    return FunctionFragment.from(obj);\n                case 'struct':\n                    return StructFragment.from(obj);\n            }\n            assert(false, `unsupported type: ${obj.type}`, 'UNSUPPORTED_OPERATION', {\n                operation: 'Fragment.from',\n            });\n        }\n        assertArgument(false, 'unsupported frgament object', 'obj', obj);\n    }\n    /**\n     * Returns true if `value` is a {@link ConstructorFragment | **ConstructorFragment**}.\n     */\n    static isConstructor(value) {\n        return ConstructorFragment.isFragment(value);\n    }\n    /**\n     * Returns true if `value` is an {@link ErrorFragment | **ErrorFragment**}.\n     */\n    static isError(value) {\n        return ErrorFragment.isFragment(value);\n    }\n    /**\n     * Returns true if `value` is an {@link EventFragment | **EventFragment**}.\n     */\n    static isEvent(value) {\n        return EventFragment.isFragment(value);\n    }\n    /**\n     * Returns true if `value` is a {@link FunctionFragment | **FunctionFragment**}.\n     */\n    static isFunction(value) {\n        return FunctionFragment.isFragment(value);\n    }\n    /**\n     * Returns true if `value` is a {@link StructFragment | **StructFragment**}.\n     */\n    static isStruct(value) {\n        return StructFragment.isFragment(value);\n    }\n}\n/**\n * An abstract class to represent An individual fragment which has a name from a parse ABI.\n *\n * @category Application Binary Interface\n */\nexport class NamedFragment extends Fragment {\n    /**\n     * The name of the fragment.\n     */\n    name;\n    /**\n     * @ignore\n     */\n    constructor(guard, type, name, inputs) {\n        super(guard, type, inputs);\n        assertArgument(typeof name === 'string' && name.match(regexId), 'invalid identifier', 'name', name);\n        inputs = Object.freeze(inputs.slice());\n        defineProperties(this, { name });\n    }\n}\nfunction joinParams(format, params) {\n    return '(' + params.map((p) => p.format(format)).join(format === 'full' ? ', ' : ',') + ')';\n}\n/**\n * A Fragment which represents a _Custom Error_.\n *\n * @category Application Binary Interface\n */\nexport class ErrorFragment extends NamedFragment {\n    /**\n     * @ignore\n     */\n    constructor(guard, name, inputs) {\n        super(guard, 'error', name, inputs);\n        Object.defineProperty(this, internal, { value: ErrorFragmentInternal });\n    }\n    /**\n     * The Custom Error selector.\n     */\n    get selector() {\n        return id(this.format('sighash')).substring(0, 10);\n    }\n    /**\n     * Returns a string representation of this fragment as `format`.\n     */\n    format(format) {\n        if (format == null) {\n            format = 'sighash';\n        }\n        if (format === 'json') {\n            return JSON.stringify({\n                type: 'error',\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n        const result = [];\n        if (format !== 'sighash') {\n            result.push('error');\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        return result.join(' ');\n    }\n    /**\n     * Returns a new **ErrorFragment** for `obj`.\n     */\n    static from(obj) {\n        if (ErrorFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof obj === 'string') {\n            return ErrorFragment.from(lex(obj));\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName('error', obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n            return new ErrorFragment(_guard, name, inputs);\n        }\n        return new ErrorFragment(_guard, obj.name, obj.inputs ? obj.inputs.map(ParamType.from) : []);\n    }\n    /**\n     * Returns `true` and provides a type guard if `value` is an **ErrorFragment**.\n     */\n    static isFragment(value) {\n        return value && value[internal] === ErrorFragmentInternal;\n    }\n}\n/**\n * A Fragment which represents an Event.\n *\n * @category Application Binary Interface\n */\nexport class EventFragment extends NamedFragment {\n    /**\n     * Whether this event is anonymous.\n     */\n    anonymous;\n    /**\n     * @ignore\n     */\n    constructor(guard, name, inputs, anonymous) {\n        super(guard, 'event', name, inputs);\n        Object.defineProperty(this, internal, { value: EventFragmentInternal });\n        defineProperties(this, { anonymous });\n    }\n    /**\n     * The Event topic hash.\n     */\n    get topicHash() {\n        return id(this.format('sighash'));\n    }\n    /**\n     * Returns a string representation of this event as `format`.\n     */\n    format(format) {\n        if (format == null) {\n            format = 'sighash';\n        }\n        if (format === 'json') {\n            return JSON.stringify({\n                type: 'event',\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format))),\n            });\n        }\n        const result = [];\n        if (format !== 'sighash') {\n            result.push('event');\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        if (format !== 'sighash' && this.anonymous) {\n            result.push('anonymous');\n        }\n        return result.join(' ');\n    }\n    /**\n     * Return the topic hash for an event with `name` and `params`.\n     */\n    static getTopicHash(name, params) {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new EventFragment(_guard, name, params, false);\n        return fragment.topicHash;\n    }\n    /**\n     * Returns a new **EventFragment** for `obj`.\n     */\n    static from(obj) {\n        if (EventFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof obj === 'string') {\n            try {\n                return EventFragment.from(lex(obj));\n            }\n            catch (error) {\n                assertArgument(false, 'invalid event fragment', 'obj', obj);\n            }\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName('event', obj);\n            const inputs = consumeParams(obj, true);\n            const anonymous = !!consumeKeywords(obj, setify(['anonymous'])).has('anonymous');\n            consumeEoi(obj);\n            return new EventFragment(_guard, name, inputs, anonymous);\n        }\n        return new EventFragment(_guard, obj.name, obj.inputs ? obj.inputs.map((p) => ParamType.from(p, true)) : [], !!obj.anonymous);\n    }\n    /**\n     * Returns `true` and provides a type guard if `value` is an **EventFragment**.\n     */\n    static isFragment(value) {\n        return value && value[internal] === EventFragmentInternal;\n    }\n}\n/**\n * A Fragment which represents a constructor.\n *\n * @category Application Binary Interface\n */\nexport class ConstructorFragment extends Fragment {\n    /**\n     * Whether the constructor can receive an endowment.\n     */\n    payable;\n    /**\n     * The recommended gas limit for deployment or `null`.\n     */\n    gas;\n    /**\n     * @ignore\n     */\n    constructor(guard, type, inputs, payable, gas) {\n        super(guard, type, inputs);\n        Object.defineProperty(this, internal, { value: ConstructorFragmentInternal });\n        defineProperties(this, { payable, gas });\n    }\n    /**\n     * Returns a string representation of this constructor as `format`.\n     */\n    format(format) {\n        assert(format != null && format !== 'sighash', 'cannot format a constructor for sighash', 'UNSUPPORTED_OPERATION', { operation: 'format(sighash)' });\n        if (format === 'json') {\n            return JSON.stringify({\n                type: 'constructor',\n                stateMutability: this.payable ? 'payable' : 'undefined',\n                payable: this.payable,\n                gas: this.gas != null ? this.gas : undefined,\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format))),\n            });\n        }\n        const result = [`constructor${joinParams(format, this.inputs)}`];\n        if (this.payable) {\n            result.push('payable');\n        }\n        if (this.gas != null) {\n            result.push(`@${this.gas.toString()}`);\n        }\n        return result.join(' ');\n    }\n    /**\n     * Returns a new **ConstructorFragment** for `obj`.\n     */\n    static from(obj) {\n        if (ConstructorFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof obj === 'string') {\n            try {\n                return ConstructorFragment.from(lex(obj));\n            }\n            catch (error) {\n                assertArgument(false, 'invalid constuctor fragment', 'obj', obj);\n            }\n        }\n        else if (obj instanceof TokenString) {\n            consumeKeywords(obj, setify(['constructor']));\n            const inputs = consumeParams(obj);\n            const payable = !!consumeKeywords(obj, KwVisibDeploy).has('payable');\n            const gas = consumeGas(obj);\n            consumeEoi(obj);\n            return new ConstructorFragment(_guard, 'constructor', inputs, payable, gas);\n        }\n        return new ConstructorFragment(_guard, 'constructor', obj.inputs ? obj.inputs.map(ParamType.from) : [], !!obj.payable, obj.gas != null ? obj.gas : null);\n    }\n    /**\n     * Returns `true` and provides a type guard if `value` is a **ConstructorFragment**.\n     */\n    static isFragment(value) {\n        return value && value[internal] === ConstructorFragmentInternal;\n    }\n}\n/**\n * A Fragment which represents a method.\n *\n * @category Application Binary Interface\n */\nexport class FallbackFragment extends Fragment {\n    /**\n     * If the function can be sent value during invocation.\n     */\n    payable;\n    constructor(guard, inputs, payable) {\n        super(guard, 'fallback', inputs);\n        Object.defineProperty(this, internal, { value: FallbackFragmentInternal });\n        defineProperties(this, { payable });\n    }\n    /**\n     * Returns a string representation of this fallback as `format`.\n     */\n    format(format) {\n        const type = this.inputs.length === 0 ? 'receive' : 'fallback';\n        if (format === 'json') {\n            const stateMutability = this.payable ? 'payable' : 'nonpayable';\n            return JSON.stringify({ type, stateMutability });\n        }\n        return `${type}()${this.payable ? ' payable' : ''}`;\n    }\n    /**\n     * Returns a new **FallbackFragment** for `obj`.\n     */\n    static from(obj) {\n        if (FallbackFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof obj === 'string') {\n            try {\n                return FallbackFragment.from(lex(obj));\n            }\n            catch (error) {\n                assertArgument(false, 'invalid fallback fragment', 'obj', obj);\n            }\n        }\n        else if (obj instanceof TokenString) {\n            const errorObj = obj.toString();\n            const topIsValid = obj.peekKeyword(setify(['fallback', 'receive']));\n            assertArgument(topIsValid, 'type must be fallback or receive', 'obj', errorObj);\n            const type = obj.popKeyword(setify(['fallback', 'receive']));\n            // receive()\n            if (type === 'receive') {\n                const inputs = consumeParams(obj);\n                assertArgument(inputs.length === 0, `receive cannot have arguments`, 'obj.inputs', inputs);\n                consumeKeywords(obj, setify(['payable']));\n                consumeEoi(obj);\n                return new FallbackFragment(_guard, [], true);\n            }\n            // fallback() [payable]\n            // fallback(bytes) [payable] returns (bytes)\n            let inputs = consumeParams(obj);\n            if (inputs.length) {\n                assertArgument(inputs.length === 1 && inputs[0].type === 'bytes', 'invalid fallback inputs', 'obj.inputs', inputs.map((i) => i.format('minimal')).join(', '));\n            }\n            else {\n                inputs = [ParamType.from('bytes')];\n            }\n            const mutability = consumeMutability(obj);\n            assertArgument(mutability === 'nonpayable' || mutability === 'payable', 'fallback cannot be constants', 'obj.stateMutability', mutability);\n            if (consumeKeywords(obj, setify(['returns'])).has('returns')) {\n                const outputs = consumeParams(obj);\n                assertArgument(outputs.length === 1 && outputs[0].type === 'bytes', 'invalid fallback outputs', 'obj.outputs', outputs.map((i) => i.format('minimal')).join(', '));\n            }\n            consumeEoi(obj);\n            return new FallbackFragment(_guard, inputs, mutability === 'payable');\n        }\n        if (obj.type === 'receive') {\n            return new FallbackFragment(_guard, [], true);\n        }\n        if (obj.type === 'fallback') {\n            const inputs = [ParamType.from('bytes')];\n            const payable = obj.stateMutability === 'payable';\n            return new FallbackFragment(_guard, inputs, payable);\n        }\n        assertArgument(false, 'invalid fallback description', 'obj', obj);\n    }\n    /**\n     * Returns `true` and provides a type guard if `value` is a **FallbackFragment**.\n     */\n    static isFragment(value) {\n        return value && value[internal] === FallbackFragmentInternal;\n    }\n}\n/**\n * A Fragment which represents a method.\n *\n * @category Application Binary Interface\n */\nexport class FunctionFragment extends NamedFragment {\n    /**\n     * If the function is constant (e.g. `pure` or `view` functions).\n     */\n    constant;\n    /**\n     * The returned types for the result of calling this function.\n     */\n    outputs;\n    /**\n     * The state mutability (e.g. `payable`, `nonpayable`, `view` or `pure`)\n     */\n    stateMutability;\n    /**\n     * If the function can be sent value during invocation.\n     */\n    payable;\n    /**\n     * The recommended gas limit to send when calling this function.\n     */\n    gas;\n    /**\n     * @ignore\n     */\n    constructor(guard, name, stateMutability, inputs, outputs, gas) {\n        super(guard, 'function', name, inputs);\n        Object.defineProperty(this, internal, { value: FunctionFragmentInternal });\n        outputs = Object.freeze(outputs.slice());\n        const constant = stateMutability === 'view' || stateMutability === 'pure';\n        const payable = stateMutability === 'payable';\n        defineProperties(this, { constant, gas, outputs, payable, stateMutability });\n    }\n    /**\n     * The Function selector.\n     */\n    get selector() {\n        return id(this.format('sighash')).substring(0, 10);\n    }\n    /**\n     * Returns a string representation of this function as `format`.\n     */\n    format(format) {\n        if (format == null) {\n            format = 'sighash';\n        }\n        if (format === 'json') {\n            return JSON.stringify({\n                type: 'function',\n                name: this.name,\n                constant: this.constant,\n                stateMutability: this.stateMutability !== 'nonpayable' ? this.stateMutability : undefined,\n                payable: this.payable,\n                gas: this.gas != null ? this.gas : undefined,\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format))),\n                outputs: this.outputs.map((o) => JSON.parse(o.format(format))),\n            });\n        }\n        const result = [];\n        if (format !== 'sighash') {\n            result.push('function');\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        if (format !== 'sighash') {\n            if (this.stateMutability !== 'nonpayable') {\n                result.push(this.stateMutability);\n            }\n            if (this.outputs && this.outputs.length) {\n                result.push('returns');\n                result.push(joinParams(format, this.outputs));\n            }\n            if (this.gas != null) {\n                result.push(`@${this.gas.toString()}`);\n            }\n        }\n        return result.join(' ');\n    }\n    /**\n     * Return the selector for a function with `name` and `params`.\n     */\n    static getSelector(name, params) {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new FunctionFragment(_guard, name, 'view', params, [], null);\n        return fragment.selector;\n    }\n    /**\n     * Returns a new **FunctionFragment** for `obj`.\n     */\n    static from(obj) {\n        if (FunctionFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof obj === 'string') {\n            try {\n                return FunctionFragment.from(lex(obj));\n            }\n            catch (error) {\n                assertArgument(false, 'invalid function fragment', 'obj', obj);\n            }\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName('function', obj);\n            const inputs = consumeParams(obj);\n            const mutability = consumeMutability(obj);\n            let outputs = [];\n            if (consumeKeywords(obj, setify(['returns'])).has('returns')) {\n                outputs = consumeParams(obj);\n            }\n            const gas = consumeGas(obj);\n            consumeEoi(obj);\n            return new FunctionFragment(_guard, name, mutability, inputs, outputs, gas);\n        }\n        let stateMutability = obj.stateMutability;\n        // Use legacy Solidity ABI logic if stateMutability is missing\n        if (stateMutability == null) {\n            stateMutability = 'payable';\n            if (typeof obj.constant === 'boolean') {\n                stateMutability = 'view';\n                if (!obj.constant) {\n                    stateMutability = 'payable';\n                    if (typeof obj.payable === 'boolean' && !obj.payable) {\n                        stateMutability = 'nonpayable';\n                    }\n                }\n            }\n            else if (typeof obj.payable === 'boolean' && !obj.payable) {\n                stateMutability = 'nonpayable';\n            }\n        }\n        // @TODO: verifyState for stateMutability (e.g. throw if\n        //        payable: false but stateMutability is \"nonpayable\")\n        return new FunctionFragment(_guard, obj.name, stateMutability, obj.inputs ? obj.inputs.map(ParamType.from) : [], obj.outputs ? obj.outputs.map(ParamType.from) : [], obj.gas != null ? obj.gas : null);\n    }\n    /**\n     * Returns `true` and provides a type guard if `value` is a **FunctionFragment**.\n     */\n    static isFragment(value) {\n        return value && value[internal] === FunctionFragmentInternal;\n    }\n}\n/**\n * A Fragment which represents a structure.\n *\n * @category Application Binary Interface\n */\nexport class StructFragment extends NamedFragment {\n    /**\n     * @ignore\n     */\n    constructor(guard, name, inputs) {\n        super(guard, 'struct', name, inputs);\n        Object.defineProperty(this, internal, { value: StructFragmentInternal });\n    }\n    /**\n     * Returns a string representation of this struct as `format`.\n     */\n    format() {\n        throw new Error('@TODO');\n    }\n    /**\n     * Returns a new **StructFragment** for `obj`.\n     */\n    static from(obj) {\n        if (typeof obj === 'string') {\n            try {\n                return StructFragment.from(lex(obj));\n            }\n            catch (error) {\n                assertArgument(false, 'invalid struct fragment', 'obj', obj);\n            }\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName('struct', obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n            return new StructFragment(_guard, name, inputs);\n        }\n        return new StructFragment(_guard, obj.name, obj.inputs ? obj.inputs.map(ParamType.from) : []);\n    }\n    // @TODO: fix this return type\n    /**\n     * Returns `true` and provides a type guard if `value` is a **StructFragment**.\n     */\n    static isFragment(value) {\n        return value && value[internal] === StructFragmentInternal;\n    }\n}\n//# sourceMappingURL=fragments.js.map","/**\n * When sending values to or receiving values from a [Contract](../classes/Contract), the data is generally encoded\n * using the [ABI\n * Specification](https://docs.soliditylang.org/en/v0.8.19/abi-spec.html#formal-specification-of-the-encoding).\n *\n * The AbiCoder provides a utility to encode values to ABI data and decode values from ABI data.\n *\n * Most of the time, developers should favor the [Contract](../classes/Contract) class, which further abstracts the\n * finer details of ABI data.\n *\n * @category Application Binary Interface\n */\nimport { assertArgumentCount, assertArgument } from '../utils/index.js';\nimport { Reader, Writer } from './coders/abstract-coder.js';\nimport { AddressCoder } from './coders/address.js';\nimport { ArrayCoder } from './coders/array.js';\nimport { BooleanCoder } from './coders/boolean.js';\nimport { BytesCoder } from './coders/bytes.js';\nimport { FixedBytesCoder } from './coders/fixed-bytes.js';\nimport { NullCoder } from './coders/null.js';\nimport { NumberCoder } from './coders/number.js';\nimport { StringCoder } from './coders/string.js';\nimport { TupleCoder } from './coders/tuple.js';\nimport { ParamType } from './fragments.js';\nimport { getAddress } from '../address/index.js';\nimport { getBytes, hexlify, makeError } from '../utils/index.js';\n// https://docs.soliditylang.org/en/v0.8.17/control-structures.html\nconst PanicReasons = new Map();\nPanicReasons.set(0x00, 'GENERIC_PANIC');\nPanicReasons.set(0x01, 'ASSERT_FALSE');\nPanicReasons.set(0x11, 'OVERFLOW');\nPanicReasons.set(0x12, 'DIVIDE_BY_ZERO');\nPanicReasons.set(0x21, 'ENUM_RANGE_ERROR');\nPanicReasons.set(0x22, 'BAD_STORAGE_DATA');\nPanicReasons.set(0x31, 'STACK_UNDERFLOW');\nPanicReasons.set(0x32, 'ARRAY_RANGE_ERROR');\nPanicReasons.set(0x41, 'OUT_OF_MEMORY');\nPanicReasons.set(0x51, 'UNINITIALIZED_FUNCTION_CALL');\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nlet defaultCoder = null;\nlet defaultMaxInflation = 1024;\nfunction getBuiltinCallException(action, tx, data, abiCoder) {\n    let message = 'missing revert data';\n    let reason = null;\n    const invocation = null;\n    let revert = null;\n    if (data) {\n        message = 'execution reverted';\n        const bytes = getBytes(data);\n        data = hexlify(data);\n        if (bytes.length === 0) {\n            message += ' (no data present; likely require(false) occurred';\n            reason = 'require(false)';\n        }\n        else if (bytes.length % 32 !== 4) {\n            message += ' (could not decode reason; invalid data length)';\n        }\n        else if (hexlify(bytes.slice(0, 4)) === '0x08c379a0') {\n            // Error(string)\n            try {\n                reason = abiCoder.decode(['string'], bytes.slice(4))[0];\n                revert = {\n                    signature: 'Error(string)',\n                    name: 'Error',\n                    args: [reason],\n                };\n                message += `: ${JSON.stringify(reason)}`;\n            }\n            catch (error) {\n                message += ' (could not decode reason; invalid string data)';\n            }\n        }\n        else if (hexlify(bytes.slice(0, 4)) === '0x4e487b71') {\n            // Panic(uint256)\n            try {\n                const code = Number(abiCoder.decode(['uint256'], bytes.slice(4))[0]);\n                revert = {\n                    signature: 'Panic(uint256)',\n                    name: 'Panic',\n                    args: [code],\n                };\n                reason = `Panic due to ${PanicReasons.get(code) || 'UNKNOWN'}(${code})`;\n                message += `: ${reason}`;\n            }\n            catch (error) {\n                message += ' (could not decode panic code)';\n            }\n        }\n        else {\n            message += ' (unknown custom error)';\n        }\n    }\n    const transaction = {\n        to: tx.to ? getAddress(tx.to) : null,\n        data: tx.data || '0x',\n    };\n    if (tx.from) {\n        transaction.from = getAddress(tx.from);\n    }\n    return makeError(message, 'CALL_EXCEPTION', {\n        action,\n        data,\n        reason,\n        transaction,\n        invocation,\n        revert,\n    });\n}\n/**\n * The **AbiCoder** is a low-level class responsible for encoding JavaScript values into binary data and decoding binary\n * data into JavaScript values.\n *\n * @category Application Binary Interface\n */\nexport class AbiCoder {\n    #getCoder(param) {\n        if (param.isArray()) {\n            return new ArrayCoder(this.#getCoder(param.arrayChildren), param.arrayLength, param.name);\n        }\n        if (param.isTuple()) {\n            return new TupleCoder(param.components.map((c) => this.#getCoder(c)), param.name);\n        }\n        switch (param.baseType) {\n            case 'address':\n                return new AddressCoder(param.name);\n            case 'bool':\n                return new BooleanCoder(param.name);\n            case 'string':\n                return new StringCoder(param.name);\n            case 'bytes':\n                return new BytesCoder(param.name);\n            case '':\n                return new NullCoder(param.name);\n        }\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            const size = parseInt(match[2] || '256');\n            assertArgument(size !== 0 && size <= 256 && size % 8 === 0, 'invalid ' + match[1] + ' bit length', 'param', param);\n            return new NumberCoder(size / 8, match[1] === 'int', param.name);\n        }\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            const size = parseInt(match[1]);\n            assertArgument(size !== 0 && size <= 32, 'invalid bytes length', 'param', param);\n            return new FixedBytesCoder(size, param.name);\n        }\n        assertArgument(false, 'invalid type', 'type', param.type);\n    }\n    /**\n     * Get the default values for the given types. For example, a `uint` is by default `0` and `bool` is by default\n     * `false`.\n     *\n     * @param {(string | ParamType)[]} types - Array of parameter types to get default values for.\n     * @returns {Result} The default values corresponding to the given types.\n     */\n    getDefaultValue(types) {\n        const coders = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, '_');\n        return coder.defaultValue();\n    }\n    /**\n     * Encode the values as the specified types into ABI data.\n     *\n     * @param {(string | ParamType)[]} types - Array of parameter types.\n     * @param {any[]} values - Array of values to encode.\n     * @returns {string} The encoded data in hexadecimal format.\n     */\n    encode(types, values) {\n        assertArgumentCount(values.length, types.length, 'types/values length mismatch');\n        const coders = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, '_');\n        const writer = new Writer();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n    /**\n     * Decode the ABI data as the types into values.\n     *\n     * If loose decoding is enabled, then strict padding is not enforced. Some older versions of Solidity incorrectly\n     * padded event data emitted from `external` functions.\n     *\n     * @param {(string | ParamType)[]} types - Array of parameter types.\n     * @param {BytesLike} data - The ABI data to decode.\n     * @param {boolean} [loose=false] - Enable loose decoding. Default is `false`\n     * @returns {Result} The decoded values.\n     */\n    decode(types, data, loose) {\n        const coders = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, '_');\n        return coder.decode(new Reader(data, loose, defaultMaxInflation));\n    }\n    /**\n     * Set the default maximum inflation factor.\n     *\n     * @ignore\n     * @param {number} value - The new inflation factor.\n     */\n    static _setDefaultMaxInflation(value) {\n        assertArgument(typeof value === 'number' && Number.isInteger(value), 'invalid defaultMaxInflation factor', 'value', value);\n        defaultMaxInflation = value;\n    }\n    /**\n     * Returns the shared singleton instance of a default {@link AbiCoder | **AbiCoder**}.\n     *\n     * On the first call, the instance is created internally.\n     *\n     * @returns {AbiCoder} The default ABI coder instance.\n     */\n    static defaultAbiCoder() {\n        if (defaultCoder == null) {\n            defaultCoder = new AbiCoder();\n        }\n        return defaultCoder;\n    }\n    /**\n     * Returns a quais-compatible {@link CallExceptionError | **CallExceptionError**} for the given result data.\n     *\n     * @param {CallExceptionAction} action - The action that triggered the exception.\n     * @param {Object} tx - The transaction information.\n     * @param {BytesLike | null} data - The data associated with the call exception.\n     * @returns {CallExceptionError} The corresponding call exception error.\n     */\n    static getBuiltinCallException(action, tx, data) {\n        return getBuiltinCallException(action, tx, data, AbiCoder.defaultAbiCoder());\n    }\n}\n//# sourceMappingURL=abi-coder.js.map","/**\n * The Interface class is a low-level class that accepts an ABI and provides all the necessary functionality to encode\n * and decode paramaters to and results from methods, events and errors.\n *\n * It also provides several convenience methods to automatically search and find matching transactions and events to\n * parse them.\n *\n * @category Application Binary Interface\n */\nimport { keccak256 } from '../crypto/index.js';\nimport { id } from '../hash/index.js';\nimport { concat, dataSlice, getBigInt, getBytes, getBytesCopy, hexlify, zeroPadBytes, zeroPadValue, isHexString, defineProperties, assertArgument, toBeHex, assert, } from '../utils/index.js';\nimport { AbiCoder } from './abi-coder.js';\nimport { checkResultErrors, Result } from './coders/abstract-coder.js';\nimport { ConstructorFragment, ErrorFragment, EventFragment, Fragment, FunctionFragment, ParamType, } from './fragments.js';\nimport { Typed } from './typed.js';\nexport { checkResultErrors, Result };\n/**\n * When using the {@link Interface.parseLog | **Interface.parseLog**} to automatically match a Log to its event for\n * parsing, a **LogDescription** is returned.\n *\n * @category Application Binary Interface\n */\nexport class LogDescription {\n    /**\n     * The matching fragment for the `topic0`.\n     */\n    fragment;\n    /**\n     * The name of the Event.\n     */\n    name;\n    /**\n     * The full Event signature.\n     */\n    signature;\n    /**\n     * The topic hash for the Event.\n     */\n    topic;\n    /**\n     * The arguments passed into the Event with `emit`.\n     */\n    args;\n    /**\n     * @ignore\n     */\n    constructor(fragment, topic, args) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties(this, {\n            fragment,\n            name,\n            signature,\n            topic,\n            args,\n        });\n    }\n}\n/**\n * When using the {@link Interface.parseTransaction | **Interface.parseTransaction**} to automatically match a\n * transaction data to its function for parsing, a **TransactionDescription** is returned.\n *\n * @category Application Binary Interface\n */\nexport class TransactionDescription {\n    /**\n     * The matching fragment from the transaction `data`.\n     */\n    fragment;\n    /**\n     * The name of the Function from the transaction `data`.\n     */\n    name;\n    /**\n     * The arguments passed to the Function from the transaction `data`.\n     */\n    args;\n    /**\n     * The full Function signature from the transaction `data`.\n     */\n    signature;\n    /**\n     * The selector for the Function from the transaction `data`.\n     */\n    selector;\n    /**\n     * The `value` (in wei) from the transaction.\n     */\n    value;\n    /**\n     * @ignore\n     */\n    constructor(fragment, selector, args, value) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties(this, {\n            fragment,\n            name,\n            args,\n            signature,\n            selector,\n            value,\n        });\n    }\n}\n/**\n * When using the {@link Interface.parseError | **Interface.parseError**} to automatically match an error for a call\n * result for parsing, an **ErrorDescription** is returned.\n *\n * @category Application Binary Interface\n */\nexport class ErrorDescription {\n    /**\n     * The matching fragment.\n     */\n    fragment;\n    /**\n     * The name of the Error.\n     */\n    name;\n    /**\n     * The arguments passed to the Error with `revert`.\n     */\n    args;\n    /**\n     * The full Error signature.\n     */\n    signature;\n    /**\n     * The selector for the Error.\n     */\n    selector;\n    /**\n     * @ignore\n     */\n    constructor(fragment, selector, args) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties(this, {\n            fragment,\n            name,\n            args,\n            signature,\n            selector,\n        });\n    }\n}\n/**\n * An **Indexed** is used as a value when a value that does not fit within a topic (i.e. not a fixed-length, 32-byte\n * type). It is the `keccak256` of the value, and used for types such as arrays, tuples, bytes and strings.\n *\n * @category Application Binary Interface\n */\nexport class Indexed {\n    /**\n     * The `keccak256` of the value logged.\n     */\n    hash;\n    /**\n     * @ignore\n     */\n    _isIndexed;\n    /**\n     * Check if a value is an **Indexed** This provides a Type Guard for property access.\n     *\n     * @param value - The value to check.\n     * @returns `true` if the value is an **Indexed**.\n     */\n    static isIndexed(value) {\n        return !!(value && value._isIndexed);\n    }\n    /**\n     * @ignore\n     */\n    constructor(hash) {\n        defineProperties(this, { hash, _isIndexed: true });\n    }\n}\n// https://docs.soliditylang.org/en/v0.8.13/control-structures.html?highlight=panic#panic-via-assert-and-error-via-require\nconst PanicReasons = {\n    '0': 'generic panic',\n    '1': 'assert(false)',\n    '17': 'arithmetic overflow',\n    '18': 'division or modulo by zero',\n    '33': 'enum overflow',\n    '34': 'invalid encoded storage byte array accessed',\n    '49': 'out-of-bounds array access; popping on an empty array',\n    '50': 'out-of-bounds access of an array or bytesN',\n    '65': 'out of memory',\n    '81': 'uninitialized function',\n};\nconst BuiltinErrors = {\n    '0x08c379a0': {\n        signature: 'Error(string)',\n        name: 'Error',\n        inputs: ['string'],\n        reason: (message) => {\n            return `reverted with reason string ${JSON.stringify(message)}`;\n        },\n    },\n    '0x4e487b71': {\n        signature: 'Panic(uint256)',\n        name: 'Panic',\n        inputs: ['uint256'],\n        reason: (code) => {\n            let reason = 'unknown panic code';\n            if (code >= 0 && code <= 0xff && PanicReasons[code.toString()]) {\n                reason = PanicReasons[code.toString()];\n            }\n            return `reverted with panic code 0x${code.toString(16)} (${reason})`;\n        },\n    },\n};\n/**\n * An Interface abstracts many of the low-level details for encoding and decoding the data on the blockchain.\n *\n * An ABI provides information on how to encode data to send to a Contract, how to decode the results and events and how\n * to interpret revert errors.\n *\n * The ABI can be specified by {@link InterfaceAbi | any supported format}.\n *\n * @category Application Binary Interface\n */\nexport class Interface {\n    /**\n     * All the Contract ABI members (i.e. methods, events, errors, etc).\n     */\n    fragments;\n    /**\n     * The Contract constructor.\n     */\n    deploy;\n    /**\n     * The Fallback method, if any.\n     */\n    fallback;\n    /**\n     * If receiving ether is supported.\n     */\n    receive;\n    #errors;\n    #events;\n    #functions;\n    // #structs: Map<string, StructFragment>;\n    #abiCoder;\n    /**\n     * Create a new Interface for the fragments.\n     *\n     * @param {InterfaceAbi} fragments - The ABI fragments.\n     */\n    constructor(fragments) {\n        let abi = [];\n        if (typeof fragments === 'string') {\n            abi = JSON.parse(fragments);\n        }\n        else {\n            abi = fragments;\n        }\n        this.#functions = new Map();\n        this.#errors = new Map();\n        this.#events = new Map();\n        const frags = [];\n        for (const a of abi) {\n            try {\n                frags.push(Fragment.from(a));\n            }\n            catch (error) {\n                console.log('Error parsing ABI fragment', error);\n            }\n        }\n        defineProperties(this, {\n            fragments: Object.freeze(frags),\n        });\n        let fallback = null;\n        let receive = false;\n        this.#abiCoder = this.getAbiCoder();\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment, index) => {\n            let bucket;\n            switch (fragment.type) {\n                case 'constructor':\n                    if (this.deploy) {\n                        console.log('duplicate definition - constructor');\n                        return;\n                    }\n                    defineProperties(this, { deploy: fragment });\n                    return;\n                case 'fallback':\n                    if (fragment.inputs.length === 0) {\n                        receive = true;\n                    }\n                    else {\n                        assertArgument(!fallback || fragment.payable !== fallback.payable, 'conflicting fallback fragments', `fragments[${index}]`, fragment);\n                        fallback = fragment;\n                        receive = fallback.payable;\n                    }\n                    return;\n                case 'function':\n                    bucket = this.#functions;\n                    break;\n                case 'event':\n                    bucket = this.#events;\n                    break;\n                case 'error':\n                    bucket = this.#errors;\n                    break;\n                default:\n                    return;\n            }\n            // Two identical entries; ignore it\n            const signature = fragment.format();\n            if (bucket.has(signature)) {\n                return;\n            }\n            bucket.set(signature, fragment);\n        });\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineProperties(this, {\n                deploy: ConstructorFragment.from('constructor()'),\n            });\n        }\n        defineProperties(this, { fallback, receive });\n    }\n    /**\n     * Returns the entire Human-Readable ABI, as an array of signatures, optionally as `minimal` strings, which removes\n     * parameter names and unneceesary spaces.\n     */\n    format(minimal) {\n        const format = minimal ? 'minimal' : 'full';\n        const abi = this.fragments.map((f) => f.format(format));\n        return abi;\n    }\n    /**\n     * Return the JSON-encoded ABI. This is the format Solidiy returns.\n     */\n    formatJson() {\n        const abi = this.fragments.map((f) => f.format('json'));\n        // We need to re-bundle the JSON fragments a bit\n        return JSON.stringify(abi.map((j) => JSON.parse(j)));\n    }\n    /**\n     * The ABI coder that will be used to encode and decode binary data.\n     */\n    getAbiCoder() {\n        return AbiCoder.defaultAbiCoder();\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    #getFunction(key, values, forceUnique) {\n        // Selector\n        if (isHexString(key)) {\n            const selector = key.toLowerCase();\n            for (const fragment of this.#functions.values()) {\n                if (selector === fragment.selector) {\n                    return fragment;\n                }\n            }\n            return null;\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf('(') === -1) {\n            const matching = [];\n            for (const [name, fragment] of this.#functions) {\n                if (name.split('(' /* fix:) */)[0] === key) {\n                    matching.push(fragment);\n                }\n            }\n            if (values) {\n                const lastValue = values.length > 0 ? values[values.length - 1] : null;\n                let valueLength = values.length;\n                let allowOptions = true;\n                if (Typed.isTyped(lastValue) && lastValue.type === 'overrides') {\n                    allowOptions = false;\n                    valueLength--;\n                }\n                // Remove all matches that don't have a compatible length. The args\n                // may contain an overrides, so the match may have n or n - 1 parameters\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs.length;\n                    if (inputs !== valueLength && (!allowOptions || inputs !== valueLength - 1)) {\n                        matching.splice(i, 1);\n                    }\n                }\n                // Remove all matches that don't match the Typed signature\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs;\n                    for (let j = 0; j < values.length; j++) {\n                        // Not a typed value\n                        if (!Typed.isTyped(values[j])) {\n                            continue;\n                        }\n                        // We are past the inputs\n                        if (j >= inputs.length) {\n                            if (values[j].type === 'overrides') {\n                                continue;\n                            }\n                            matching.splice(i, 1);\n                            break;\n                        }\n                        // Make sure the value type matches the input type\n                        if (values[j].type !== inputs[j].baseType) {\n                            matching.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n            // We found a single matching signature with an overrides, but the\n            // last value is something that cannot possibly be an options\n            if (matching.length === 1 && values && values.length !== matching[0].inputs.length) {\n                const lastArg = values[values.length - 1];\n                if (lastArg == null || Array.isArray(lastArg) || typeof lastArg !== 'object') {\n                    matching.splice(0, 1);\n                }\n            }\n            if (matching.length === 0) {\n                return null;\n            }\n            if (matching.length > 1 && forceUnique) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(', ');\n                assertArgument(false, `ambiguous function description (i.e. matches ${matchStr})`, 'key', key);\n            }\n            return matching[0];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.#functions.get(FunctionFragment.from(key).format());\n        if (result) {\n            return result;\n        }\n        return null;\n    }\n    /**\n     * Get the function name for `key`, which may be a function selector, function name or function signature that\n     * belongs to the ABI.\n     */\n    getFunctionName(key) {\n        const fragment = this.#getFunction(key, null, false);\n        assertArgument(fragment, 'no matching function', 'key', key);\n        return fragment.name;\n    }\n    /**\n     * Returns true if `key` (a function selector, function name or function signature) is present in the ABI.\n     *\n     * In the case of a function name, the name may be ambiguous, so accessing the\n     * {@link FunctionFragment | **FunctionFragment**} may require refinement.\n     */\n    hasFunction(key) {\n        return !!this.#getFunction(key, null, false);\n    }\n    /**\n     * Get the {@link FunctionFragment | **FunctionFragment**} for `key`, which may be a function selector, function name\n     * or function signature that belongs to the ABI.\n     *\n     * If `values` is provided, it will use the Typed API to handle ambiguous cases where multiple functions match by\n     * name.\n     *\n     * If the `key` and `values` do not refine to a single function in the ABI, this will throw.\n     */\n    getFunction(key, values) {\n        return this.#getFunction(key, values || null, true);\n    }\n    /**\n     * Iterate over all functions, calling `callback`, sorted by their name.\n     */\n    forEachFunction(callback) {\n        const names = Array.from(this.#functions.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(this.#functions.get(name), i);\n        }\n    }\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    #getEvent(key, values, forceUnique) {\n        // EventTopic\n        if (isHexString(key)) {\n            const eventTopic = key.toLowerCase();\n            for (const fragment of this.#events.values()) {\n                if (eventTopic === fragment.topicHash) {\n                    return fragment;\n                }\n            }\n            return null;\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf('(') === -1) {\n            const matching = [];\n            for (const [name, fragment] of this.#events) {\n                if (name.split('(' /* fix:) */)[0] === key) {\n                    matching.push(fragment);\n                }\n            }\n            if (values) {\n                // Remove all matches that don't have a compatible length.\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    if (matching[i].inputs.length < values.length) {\n                        matching.splice(i, 1);\n                    }\n                }\n                // Remove all matches that don't match the Typed signature\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs;\n                    for (let j = 0; j < values.length; j++) {\n                        // Not a typed value\n                        if (!Typed.isTyped(values[j])) {\n                            continue;\n                        }\n                        // Make sure the value type matches the input type\n                        if (values[j].type !== inputs[j].baseType) {\n                            matching.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n            if (matching.length === 0) {\n                return null;\n            }\n            if (matching.length > 1 && forceUnique) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(', ');\n                assertArgument(false, `ambiguous event description (i.e. matches ${matchStr})`, 'key', key);\n            }\n            return matching[0];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.#events.get(EventFragment.from(key).format());\n        if (result) {\n            return result;\n        }\n        return null;\n    }\n    /**\n     * Get the event name for `key`, which may be a topic hash, event name or event signature that belongs to the ABI.\n     */\n    getEventName(key) {\n        const fragment = this.#getEvent(key, null, false);\n        assertArgument(fragment, 'no matching event', 'key', key);\n        return fragment.name;\n    }\n    /**\n     * Returns true if `key` (an event topic hash, event name or event signature) is present in the ABI.\n     *\n     * In the case of an event name, the name may be ambiguous, so accessing the\n     * {@link EventFragment | **EventFragment**} may require refinement.\n     */\n    hasEvent(key) {\n        return !!this.#getEvent(key, null, false);\n    }\n    /**\n     * Get the {@link EventFragment | **EventFragment**} for `key`, which may be a topic hash, event name or event\n     * signature that belongs to the ABI.\n     *\n     * If `values` is provided, it will use the Typed API to handle ambiguous cases where multiple events match by name.\n     *\n     * If the `key` and `values` do not refine to a single event in the ABI, this will throw.\n     */\n    getEvent(key, values) {\n        return this.#getEvent(key, values || null, true);\n    }\n    /**\n     * Iterate over all events, calling `callback`, sorted by their name.\n     */\n    forEachEvent(callback) {\n        const names = Array.from(this.#events.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(this.#events.get(name), i);\n        }\n    }\n    /**\n     * Get the {@link ErrorFragment | **ErroFragment**} for `key`, which may be an error selector, error name or error\n     * signature that belongs to the ABI.\n     *\n     * If `values` is provided, it will use the Typed API to handle ambiguous cases where multiple errors match by name.\n     *\n     * If the `key` and `values` do not refine to a single error in the ABI, this will throw.\n     */\n    // TODO: `values` is not used, remove?\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    getError(key, values) {\n        if (isHexString(key)) {\n            const selector = key.toLowerCase();\n            if (BuiltinErrors[selector]) {\n                return ErrorFragment.from(BuiltinErrors[selector].signature);\n            }\n            for (const fragment of this.#errors.values()) {\n                if (selector === fragment.selector) {\n                    return fragment;\n                }\n            }\n            return null;\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf('(') === -1) {\n            const matching = [];\n            for (const [name, fragment] of this.#errors) {\n                if (name.split('(' /* fix:) */)[0] === key) {\n                    matching.push(fragment);\n                }\n            }\n            if (matching.length === 0) {\n                if (key === 'Error') {\n                    return ErrorFragment.from('error Error(string)');\n                }\n                if (key === 'Panic') {\n                    return ErrorFragment.from('error Panic(uint256)');\n                }\n                return null;\n            }\n            else if (matching.length > 1) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(', ');\n                assertArgument(false, `ambiguous error description (i.e. ${matchStr})`, 'name', key);\n            }\n            return matching[0];\n        }\n        // Normalize the signature and lookup the function\n        key = ErrorFragment.from(key).format();\n        if (key === 'Error(string)') {\n            return ErrorFragment.from('error Error(string)');\n        }\n        if (key === 'Panic(uint256)') {\n            return ErrorFragment.from('error Panic(uint256)');\n        }\n        const result = this.#errors.get(key);\n        if (result) {\n            return result;\n        }\n        return null;\n    }\n    /**\n     * Iterate over all errors, calling `callback`, sorted by their name.\n     */\n    forEachError(callback) {\n        const names = Array.from(this.#errors.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(this.#errors.get(name), i);\n        }\n    }\n    /**\n     * @ignore\n     */\n    _decodeParams(params, data) {\n        return this.#abiCoder.decode(params, data);\n    }\n    /**\n     * @ignore\n     */\n    _encodeParams(params, values) {\n        return this.#abiCoder.encode(params, values);\n    }\n    /**\n     * Encodes a `tx.data` object for deploying the Contract with the `values` as the constructor arguments.\n     */\n    encodeDeploy(values) {\n        return this._encodeParams(this.deploy.inputs, values || []);\n    }\n    /**\n     * Decodes the result `data` (e.g. from an `quai_call`) for the specified error (see {@link getError | **getError**}\n     * for valid values for `key`).\n     *\n     * Most developers should prefer the {@link parseCallResult | **parseCallResult**} method instead, which will\n     * automatically detect a `CALL_EXCEPTION` and throw the corresponding error.\n     */\n    decodeErrorResult(fragment, data) {\n        if (typeof fragment === 'string') {\n            const f = this.getError(fragment);\n            assertArgument(f, 'unknown error', 'fragment', fragment);\n            fragment = f;\n        }\n        assertArgument(dataSlice(data, 0, 4) === fragment.selector, `data signature does not match error ${fragment.name}.`, 'data', data);\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n    /**\n     * Encodes the transaction revert data for a call result that reverted from the the Contract with the sepcified\n     * `error` (see {@link getError | **getError**} for valid values for `fragment`) with the `values`.\n     *\n     * This is generally not used by most developers, unless trying to mock a result from a Contract.\n     */\n    encodeErrorResult(fragment, values) {\n        if (typeof fragment === 'string') {\n            const f = this.getError(fragment);\n            assertArgument(f, 'unknown error', 'fragment', fragment);\n            fragment = f;\n        }\n        return concat([fragment.selector, this._encodeParams(fragment.inputs, values || [])]);\n    }\n    /**\n     * Decodes the `data` from a transaction `tx.data` for the function specified (see\n     * {@link getFunction | **getFunction**} for valid values for `fragment`).\n     *\n     * Most developers should prefer the {@link parseTransaction | **parseTransaction**} method instead, which will\n     * automatically detect the fragment.\n     */\n    decodeFunctionData(fragment, data) {\n        if (typeof fragment === 'string') {\n            const f = this.getFunction(fragment);\n            assertArgument(f, 'unknown function', 'fragment', fragment);\n            fragment = f;\n        }\n        assertArgument(dataSlice(data, 0, 4) === fragment.selector, `data signature does not match function ${fragment.name}.`, 'data', data);\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n    /**\n     * Encodes the `tx.data` for a transaction that calls the function specified (see\n     * {@link getFunction | **getFunction**} for valid values for `fragment`) with the `values`.\n     */\n    encodeFunctionData(fragment, values) {\n        if (typeof fragment === 'string') {\n            const f = this.getFunction(fragment);\n            assertArgument(f, 'unknown function', 'fragment', fragment);\n            fragment = f;\n        }\n        return concat([fragment.selector, this._encodeParams(fragment.inputs, values || [])]);\n    }\n    /**\n     * Decodes the result `data` (e.g. from an `quai_call`) for the specified function (see\n     * {@link getFunction | **getFunction**} for valid values for `key`).\n     *\n     * Most developers should prefer the {@link parseCallResult | **parseCallResult**} method instead, which will\n     * automatically detect a `CALL_EXCEPTION` and throw the corresponding error.\n     */\n    decodeFunctionResult(fragment, data) {\n        if (typeof fragment === 'string') {\n            const f = this.getFunction(fragment);\n            assertArgument(f, 'unknown function', 'fragment', fragment);\n            fragment = f;\n        }\n        let message = 'invalid length for result data';\n        const bytes = getBytesCopy(data);\n        if (bytes.length % 32 === 0) {\n            try {\n                return this.#abiCoder.decode(fragment.outputs, bytes);\n            }\n            catch (error) {\n                message = 'could not decode result data';\n            }\n        }\n        // Call returned data with no error, but the data is junk\n        assert(false, message, 'BAD_DATA', {\n            value: hexlify(bytes),\n            info: { method: fragment.name, signature: fragment.format() },\n        });\n    }\n    makeError(_data, tx) {\n        const data = getBytes(_data, 'data');\n        const error = AbiCoder.getBuiltinCallException('call', tx, data);\n        // Not a built-in error; try finding a custom error\n        const customPrefix = 'execution reverted (unknown custom error)';\n        if (error.message.startsWith(customPrefix)) {\n            const selector = hexlify(data.slice(0, 4));\n            const ef = this.getError(selector);\n            if (ef) {\n                try {\n                    const args = this.#abiCoder.decode(ef.inputs, data.slice(4));\n                    error.revert = {\n                        name: ef.name,\n                        signature: ef.format(),\n                        args,\n                    };\n                    error.reason = error.revert.signature;\n                    error.message = `execution reverted: ${error.reason}`;\n                }\n                catch (e) {\n                    error.message = `execution reverted (coult not decode custom error)`;\n                }\n            }\n        }\n        // Add the invocation, if available\n        const parsed = this.parseTransaction(tx);\n        if (parsed) {\n            error.invocation = {\n                method: parsed.name,\n                signature: parsed.signature,\n                args: parsed.args,\n            };\n        }\n        return error;\n    }\n    /**\n     * Encodes the result data (e.g. from an `quai_call`) for the specified function (see\n     * {@link getFunction | **getFunction**} for valid values for `fragment`) with `values`.\n     *\n     * This is generally not used by most developers, unless trying to mock a result from a Contract.\n     */\n    encodeFunctionResult(fragment, values) {\n        if (typeof fragment === 'string') {\n            const f = this.getFunction(fragment);\n            assertArgument(f, 'unknown function', 'fragment', fragment);\n            fragment = f;\n        }\n        return hexlify(this.#abiCoder.encode(fragment.outputs, values || []));\n    }\n    // Create the filter for the event with search criteria (e.g. for quai_filterLog)\n    encodeFilterTopics(fragment, values) {\n        if (typeof fragment === 'string') {\n            const f = this.getEvent(fragment);\n            assertArgument(f, 'unknown event', 'eventFragment', fragment);\n            fragment = f;\n        }\n        assert(values.length <= fragment.inputs.length, `too many arguments for ${fragment.format()}`, 'UNEXPECTED_ARGUMENT', { count: values.length, expectedCount: fragment.inputs.length });\n        const topics = [];\n        if (!fragment.anonymous) {\n            topics.push(fragment.topicHash);\n        }\n        // @TODO: Use the coders for this; to properly support tuples, etc.\n        const encodeTopic = (param, value) => {\n            if (param.type === 'string') {\n                return id(value);\n            }\n            else if (param.type === 'bytes') {\n                return keccak256(hexlify(value));\n            }\n            if (param.type === 'bool' && typeof value === 'boolean') {\n                value = value ? '0x01' : '0x00';\n            }\n            else if (param.type.match(/^u?int/)) {\n                value = toBeHex(value); // @TODO: Should this toTwos??\n            }\n            else if (param.type.match(/^bytes/)) {\n                value = zeroPadBytes(value, 32);\n            }\n            else if (param.type === 'address') {\n                // Check addresses are valid\n                this.#abiCoder.encode(['address'], [value]);\n            }\n            return zeroPadValue(hexlify(value), 32);\n        };\n        values.forEach((value, index) => {\n            const param = fragment.inputs[index];\n            if (!param.indexed) {\n                assertArgument(value == null, 'cannot filter non-indexed parameters; must be null', 'contract.' + param.name, value);\n                return;\n            }\n            if (value == null) {\n                topics.push(null);\n            }\n            else if (param.baseType === 'array' || param.baseType === 'tuple') {\n                assertArgument(false, 'filtering with tuples or arrays not supported', 'contract.' + param.name, value);\n            }\n            else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            }\n            else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    }\n    encodeEventLog(fragment, values) {\n        if (typeof fragment === 'string') {\n            const f = this.getEvent(fragment);\n            assertArgument(f, 'unknown event', 'eventFragment', fragment);\n            fragment = f;\n        }\n        const topics = [];\n        const dataTypes = [];\n        const dataValues = [];\n        if (!fragment.anonymous) {\n            topics.push(fragment.topicHash);\n        }\n        assertArgument(values.length === fragment.inputs.length, 'event arguments/values mismatch', 'values', values);\n        fragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === 'string') {\n                    topics.push(id(value));\n                }\n                else if (param.type === 'bytes') {\n                    topics.push(keccak256(value));\n                }\n                else if (param.baseType === 'tuple' || param.baseType === 'array') {\n                    // @TODO\n                    throw new Error('not implemented');\n                }\n                else {\n                    topics.push(this.#abiCoder.encode([param.type], [value]));\n                }\n            }\n            else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n        return {\n            data: this.#abiCoder.encode(dataTypes, dataValues),\n            topics: topics,\n        };\n    }\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(fragment, data, topics) {\n        if (typeof fragment === 'string') {\n            const f = this.getEvent(fragment);\n            assertArgument(f, 'unknown event', 'eventFragment', fragment);\n            fragment = f;\n        }\n        if (topics != null && !fragment.anonymous) {\n            const eventTopic = fragment.topicHash;\n            assertArgument(isHexString(topics[0], 32) && topics[0].toLowerCase() === eventTopic, 'fragment/topic mismatch', 'topics[0]', topics[0]);\n            topics = topics.slice(1);\n        }\n        const indexed = [];\n        const nonIndexed = [];\n        const dynamic = [];\n        // TODO: `index` is not used, remove?\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === 'string' ||\n                    param.type === 'bytes' ||\n                    param.baseType === 'tuple' ||\n                    param.baseType === 'array') {\n                    indexed.push(ParamType.from({ type: 'bytes32', name: param.name }));\n                    dynamic.push(true);\n                }\n                else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            }\n            else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n        const resultIndexed = topics != null ? this.#abiCoder.decode(indexed, concat(topics)) : null;\n        const resultNonIndexed = this.#abiCoder.decode(nonIndexed, data, true);\n        //const result: (Array<any> & { [ key: string ]: any }) = [ ];\n        const values = [];\n        const keys = [];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        fragment.inputs.forEach((param, index) => {\n            let value = null;\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    value = new Indexed(null);\n                }\n                else if (dynamic[index]) {\n                    value = new Indexed(resultIndexed[indexedIndex++]);\n                }\n                else {\n                    try {\n                        value = resultIndexed[indexedIndex++];\n                    }\n                    catch (error) {\n                        value = error;\n                    }\n                }\n            }\n            else {\n                try {\n                    value = resultNonIndexed[nonIndexedIndex++];\n                }\n                catch (error) {\n                    value = error;\n                }\n            }\n            values.push(value);\n            keys.push(param.name || null);\n        });\n        return Result.fromItems(values, keys);\n    }\n    /**\n     * Parses a transaction, finding the matching function and extracts the parameter values along with other useful\n     * function details.\n     *\n     * If the matching function cannot be found, return null.\n     */\n    parseTransaction(tx) {\n        const data = getBytes(tx.data, 'tx.data');\n        const value = getBigInt(tx.value != null ? tx.value : 0, 'tx.value');\n        const fragment = this.getFunction(hexlify(data.slice(0, 4)));\n        if (!fragment) {\n            return null;\n        }\n        const args = this.#abiCoder.decode(fragment.inputs, data.slice(4));\n        return new TransactionDescription(fragment, fragment.selector, args, value);\n    }\n    // TODO: not implemented\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    parseCallResult(data) {\n        throw new Error('@TODO');\n    }\n    /**\n     * Parses a receipt log, finding the matching event and extracts the parameter values along with other useful event\n     * details.\n     *\n     * If the matching event cannot be found, returns null.\n     */\n    parseLog(log) {\n        const fragment = this.getEvent(log.topics[0]);\n        if (!fragment || fragment.anonymous) {\n            return null;\n        }\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n        return new LogDescription(fragment, fragment.topicHash, this.decodeEventLog(fragment, log.data, log.topics));\n    }\n    /**\n     * Parses a revert data, finding the matching error and extracts the parameter values along with other useful error\n     * details.\n     *\n     * If the matching error cannot be found, returns null.\n     */\n    parseError(data) {\n        const hexData = hexlify(data);\n        const fragment = this.getError(dataSlice(hexData, 0, 4));\n        if (!fragment) {\n            return null;\n        }\n        const args = this.#abiCoder.decode(fragment.inputs, dataSlice(hexData, 4));\n        return new ErrorDescription(fragment, fragment.selector, args);\n    }\n    /**\n     * Creates a new {@link Interface | **Interface**} from the ABI `value`.\n     *\n     * The `value` may be provided as an existing {@link Interface | **Interface**} object, a JSON-encoded ABI or any\n     * Human-Readable ABI format.\n     */\n    static from(value) {\n        // Already an Interface, which is immutable\n        if (value instanceof Interface) {\n            return value;\n        }\n        // JSON\n        if (typeof value === 'string') {\n            return new Interface(JSON.parse(value));\n        }\n        // Maybe an interface from an older version, or from a symlinked copy\n        if (typeof value.format === 'function') {\n            return new Interface(value.format('json'));\n        }\n        // Array of fragments\n        return new Interface(value);\n    }\n}\n//# sourceMappingURL=interface.js.map","import { validateAddress } from '../address/index.js';\nimport { getAddress } from '../address/index.js';\nimport { assertArgument, isHexString } from '../utils/index.js';\n/**\n * Converts an address and storage keys into an access set.\n *\n * @param {string} addr - The address to validate and convert.\n * @param {string[]} storageKeys - The storage keys to validate and convert.\n * @returns {{ address: string; storageKeys: string[] }} The access set.\n */\nfunction accessSetify(addr, storageKeys) {\n    validateAddress(addr);\n    return {\n        address: getAddress(addr),\n        storageKeys: storageKeys.map((storageKey, index) => {\n            assertArgument(isHexString(storageKey, 32), 'invalid slot', `storageKeys[${index}]`, storageKey);\n            return storageKey.toLowerCase();\n        }),\n    };\n}\n/**\n * Returns an {@link AccessList | **AccessList**} from any quasi-supported access-list structure.\n *\n * @category Transaction\n * @param {AccessListish} value - The value to convert to an access list.\n * @returns {AccessList} The access list.\n * @throws {Error} If the value is not a valid access list.\n */\nexport function accessListify(value) {\n    if (Array.isArray(value)) {\n        return value.map((set, index) => {\n            if (Array.isArray(set)) {\n                assertArgument(set.length === 2, 'invalid slot set', `value[${index}]`, set);\n                return accessSetify(set[0], set[1]);\n            }\n            assertArgument(set != null && typeof set === 'object', 'invalid address-slot set', 'value', value);\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n    assertArgument(value != null && typeof value === 'object', 'invalid access list', 'value', value);\n    const result = Object.keys(value).map((addr) => {\n        const storageKeys = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, {});\n        return accessSetify(addr, Object.keys(storageKeys).sort());\n    });\n    result.sort((a, b) => a.address.localeCompare(b.address));\n    return result;\n}\n//# sourceMappingURL=accesslist.js.map","import { keccak256, Signature } from '../crypto/index.js';\nimport { getBigInt, assert, assertArgument } from '../utils/index.js';\nimport { encodeProtoTransaction } from '../encoding/proto-encode.js';\n/**\n * An **AbstractTransaction** describes the common operations to be executed on Quai and Qi ledgers by an Externally\n * Owned Account (EOA). This class must be subclassed by concrete implementations of transactions on each ledger.\n */\nexport class AbstractTransaction {\n    _type;\n    _signature;\n    _chainId;\n    /**\n     * The transaction type.\n     *\n     * If null, the type will be automatically inferred based on explicit properties.\n     */\n    get type() {\n        return this._type;\n    }\n    set type(value) {\n        switch (value) {\n            case null:\n                this._type = null;\n                break;\n            case 0:\n            case 'standard':\n                this._type = 0;\n                break;\n            case 2:\n            case 'utxo':\n                this._type = 2;\n                break;\n            default:\n                assertArgument(false, 'unsupported transaction type', 'type', value);\n        }\n    }\n    /**\n     * The name of the transaction type.\n     */\n    get typeName() {\n        switch (this.type) {\n            case 0:\n                return 'standard';\n            case 1:\n                return 'external';\n            case 2:\n                return 'utxo';\n        }\n        return null;\n    }\n    /**\n     * The chain ID this transaction is valid on.\n     */\n    get chainId() {\n        return this._chainId;\n    }\n    set chainId(value) {\n        this._chainId = getBigInt(value);\n    }\n    /**\n     * If signed, the signature for this transaction.\n     */\n    get signature() {\n        return (this._signature || null);\n    }\n    set signature(value) {\n        if (typeof value === 'string') {\n            this._signature = value;\n        }\n        else {\n            this._signature = (value == null ? null : Signature.from(value));\n        }\n    }\n    /**\n     * Creates a new Transaction with default values.\n     */\n    constructor() {\n        this._type = null;\n        this._chainId = BigInt(0);\n        this._signature = null;\n    }\n    /**\n     * The pre-image hash of this transaction.\n     *\n     * This is the digest that a [Signer](../interfaces/Signer) must sign to authorize this transaction.\n     */\n    get digest() {\n        return keccak256(this.unsignedSerialized);\n    }\n    /**\n     * Returns true if signed.\n     *\n     * This provides a Type Guard that properties requiring a signed transaction are non-null.\n     *\n     * @returns {boolean} Indicates if the transaction is signed.\n     */\n    isSigned() {\n        return this.signature != null;\n    }\n    /**\n     * The serialized transaction.\n     *\n     * This throws if the transaction is unsigned. For the pre-image, use\n     * {@link AbstractTransaction.unsignedSerialized | **unsignedSerialized** }.\n     */\n    get serialized() {\n        assert(this.signature != null, 'cannot serialize unsigned transaction; maybe you meant .unsignedSerialized', 'UNSUPPORTED_OPERATION', { operation: '.serialized' });\n        return encodeProtoTransaction(this.toProtobuf(true));\n    }\n    /**\n     * The transaction pre-image.\n     *\n     * The hash of this is the digest which needs to be signed to authorize this transaction.\n     */\n    get unsignedSerialized() {\n        return encodeProtoTransaction(this.toProtobuf(false));\n    }\n    /**\n     * Return the most \"likely\" type; currently the highest supported transaction type.\n     *\n     * @returns {number} The inferred transaction type.\n     */\n    inferType() {\n        return this.inferTypes().pop();\n    }\n    /**\n     * Check if the transaction is external.\n     *\n     * @returns {boolean} True if the transaction is external.\n     */\n    get isExternal() {\n        return this.destZone !== undefined && this.originZone !== this.destZone;\n    }\n}\n//# sourceMappingURL=abstract-transaction.js.map","/**\n * An **AbstractCoinSelector** provides a base class for other sub-classes to implement the functionality for selecting\n * UTXOs for a spend and to properly handle spend and change outputs.\n *\n * This class is abstract and should not be used directly. Sub-classes should implement the\n * {@link AbstractCoinSelector#performSelection | **performSelection**} method to provide the actual coin selection\n * logic.\n *\n * @category Transaction\n * @abstract\n */\nexport class AbstractCoinSelector {\n    availableUTXOs;\n    totalInputValue = BigInt(0);\n    spendOutputs = [];\n    changeOutputs = [];\n    selectedUTXOs = [];\n    target = null;\n    /**\n     * Constructs a new AbstractCoinSelector instance with an empty UTXO array.\n     *\n     * @param {UTXO[]} [availableUXTOs=[]] - The initial available UTXOs. Default is `[]`\n     */\n    constructor(availableUTXOs = []) {\n        this.availableUTXOs = availableUTXOs.map((utxo) => {\n            this._validateUTXO(utxo);\n            return utxo;\n        });\n        this.spendOutputs = [];\n        this.changeOutputs = [];\n    }\n    /**\n     * Validates the provided UTXO instance. In order to be valid for coin selection, the UTXO must have a valid address\n     * and denomination.\n     *\n     * @param {UTXO} utxo - The UTXO to validate.\n     * @throws {Error} If the UTXO is invalid.\n     * @protected\n     */\n    _validateUTXO(utxo) {\n        if (utxo.address == null) {\n            throw new Error('UTXO address is required');\n        }\n        if (utxo.denomination == null) {\n            throw new Error('UTXO denomination is required');\n        }\n        if (utxo.txhash == null) {\n            throw new Error('UTXO txhash is required');\n        }\n        if (utxo.index == null) {\n            throw new Error('UTXO index is required');\n        }\n    }\n}\n//# sourceMappingURL=abstract-coinselector.js.map","import { validateAddress } from '../address/index.js';\n/**\n * List of supported Qi denominations.\n *\n * @category Transaction\n */\nexport const denominations = [\n    BigInt(1),\n    BigInt(5),\n    BigInt(10),\n    BigInt(50),\n    BigInt(100),\n    BigInt(250),\n    BigInt(500),\n    BigInt(1000),\n    BigInt(5000),\n    BigInt(10000),\n    BigInt(20000),\n    BigInt(50000),\n    BigInt(100000),\n    BigInt(1000000),\n    BigInt(10000000),\n    BigInt(100000000),\n    BigInt(1000000000), // 1,000,000 Qi (1,000,000,000 Qit)\n];\n/**\n * Checks if the provided denomination index is valid.\n *\n * @category Transaction\n * @param {number} index - The denomination index to check.\n * @returns {boolean} True if the denomination index is valid, false otherwise.\n */\nfunction isValidDenominationIndex(index) {\n    return index >= 0 && index < denominations.length;\n}\n/**\n * Given a value, returns an array of supported denominations that sum to the value.\n *\n * @category Transaction\n * @param {bigint} value - The value to denominate.\n * @returns {bigint[]} An array of denominations that sum to the value.\n * @throws {Error} If the value is less than or equal to 0 or cannot be matched with available denominations.\n */\nexport function denominate(value, maxDenomination) {\n    if (value <= BigInt(0)) {\n        throw new Error('Value must be greater than 0');\n    }\n    const result = [];\n    let remainingValue = BigInt(value);\n    // Find the index of the maximum allowed denomination\n    let maxDenominationIndex;\n    if (maxDenomination != null) {\n        maxDenominationIndex = denominations.findIndex((d) => d === maxDenomination);\n        if (maxDenominationIndex === -1) {\n            throw new Error('Invalid maximum denomination');\n        }\n    }\n    else {\n        // No maximum denomination set, use the highest denomination\n        maxDenominationIndex = denominations.length - 1;\n    }\n    // Iterate through denominations in descending order, up to the maximum allowed denomination\n    for (let i = maxDenominationIndex; i >= 0; i--) {\n        const denomination = denominations[i];\n        // Add the denomination to the result array as many times as possible\n        while (remainingValue >= denomination) {\n            result.push(denomination);\n            remainingValue -= BigInt(denomination);\n        }\n    }\n    if (remainingValue > 0) {\n        throw new Error('Unable to match the value with available denominations');\n    }\n    return result;\n}\n/**\n * Represents a UTXO (Unspent Transaction Output).\n *\n * @category Transaction\n * @implements {UTXOLike}\n */\nexport class UTXO {\n    #txhash;\n    #index;\n    #address;\n    #denomination;\n    /**\n     * Gets the transaction hash.\n     *\n     * @returns {null | string} The transaction hash.\n     */\n    get txhash() {\n        return this.#txhash;\n    }\n    /**\n     * Sets the transaction hash.\n     *\n     * @param {null | string} value - The transaction hash.\n     */\n    set txhash(value) {\n        this.#txhash = value;\n    }\n    /**\n     * Gets the index.\n     *\n     * @returns {null | number} The index.\n     */\n    get index() {\n        return this.#index;\n    }\n    /**\n     * Sets the index.\n     *\n     * @param {null | number} value - The index.\n     */\n    set index(value) {\n        this.#index = value;\n    }\n    /**\n     * Gets the address.\n     *\n     * @returns {string} The address.\n     */\n    get address() {\n        return this.#address || '';\n    }\n    /**\n     * Sets the address.\n     *\n     * @param {string} value - The address.\n     * @throws {Error} If the address is invalid.\n     */\n    set address(value) {\n        validateAddress(value);\n        this.#address = value;\n    }\n    /**\n     * Gets the denomination.\n     *\n     * @returns {null | number} The denomination.\n     */\n    get denomination() {\n        return this.#denomination;\n    }\n    /**\n     * Sets the denomination.\n     *\n     * @param {null | number} value - The denomination.\n     * @throws {Error} If the denomination value is invalid.\n     */\n    set denomination(value) {\n        if (value == null) {\n            this.#denomination = null;\n            return;\n        }\n        if (!isValidDenominationIndex(value)) {\n            throw new Error('Invalid denomination value');\n        }\n        this.#denomination = value;\n    }\n    /**\n     * Constructs a new UTXO instance with null properties.\n     */\n    constructor() {\n        this.#txhash = null;\n        this.#index = null;\n        this.#address = null;\n        this.#denomination = null;\n    }\n    /**\n     * Converts the UTXO instance to a JSON object.\n     *\n     * @returns {any} A JSON representation of the UTXO instance.\n     */\n    toJSON() {\n        return {\n            txhash: this.txhash,\n            index: this.index,\n            address: this.address,\n            denomination: this.denomination,\n        };\n    }\n    /**\n     * Creates a UTXO instance from a UTXOLike object.\n     *\n     * @param {UTXOLike} utxo - The UTXOLike object to convert.\n     * @returns {UTXO} The UTXO instance.\n     */\n    static from(utxo) {\n        if (utxo === null) {\n            return new UTXO();\n        }\n        const result = utxo instanceof UTXO ? utxo : new UTXO();\n        if (utxo.txhash != null) {\n            result.txhash = utxo.txhash;\n        }\n        if (utxo.index != null) {\n            result.index = utxo.index;\n        }\n        if (utxo.address != null && utxo.address !== '') {\n            result.address = utxo.address;\n        }\n        if (utxo.denomination != null) {\n            result.denomination = utxo.denomination;\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=utxo.js.map","// import { bigIntAbs } from '../utils/maths.js';\nimport { AbstractCoinSelector } from './abstract-coinselector.js';\nimport { UTXO, denominate, denominations } from './utxo.js';\n/**\n * The FewestCoinSelector class provides a coin selection algorithm that selects the fewest UTXOs required to meet the\n * target amount. This algorithm is useful for minimizing the size of the transaction and the fees associated with it.\n *\n * This class is a sub-class of {@link AbstractCoinSelector | **AbstractCoinSelector** } and implements the\n * {@link AbstractCoinSelector.performSelection | **performSelection** } method to provide the actual coin selection\n * logic.\n *\n * @category Transaction\n */\nexport class FewestCoinSelector extends AbstractCoinSelector {\n    /**\n     * Performs coin selection to meet the target amount plus fee, using the smallest possible denominations and\n     * minimizing the number of inputs and outputs.\n     *\n     * @param {bigint} target - The target amount to spend.\n     * @param {bigint} fee - The fee amount to include in the selection.\n     * @returns {SelectedCoinsResult} The selected UTXOs and outputs.\n     */\n    performSelection(target, fee = BigInt(0)) {\n        if (target <= BigInt(0)) {\n            throw new Error('Target amount must be greater than 0');\n        }\n        if (fee < BigInt(0)) {\n            throw new Error('Fee amount cannot be negative');\n        }\n        this.validateUTXOs();\n        this.target = target;\n        const totalRequired = BigInt(target) + BigInt(fee);\n        // Initialize selection state\n        this.selectedUTXOs = [];\n        this.totalInputValue = BigInt(0);\n        // Sort available UTXOs by denomination in ascending order\n        const sortedUTXOs = this.sortUTXOsByDenomination(this.availableUTXOs, 'asc');\n        // Attempt to find a single UTXO that can cover the total required amount\n        const singleUTXO = sortedUTXOs.find((utxo) => BigInt(denominations[utxo.denomination]) >= totalRequired);\n        if (singleUTXO) {\n            // Use the smallest UTXO that can cover the total required amount\n            this.selectedUTXOs.push(singleUTXO);\n            this.totalInputValue = BigInt(denominations[singleUTXO.denomination]);\n        }\n        else {\n            // If no single UTXO can cover the total required amount, find the minimal set\n            this.selectedUTXOs = this.findMinimalUTXOSet(sortedUTXOs, totalRequired);\n            if (this.selectedUTXOs.length === 0) {\n                throw new Error('Insufficient funds');\n            }\n            // Calculate total input value\n            this.totalInputValue = this.selectedUTXOs.reduce((sum, utxo) => sum + BigInt(denominations[utxo.denomination]), BigInt(0));\n        }\n        // Create outputs\n        const changeAmount = this.totalInputValue - BigInt(target) - BigInt(fee);\n        // Create spend outputs (to the recipient)\n        this.spendOutputs = this.createSpendOutputs(target);\n        // Create change outputs (to ourselves), if any\n        this.changeOutputs = this.createChangeOutputs(changeAmount);\n        // Verify that sum of outputs does not exceed sum of inputs\n        const totalOutputValue = this.calculateTotalOutputValue();\n        if (totalOutputValue > this.totalInputValue) {\n            throw new Error('Total output value exceeds total input value');\n        }\n        // Ensure largest output denomination ≤ largest input denomination\n        const maxInputDenomination = this.getMaxInputDenomination();\n        const maxOutputDenomination = this.getMaxOutputDenomination();\n        if (maxOutputDenomination > maxInputDenomination) {\n            throw new Error('Largest output denomination exceeds largest input denomination');\n        }\n        return {\n            inputs: this.selectedUTXOs,\n            spendOutputs: this.spendOutputs,\n            changeOutputs: this.changeOutputs,\n        };\n    }\n    /**\n     * Finds the minimal set of UTXOs that can cover the total required amount.\n     *\n     * @param {UTXO[]} sortedUTXOs - Available UTXOs sorted by denomination (ascending).\n     * @param {bigint} totalRequired - The total amount required (target + fee).\n     * @returns {UTXO[]} The minimal set of UTXOs.\n     */\n    findMinimalUTXOSet(sortedUTXOs, totalRequired) {\n        // Use a greedy algorithm to select the fewest UTXOs\n        // Starting from the largest denominations to minimize the number of inputs\n        const utxos = [...sortedUTXOs].reverse(); // Largest to smallest\n        let totalValue = BigInt(0);\n        const selectedUTXOs = [];\n        for (const utxo of utxos) {\n            if (totalValue >= totalRequired) {\n                break;\n            }\n            selectedUTXOs.push(utxo);\n            totalValue += BigInt(denominations[utxo.denomination]);\n        }\n        if (totalValue >= totalRequired) {\n            return selectedUTXOs;\n        }\n        else {\n            return []; // Insufficient funds\n        }\n    }\n    /**\n     * Creates spend outputs based on the target amount and input denominations.\n     *\n     * @param {bigint} amount - The target amount to spend.\n     * @param {UTXO[]} inputs - The selected inputs.\n     * @returns {UTXO[]} The spend outputs.\n     */\n    createSpendOutputs(amount) {\n        const maxInputDenomination = this.getMaxInputDenomination();\n        // Denominate the amount using available denominations up to the max input denomination\n        const spendDenominations = denominate(amount, maxInputDenomination);\n        return spendDenominations.map((denominationValue) => {\n            const utxo = new UTXO();\n            utxo.denomination = denominations.indexOf(denominationValue);\n            return utxo;\n        });\n    }\n    /**\n     * Creates change outputs based on the change amount and input denominations.\n     *\n     * @param {bigint} change - The change amount to return.\n     * @param {UTXO[]} inputs - The selected inputs.\n     * @returns {UTXO[]} The change outputs.\n     */\n    createChangeOutputs(change) {\n        if (change <= BigInt(0)) {\n            return [];\n        }\n        const maxInputDenomination = this.getMaxInputDenomination();\n        // Denominate the change amount using available denominations up to the max input denomination\n        const changeDenominations = denominate(change, maxInputDenomination);\n        return changeDenominations.map((denominationValue) => {\n            const utxo = new UTXO();\n            utxo.denomination = denominations.indexOf(denominationValue);\n            return utxo;\n        });\n    }\n    /**\n     * Calculates the total value of outputs (spend + change).\n     *\n     * @returns {bigint} The total output value.\n     */\n    calculateTotalOutputValue() {\n        const spendValue = this.spendOutputs.reduce((sum, output) => sum + BigInt(denominations[output.denomination]), BigInt(0));\n        const changeValue = this.changeOutputs.reduce((sum, output) => sum + BigInt(denominations[output.denomination]), BigInt(0));\n        return spendValue + changeValue;\n    }\n    /**\n     * Gets the maximum denomination value from the selected UTXOs.\n     *\n     * @returns {bigint} The maximum input denomination value.\n     */\n    getMaxInputDenomination() {\n        const inputs = [...this.selectedUTXOs];\n        return this.getMaxDenomination(inputs);\n    }\n    /**\n     * Gets the maximum denomination value from the spend and change outputs.\n     *\n     * @returns {bigint} The maximum output denomination value.\n     */\n    getMaxOutputDenomination() {\n        const outputs = [...this.spendOutputs, ...this.changeOutputs];\n        return this.getMaxDenomination(outputs);\n    }\n    /**\n     * Gets the maximum denomination value from a list of UTXOs.\n     *\n     * @param {UTXO[]} utxos - The list of UTXOs.\n     * @returns {bigint} The maximum denomination value.\n     */\n    getMaxDenomination(utxos) {\n        return utxos.reduce((max, utxo) => {\n            const denomValue = BigInt(denominations[utxo.denomination]);\n            return denomValue > max ? denomValue : max;\n        }, BigInt(0));\n    }\n    /**\n     * Increases the total fee by first reducing change outputs, then selecting additional inputs if necessary.\n     *\n     * @param {bigint} additionalFeeNeeded - The additional fee needed.\n     * @returns {boolean} Returns true if successful, false if insufficient funds.\n     */\n    increaseFee(additionalFeeNeeded) {\n        let remainingFee = BigInt(additionalFeeNeeded);\n        // First, try to cover the fee by reducing change outputs\n        const totalChange = this.changeOutputs.reduce((sum, output) => BigInt(sum) + BigInt(denominations[output.denomination]), BigInt(0));\n        if (totalChange >= remainingFee) {\n            // We can cover the fee by reducing change outputs\n            this.adjustChangeOutputs(totalChange - remainingFee);\n            return {\n                inputs: this.selectedUTXOs,\n                spendOutputs: this.spendOutputs,\n                changeOutputs: this.changeOutputs,\n            };\n        }\n        // If we can't cover the entire fee with change, reduce change to zero and calculate remaining fee\n        remainingFee -= BigInt(totalChange);\n        this.changeOutputs = [];\n        // Now, select additional inputs to cover the remaining fee\n        const unusedUTXOs = this.availableUTXOs.filter((utxo) => !this.selectedUTXOs.includes(utxo));\n        const sortedUTXOs = this.sortUTXOsByDenomination(unusedUTXOs, 'asc');\n        for (const utxo of sortedUTXOs) {\n            this.selectedUTXOs.push(utxo);\n            this.totalInputValue += BigInt(denominations[utxo.denomination]);\n            remainingFee -= BigInt(denominations[utxo.denomination]);\n            if (remainingFee <= BigInt(0)) {\n                // If we have excess, create a new change output\n                if (remainingFee < BigInt(0)) {\n                    const change = BigInt(this.totalInputValue) - BigInt(this.target) - BigInt(additionalFeeNeeded);\n                    this.adjustChangeOutputs(change);\n                }\n            }\n        }\n        return {\n            inputs: this.selectedUTXOs,\n            spendOutputs: this.spendOutputs,\n            changeOutputs: this.changeOutputs,\n        };\n    }\n    /**\n     * Decreases the fee by removing inputs if possible and adjusting change outputs.\n     *\n     * @param {bigint} feeReduction - The amount by which the fee has decreased.\n     * @returns {void}\n     */\n    decreaseFee(feeReduction) {\n        let excessValue = feeReduction;\n        // First, try to remove inputs\n        const sortedInputs = this.sortUTXOsByDenomination(this.selectedUTXOs, 'desc');\n        const inputsToRemove = [];\n        for (const input of sortedInputs) {\n            const inputValue = BigInt(denominations[input.denomination]);\n            if (excessValue >= inputValue && this.totalInputValue - inputValue >= this.target) {\n                inputsToRemove.push(input);\n                excessValue -= BigInt(inputValue);\n                this.totalInputValue -= BigInt(inputValue);\n            }\n            if (excessValue === BigInt(0))\n                break;\n        }\n        // Remove the identified inputs\n        this.selectedUTXOs = this.selectedUTXOs.filter((utxo) => !inputsToRemove.includes(utxo));\n        // If there's still excess value, add it to change outputs\n        if (excessValue > BigInt(0)) {\n            this.adjustChangeOutputs(excessValue);\n        }\n        return {\n            inputs: this.selectedUTXOs,\n            spendOutputs: this.spendOutputs,\n            changeOutputs: this.changeOutputs,\n        };\n    }\n    /**\n     * Helper method to adjust change outputs.\n     *\n     * @param {bigint} changeAmount - The amount to adjust change outputs by.\n     */\n    adjustChangeOutputs(changeAmount) {\n        if (changeAmount <= BigInt(0)) {\n            this.changeOutputs = [];\n            return;\n        }\n        this.changeOutputs = this.createChangeOutputs(changeAmount);\n    }\n    /**\n     * Sorts UTXOs by their denomination.\n     *\n     * @param {UTXO[]} utxos - The UTXOs to sort.\n     * @param {'asc' | 'desc'} direction - The direction to sort ('asc' for ascending, 'desc' for descending).\n     * @returns {UTXO[]} The sorted UTXOs.\n     */\n    sortUTXOsByDenomination(utxos, direction) {\n        if (direction === 'asc') {\n            return [...utxos].sort((a, b) => {\n                const diff = BigInt(a.denomination !== null ? denominations[a.denomination] : 0) -\n                    BigInt(b.denomination !== null ? denominations[b.denomination] : 0);\n                return diff > BigInt(0) ? 1 : diff < BigInt(0) ? -1 : 0;\n            });\n        }\n        return [...utxos].sort((a, b) => {\n            const diff = BigInt(b.denomination !== null ? denominations[b.denomination] : 0) -\n                BigInt(a.denomination !== null ? denominations[a.denomination] : 0);\n            return diff > BigInt(0) ? 1 : diff < BigInt(0) ? -1 : 0;\n        });\n    }\n    /**\n     * Validates the available UTXOs.\n     *\n     * @throws Will throw an error if there are no available UTXOs.\n     */\n    validateUTXOs() {\n        if (this.availableUTXOs.length === 0) {\n            throw new Error('No UTXOs available');\n        }\n    }\n}\n//# sourceMappingURL=coinselector-fewest.js.map","/**\n * @ignore\n */\nimport { getAddress } from '../address/index.js';\nimport { Signature } from '../crypto/index.js';\nimport { accessListify } from '../transaction/index.js';\nimport { hexlify } from '../utils/data.js';\nimport { getBigInt, getNumber, isHexString, zeroPadValue, assert, assertArgument, toBeArray, } from '../utils/index.js';\nconst BN_0 = BigInt(0);\nexport function allowNull(format, nullValue) {\n    return function (value) {\n        if (value == null) {\n            return nullValue;\n        }\n        return format(value);\n    };\n}\nexport function arrayOf(format) {\n    return (array) => {\n        if (!Array.isArray(array)) {\n            throw new Error('not an array');\n        }\n        return array.map((i) => format(i));\n    };\n}\n// Requires an object which matches a fleet of other formatters\n// Any FormatFunc may return `undefined` to have the value omitted\n// from the result object. Calls preserve `this`.\nexport function object(format, altNames) {\n    return (value) => {\n        const result = {};\n        for (const key in format) {\n            let srcKey = key;\n            if (altNames && key in altNames && !(srcKey in value)) {\n                for (const altKey of altNames[key]) {\n                    if (altKey in value) {\n                        srcKey = altKey;\n                        break;\n                    }\n                }\n            }\n            try {\n                const nv = format[key](value[srcKey]);\n                if (nv !== undefined) {\n                    result[key] = nv;\n                }\n            }\n            catch (error) {\n                const message = error instanceof Error ? error.message : 'not-an-error';\n                assert(false, `invalid value for value.${key} (${message})`, 'BAD_DATA', { value });\n            }\n        }\n        return result;\n    };\n}\nexport function formatBoolean(value) {\n    switch (value) {\n        case true:\n        case 'true':\n            return true;\n        case false:\n        case 'false':\n            return false;\n    }\n    assertArgument(false, `invalid boolean; ${JSON.stringify(value)}`, 'value', value);\n}\nexport function formatData(value) {\n    assertArgument(isHexString(value), 'invalid data', 'value', value);\n    return value;\n}\nexport function formatHash(value) {\n    assertArgument(isHexString(value, 32), 'invalid hash', 'value', value);\n    return value;\n}\nexport function formatUint256(value) {\n    if (!isHexString(value)) {\n        throw new Error('invalid uint256');\n    }\n    return zeroPadValue(value, 32);\n}\nexport function handleNumber(_value, param) {\n    if (_value === '0x') {\n        return 0;\n    }\n    return getNumber(_value, param);\n}\nexport function formatNumber(_value, name) {\n    const value = getBigInt(_value, 'value');\n    const result = toBeArray(value);\n    assertArgument(result.length <= 32, `value too large`, `tx.${name}`, value);\n    return result;\n}\nconst _formatLog = object({\n    address: getAddress,\n    blockHash: formatHash,\n    blockNumber: getNumber,\n    data: formatData,\n    index: getNumber,\n    removed: allowNull(formatBoolean, false),\n    topics: arrayOf(formatHash),\n    transactionHash: formatHash,\n    transactionIndex: getNumber,\n}, {\n    index: ['logIndex'],\n});\nexport function formatLog(value) {\n    return _formatLog(value);\n}\nconst _formatHeader = object({\n    baseFeePerGas: getBigInt,\n    efficiencyScore: getBigInt,\n    etxEligibleSlices: formatHash,\n    etxSetRoot: formatHash,\n    evmRoot: formatHash,\n    expansionNumber: getNumber,\n    etxRollupRoot: formatHash,\n    outboundEtxsRoot: formatHash,\n    extraData: formatData,\n    gasLimit: getBigInt,\n    gasUsed: getBigInt,\n    interlinkRootHash: formatHash,\n    manifestHash: arrayOf(formatHash),\n    number: arrayOf(getNumber),\n    parentDeltaEntropy: arrayOf(getBigInt),\n    parentEntropy: arrayOf(getBigInt),\n    parentHash: arrayOf(formatHash),\n    parentUncledDeltaEntropy: arrayOf(getBigInt),\n    primeTerminusHash: formatHash,\n    quaiStateSize: getBigInt,\n    receiptsRoot: formatHash,\n    uncleHash: formatHash,\n    size: getBigInt,\n    stateLimit: getBigInt,\n    stateUsed: getBigInt,\n    thresholdCount: getBigInt,\n    transactionsRoot: formatHash,\n    uncledEntropy: getBigInt,\n    utxoRoot: formatHash,\n    secondaryCoinbase: allowNull(getAddress),\n    exchangeRate: getBigInt,\n    quaiToQi: getBigInt,\n    qiToQuai: getBigInt,\n});\nconst _formatUncle = object({\n    primaryCoinbase: allowNull(getAddress),\n    difficulty: getNumber,\n    headerHash: formatHash,\n    location: formatData,\n    mixHash: formatHash,\n    nonce: formatData,\n    number: getNumber,\n    parentHash: formatHash,\n    primeTerminusNumber: getNumber,\n    timestamp: getNumber,\n    txHash: formatHash,\n    lock: getNumber,\n});\nconst _formatBlock = object({\n    outboundEtxs: arrayOf((tx) => {\n        if (typeof tx === 'string') {\n            return formatHash(tx);\n        }\n        return formatExternalTransactionResponse(tx);\n    }),\n    hash: formatHash,\n    header: _formatHeader,\n    interlinkHashes: arrayOf(formatHash),\n    size: getBigInt,\n    subManifest: arrayOf(formatData),\n    totalEntropy: getBigInt,\n    transactions: arrayOf((tx) => {\n        if (typeof tx === 'string') {\n            return formatHash(tx);\n        }\n        return formatTransactionResponse(tx);\n    }),\n    uncles: arrayOf(_formatUncle),\n    woHeader: _formatUncle,\n    workShares: allowNull(arrayOf(_formatUncle), []),\n});\nexport function formatBlock(value) {\n    const result = _formatBlock(value);\n    result.transactions = value.transactions.map((tx) => {\n        if (typeof tx === 'string') {\n            return tx;\n        }\n        if ('originatingTxHash' in tx) {\n            return formatExternalTransactionResponse(tx);\n        }\n        return formatTransactionResponse(tx);\n    });\n    result.outboundEtxs = value.outboundEtxs.map((tx) => {\n        if (typeof tx === 'string') {\n            return tx;\n        }\n        return formatExternalTransactionResponse(tx);\n    });\n    return result;\n}\nconst _formatReceiptLog = object({\n    transactionIndex: getNumber,\n    blockNumber: getNumber,\n    transactionHash: formatHash,\n    address: getAddress,\n    topics: arrayOf(formatHash),\n    data: formatData,\n    index: getNumber,\n    blockHash: formatHash,\n}, {\n    index: ['logIndex'],\n});\nexport function formatReceiptLog(value) {\n    return _formatReceiptLog(value);\n}\nconst _formatEtx = object({\n    type: allowNull(getNumber, 0),\n    nonce: allowNull(getNumber),\n    gasPrice: allowNull(getBigInt),\n    minerTip: allowNull(getBigInt),\n    gas: allowNull(getBigInt),\n    value: allowNull(getBigInt, BN_0),\n    input: allowNull(formatData),\n    to: allowNull(getAddress, null),\n    accessList: allowNull(accessListify, null),\n    from: getAddress,\n    originatingTxHash: formatHash,\n    etxIndex: getNumber,\n    chainId: allowNull(getBigInt, null),\n    etxType: getNumber,\n    hash: formatHash,\n}, {\n    from: ['from'],\n});\nexport function formatEtx(value) {\n    return _formatEtx(value);\n}\nconst _formatTransactionReceipt = object({\n    to: allowNull(getAddress, null),\n    from: allowNull(getAddress, null),\n    contractAddress: allowNull(getAddress, null),\n    index: getNumber,\n    gasUsed: getBigInt,\n    logsBloom: allowNull(formatData),\n    blockHash: formatHash,\n    hash: formatHash,\n    logs: arrayOf(formatReceiptLog),\n    blockNumber: getNumber,\n    cumulativeGasUsed: getBigInt,\n    effectiveGasPrice: allowNull(getBigInt),\n    status: allowNull(getNumber),\n    type: allowNull(getNumber, 0),\n    outboundEtxs: (value) => (value ? arrayOf(formatEtx)(value) : value),\n    originatingTxHash: allowNull(formatHash),\n    etxType: allowNull(getNumber),\n}, {\n    hash: ['transactionHash'],\n    index: ['transactionIndex'],\n});\nexport function formatTransactionReceipt(value) {\n    const result = _formatTransactionReceipt(value);\n    return result;\n}\nexport function formatExternalTransactionResponse(value) {\n    const result = object({\n        hash: formatHash,\n        type: (value) => {\n            if (value === '0x' || value == null) {\n                return 0;\n            }\n            return parseInt(value, 16);\n        },\n        accessList: allowNull(accessListify, null),\n        blockHash: allowNull(formatHash, null),\n        blockNumber: allowNull((value) => (value ? parseInt(value, 16) : null), null),\n        index: allowNull((value) => (value ? BigInt(value) : null), null),\n        from: allowNull(getAddress, null),\n        minerTip: allowNull((value) => (value ? BigInt(value) : null)),\n        gasPrice: allowNull((value) => (value ? BigInt(value) : null)),\n        gasLimit: allowNull((value) => (value ? BigInt(value) : null), null),\n        to: allowNull(getAddress, null),\n        value: allowNull((value) => (value ? BigInt(value) : null), null),\n        nonce: allowNull((value) => (value ? parseInt(value, 10) : null), null),\n        creates: allowNull(getAddress, null),\n        chainId: allowNull((value) => (value ? BigInt(value) : null), null),\n        originatingTxHash: allowNull(formatHash, null),\n        etxIndex: allowNull((value) => (value ? parseInt(value, 10) : null), null),\n        etxType: allowNull((value) => value, null),\n        data: (value) => value,\n    }, {\n        data: ['input'],\n        gasLimit: ['gas'],\n        index: ['transactionIndex'],\n    })(value);\n    // 0x0000... should actually be null\n    if (result.blockHash && getBigInt(result.blockHash) === BN_0) {\n        result.blockHash = null;\n    }\n    return result;\n}\nexport function formatTransactionResponse(value) {\n    // Determine if it is a Quai or Qi transaction based on the type\n    const transactionType = parseInt(value.type, 16);\n    let result;\n    if (transactionType === 0x0 || transactionType === 0x1) {\n        // QuaiTransactionResponseParams\n        result = object({\n            hash: formatHash,\n            type: (value) => {\n                if (value === '0x' || value == null) {\n                    return 0;\n                }\n                return parseInt(value, 16);\n            },\n            accessList: allowNull(accessListify, null),\n            blockHash: allowNull(formatHash, null),\n            blockNumber: allowNull((value) => (value ? parseInt(value, 16) : null), null),\n            index: allowNull((value) => (value ? BigInt(value) : null), null),\n            from: allowNull(getAddress, null),\n            minerTip: allowNull((value) => (value ? BigInt(value) : null)),\n            gasPrice: allowNull((value) => (value ? BigInt(value) : null)),\n            gasLimit: allowNull((value) => (value ? BigInt(value) : null), null),\n            to: allowNull(getAddress, null),\n            value: allowNull((value) => (value ? BigInt(value) : null), null),\n            nonce: allowNull((value) => (value ? parseInt(value, 10) : null), null),\n            creates: allowNull(getAddress, null),\n            chainId: allowNull((value) => (value ? BigInt(value) : null), null),\n            etxType: allowNull((value) => value, null),\n            data: (value) => value,\n        }, {\n            data: ['input'],\n            gasLimit: ['gas'],\n            index: ['transactionIndex'],\n        })(value);\n        // Add an access list to supported transaction types\n        if ((value.type === 0 || value.type === 2) && value.accessList == null) {\n            result.accessList = [];\n        }\n        // Compute the signature\n        if (value.signature) {\n            result.signature = Signature.from(value.signature);\n            // Some backends omit ChainId on legacy transactions, but we can compute it\n            if (result.chainId == null) {\n                const chainId = result.signature.legacyChainId;\n                if (chainId != null) {\n                    result.chainId = chainId;\n                }\n            }\n        }\n        // 0x0000... should actually be null\n        if (result.blockHash && getBigInt(result.blockHash) === BN_0) {\n            result.blockHash = null;\n        }\n    }\n    else if (transactionType === 0x2) {\n        // QiTransactionResponseParams\n        result = object({\n            hash: formatHash,\n            type: (value) => {\n                if (value === '0x' || value == null) {\n                    return 0;\n                }\n                return parseInt(value, 16);\n            },\n            blockHash: allowNull(formatHash, null),\n            blockNumber: allowNull((value) => (value ? parseInt(value, 16) : null), null),\n            index: allowNull((value) => (value ? BigInt(value) : null), null),\n            chainId: allowNull((value) => (value ? BigInt(value) : null), null),\n            signature: (value) => value,\n            txInputs: allowNull((value) => value.map(_formatTxInput), null),\n            txOutputs: allowNull((value) => value.map(_formatTxOutput), null),\n        }, {\n            index: ['transactionIndex'],\n            signature: ['utxoSignature'],\n            txInputs: ['inputs'],\n            txOutputs: ['outputs'],\n        })(value);\n    }\n    else {\n        throw new Error('Unknown transaction type');\n    }\n    return result;\n}\nconst _formatTxInput = object({\n    txhash: formatTxHash,\n    index: formatIndex,\n    pubkey: hexlify,\n}, {\n    txhash: ['PreviousOutPoint', 'TxHash'],\n    index: ['PreviousOutPoint', 'Index'],\n    pubkey: ['PubKey'],\n});\nfunction extractTxHash(value) {\n    if (value && value.TxHash) {\n        return value.TxHash;\n    }\n    throw new Error('Invalid PreviousOutPoint');\n}\nfunction formatTxHash(value) {\n    return formatHash(extractTxHash(value));\n}\nfunction extractIndex(value) {\n    if (value && value.Index !== undefined) {\n        return value.Index;\n    }\n    throw new Error('Invalid PreviousOutPoint');\n}\nfunction formatIndex(value) {\n    return getNumber(extractIndex(value));\n}\nconst _formatTxOutput = object({\n    address: (addr) => hexlify(getAddress(addr)),\n    denomination: getNumber,\n});\n//# sourceMappingURL=format.js.map","import { keccak256 } from '../crypto/index.js';\nimport { AbstractTransaction } from './index.js';\nimport { assertArgument, getBytes, getZoneForAddress, hexlify, toBigInt } from '../utils/index.js';\nimport { decodeProtoTransaction } from '../encoding/index.js';\nimport { formatNumber } from '../providers/format.js';\nimport { computeAddress, isQiAddress } from '../address/index.js';\n/**\n * Class representing a QiTransaction.\n *\n * @category Transaction\n * @extends {AbstractTransaction<string>}\n * @implements {QiTransactionLike}\n */\nexport class QiTransaction extends AbstractTransaction {\n    #txInputs;\n    #txOutputs;\n    /**\n     * Get transaction inputs.\n     *\n     * @returns {TxInput[]} The transaction inputs.\n     */\n    get txInputs() {\n        return (this.#txInputs ?? []).map((entry) => ({ ...entry }));\n    }\n    /**\n     * Set transaction inputs.\n     *\n     * @param {TxInput[] | null} value - The transaction inputs.\n     * @throws {Error} If the value is not an array.\n     */\n    set txInputs(value) {\n        if (!Array.isArray(value)) {\n            throw new Error('txInputs must be an array');\n        }\n        this.#txInputs = value.map((entry) => ({ ...entry }));\n    }\n    /**\n     * Get transaction outputs.\n     *\n     * @returns {TxOutput[]} The transaction outputs.\n     */\n    get txOutputs() {\n        return (this.#txOutputs ?? []).map((output) => ({ ...output }));\n    }\n    /**\n     * Set transaction outputs.\n     *\n     * @param {TxOutput[] | null} value - The transaction outputs.\n     * @throws {Error} If the value is not an array.\n     */\n    set txOutputs(value) {\n        if (!Array.isArray(value)) {\n            throw new Error('txOutputs must be an array');\n        }\n        this.#txOutputs = value.map((output) => ({ ...output }));\n    }\n    /**\n     * Get the permuted hash of the transaction as specified by QIP-0010.\n     *\n     * @returns {string | null} The transaction hash.\n     * @throws {Error} If the transaction has no inputs or outputs, or if cross-zone & cross-ledger transactions are not\n     *   supported.\n     * @see {@link [QIP0010](https://github.com/quai-network/qips/blob/master/qip-0010.md)}\n     */\n    get hash() {\n        if (this.signature == null) {\n            return null;\n        }\n        if (this.txInputs.length < 1 || this.txOutputs.length < 1) {\n            throw new Error('Transaction must have at least one input and one output');\n        }\n        const senderAddr = computeAddress(this.txInputs[0].pubkey || '');\n        if (!this.destZone || !this.originZone) {\n            throw new Error(`Invalid zones: origin ${this.originZone} ->  destination ${this.destZone} (address: ${senderAddr})`);\n        }\n        const isSameLedger = isQiAddress(senderAddr) === isQiAddress(hexlify(this.txOutputs[0].address) || '');\n        if (this.isExternal && !isSameLedger) {\n            throw new Error('Cross-zone & cross-ledger transactions are not supported');\n        }\n        const hexString = this.serialized.startsWith('0x') ? this.serialized.substring(2) : this.serialized;\n        const dataBuffer = Buffer.from(hexString, 'hex');\n        const hashHex = keccak256(dataBuffer);\n        const hashBuffer = Buffer.from(hashHex.substring(2), 'hex');\n        const prevTxHash = this.txInputs[0].txhash;\n        const prevTxHashBytes = getBytes(prevTxHash);\n        const origin = prevTxHashBytes[1]; // Get the second byte (0-based index)\n        hashBuffer[0] = origin;\n        hashBuffer[1] |= 0x80;\n        hashBuffer[2] = origin;\n        hashBuffer[3] |= 0x80;\n        return '0x' + hashBuffer.toString('hex');\n    }\n    /**\n     * Get the zone of the sender address.\n     *\n     * @returns {Zone | undefined} The origin zone.\n     */\n    get originZone() {\n        const senderAddr = computeAddress(this.txInputs[0].pubkey || '');\n        const zone = getZoneForAddress(senderAddr);\n        return zone ?? undefined;\n    }\n    /**\n     * Get the zone of the recipient address.\n     *\n     * @returns {Zone | undefined} The destination zone.\n     */\n    get destZone() {\n        const zone = getZoneForAddress(this.txOutputs[0].address);\n        return zone ?? undefined;\n    }\n    /**\n     * Creates a new Transaction with default values.\n     */\n    constructor() {\n        super();\n        this.#txInputs = [];\n        this.#txOutputs = [];\n    }\n    /**\n     * Validates the explicit properties and returns a list of compatible transaction types.\n     *\n     * @returns {number[]} The compatible transaction types.\n     */\n    inferTypes() {\n        const types = [];\n        // Explicit type\n        if (this.type != null) {\n            types.push(this.type);\n        }\n        else {\n            types.push(2);\n        }\n        types.sort();\n        return types;\n    }\n    /**\n     * Create a copy of this transaction.\n     *\n     * @returns {QiTransaction} The cloned transaction.\n     */\n    clone() {\n        return QiTransaction.from(this);\n    }\n    /**\n     * Return a JSON-friendly object.\n     *\n     * @returns {QiTransactionLike} The JSON-friendly object.\n     */\n    toJSON() {\n        const s = (v) => {\n            if (v == null) {\n                return null;\n            }\n            return v.toString();\n        };\n        return {\n            type: this.type,\n            chainId: s(this.chainId),\n            signature: this.signature ? this.signature : null,\n            hash: this.hash,\n            txInputs: this.txInputs,\n            txOutputs: this.txOutputs,\n        };\n    }\n    /**\n     * Return a protobuf-friendly JSON object.\n     *\n     * @param {boolean} [includeSignature=true] - Whether to include the signature. Default is `true`\n     * @returns {ProtoTransaction} The protobuf-friendly JSON object.\n     */\n    toProtobuf(includeSignature = true) {\n        const protoTx = {\n            type: this.type || 2,\n            chain_id: formatNumber(this.chainId || 0, 'chainId'),\n            tx_ins: {\n                tx_ins: this.txInputs.map((input) => ({\n                    previous_out_point: {\n                        hash: { value: getBytes(input.txhash) },\n                        index: input.index,\n                    },\n                    pub_key: getBytes(input.pubkey),\n                })),\n            },\n            tx_outs: {\n                tx_outs: this.txOutputs.map((output) => ({\n                    address: getBytes(output.address),\n                    denomination: output.denomination,\n                    lock: new Uint8Array(),\n                })),\n            },\n        };\n        if (this.signature && includeSignature) {\n            protoTx.signature = getBytes(this.signature);\n        }\n        return protoTx;\n    }\n    /**\n     * Create a Transaction from a serialized transaction or a Transaction-like object.\n     *\n     * @param {string | QiTransactionLike} tx - The transaction to decode.\n     * @returns {QiTransaction} The decoded transaction.\n     * @throws {Error} If the transaction is unsigned and defines a hash.\n     */\n    static from(tx) {\n        if (typeof tx === 'string') {\n            const decodedProtoTx = decodeProtoTransaction(getBytes(tx));\n            return QiTransaction.fromProto(decodedProtoTx);\n        }\n        const result = new QiTransaction();\n        if (tx.type != null) {\n            result.type = tx.type;\n        }\n        if (tx.chainId != null) {\n            result.chainId = tx.chainId;\n        }\n        if (tx.signature != null && tx.signature !== '') {\n            result.signature = tx.signature;\n        }\n        if (tx.txInputs != null) {\n            result.txInputs = tx.txInputs;\n        }\n        if (tx.txOutputs != null) {\n            result.txOutputs = tx.txOutputs;\n        }\n        if (tx.hash != null) {\n            assertArgument(result.isSigned(), 'unsigned transaction cannot define hash', 'tx', tx);\n        }\n        return result;\n    }\n    /**\n     * Create a Transaction from a ProtoTransaction object.\n     *\n     * @param {ProtoTransaction} protoTx - The transaction to decode.\n     * @returns {QiTransaction} The decoded transaction.\n     */\n    static fromProto(protoTx) {\n        const tx = new QiTransaction();\n        tx.type = protoTx.type;\n        tx.chainId = toBigInt(protoTx.chain_id);\n        tx.txInputs =\n            protoTx.tx_ins?.tx_ins.map((input) => ({\n                txhash: hexlify(input.previous_out_point.hash.value),\n                index: input.previous_out_point.index,\n                pubkey: hexlify(input.pub_key),\n            })) ?? [];\n        tx.txOutputs =\n            protoTx.tx_outs?.tx_outs.map((output) => ({\n                address: hexlify(output.address),\n                denomination: output.denomination,\n                lock: output.lock ? hexlify(output.lock) : '',\n            })) ?? [];\n        if (protoTx.signature) {\n            tx.signature = hexlify(protoTx.signature);\n        }\n        return tx;\n    }\n}\n//# sourceMappingURL=qi-transaction.js.map","import { keccak256, Signature } from '../crypto/index.js';\nimport { accessListify, AbstractTransaction } from './index.js';\nimport { assert, assertArgument, getBigInt, getBytes, getNumber, getZoneForAddress, hexlify, toBeArray, toBigInt, zeroPadValue, } from '../utils/index.js';\nimport { decodeProtoTransaction, encodeProtoTransaction } from '../encoding/index.js';\nimport { formatMixedCaseChecksumAddress, getAddress, recoverAddress, validateAddress, isQuaiAddress, } from '../address/index.js';\nimport { formatNumber, handleNumber } from '../providers/format.js';\n/**\n * Parses a signature from an array of fields.\n *\n * @ignore\n * @param {string[]} fields - The fields to parse.\n * @returns {Signature} The parsed signature.\n */\nexport function _parseSignature(fields) {\n    let yParity;\n    try {\n        yParity = handleNumber(fields[0], 'yParity');\n        if (yParity !== 0 && yParity !== 1) {\n            throw new Error('bad yParity');\n        }\n    }\n    catch (error) {\n        assertArgument(false, 'invalid yParity', 'yParity', fields[0]);\n    }\n    const r = zeroPadValue(fields[1], 32);\n    const s = zeroPadValue(fields[2], 32);\n    return Signature.from({ r, s, yParity });\n}\n/**\n * Represents a Quai transaction.\n *\n * @category Transaction\n */\nexport class QuaiTransaction extends AbstractTransaction {\n    #to;\n    #data;\n    #nonce;\n    #gasLimit;\n    #gasPrice;\n    #minerTip;\n    #value;\n    #accessList;\n    from;\n    /**\n     * The `to` address for the transaction or `null` if the transaction is an `init` transaction.\n     *\n     * @type {null | string}\n     */\n    get to() {\n        return this.#to;\n    }\n    set to(value) {\n        if (value !== null)\n            validateAddress(value);\n        this.#to = value;\n    }\n    /**\n     * The permuted hash of the transaction as specified by\n     * [QIP-0010](https://github.com/quai-network/qips/blob/master/qip-0010.md).\n     *\n     * @type {null | string}\n     * @throws {Error} If the transaction is not signed.\n     */\n    get hash() {\n        if (this.signature == null)\n            return null;\n        if (!this.originZone) {\n            throw new Error('Invalid Zone for from address');\n        }\n        if (!this.from) {\n            throw new Error('Missing from address');\n        }\n        const isSameLedger = !this.to || isQuaiAddress(this.from) === isQuaiAddress(this.to);\n        if (this.isExternal && !isSameLedger) {\n            throw new Error('Cross-zone & cross-ledger transactions are not supported');\n        }\n        const hexString = this.serialized.startsWith('0x') ? this.serialized.substring(2) : this.serialized;\n        const dataBuffer = Buffer.from(hexString, 'hex');\n        const hashHex = keccak256(dataBuffer);\n        const hashBuffer = Buffer.from(hashHex.substring(2), 'hex');\n        const origin = this.originZone ? parseInt(this.originZone.slice(2), 16) : 0;\n        hashBuffer[0] = origin;\n        hashBuffer[1] &= 0x7f;\n        hashBuffer[2] = origin;\n        hashBuffer[3] &= 0x7f;\n        return '0x' + hashBuffer.toString('hex');\n    }\n    /**\n     * The zone of the sender address\n     *\n     * @type {Zone | undefined}\n     */\n    get originZone() {\n        const zone = this.from ? getZoneForAddress(this.from) : undefined;\n        return zone ?? undefined;\n    }\n    /**\n     * The zone of the recipient address\n     *\n     * @type {Zone | undefined}\n     */\n    get destZone() {\n        const zone = this.to !== null ? getZoneForAddress(this.to || '') : undefined;\n        return zone ?? undefined;\n    }\n    /**\n     * The transaction nonce.\n     *\n     * @type {number}\n     */\n    get nonce() {\n        return this.#nonce;\n    }\n    set nonce(value) {\n        this.#nonce = getNumber(value, 'value');\n    }\n    /**\n     * The gas limit.\n     *\n     * @type {bigint}\n     */\n    get gasLimit() {\n        return this.#gasLimit;\n    }\n    set gasLimit(value) {\n        this.#gasLimit = getBigInt(value);\n    }\n    /**\n     * The maximum priority fee per unit of gas to pay. On legacy networks this should be `null`.\n     *\n     * @type {null | bigint}\n     */\n    get minerTip() {\n        const value = this.#minerTip;\n        if (value == null) {\n            return null;\n        }\n        return value;\n    }\n    set minerTip(value) {\n        this.#minerTip = value == null ? null : getBigInt(value, 'minerTip');\n    }\n    /**\n     * The maximum total fee per unit of gas to pay. On legacy networks this should be `null`.\n     *\n     * @type {null | bigint}\n     */\n    get gasPrice() {\n        const value = this.#gasPrice;\n        if (value == null) {\n            return null;\n        }\n        return value;\n    }\n    set gasPrice(value) {\n        this.#gasPrice = value == null ? null : getBigInt(value, 'gasPrice');\n    }\n    /**\n     * The transaction data. For `init` transactions this is the deployment code.\n     *\n     * @type {string}\n     */\n    get data() {\n        return this.#data;\n    }\n    set data(value) {\n        this.#data = hexlify(value);\n    }\n    /**\n     * The amount of ether to send in this transactions.\n     *\n     * @type {bigint}\n     */\n    get value() {\n        return this.#value;\n    }\n    set value(value) {\n        this.#value = getBigInt(value, 'value');\n    }\n    /**\n     * The access list.\n     *\n     * An access list permits discounted (but pre-paid) access to bytecode and state variable access within contract\n     * execution.\n     *\n     * @type {null | AccessList}\n     */\n    get accessList() {\n        const value = this.#accessList || null;\n        if (value == null) {\n            return null;\n        }\n        return value;\n    }\n    set accessList(value) {\n        this.#accessList = value == null ? null : accessListify(value);\n    }\n    /**\n     * Creates a new Transaction with default values.\n     *\n     * @param {string} [from] - The sender address.\n     */\n    constructor(from) {\n        super();\n        this.#to = null;\n        this.#nonce = 0;\n        this.#gasLimit = BigInt(0);\n        this.#gasPrice = null;\n        this.#minerTip = null;\n        this.#gasPrice = null;\n        this.#data = '0x';\n        this.#value = BigInt(0);\n        this.#accessList = null;\n        this.from = from;\n    }\n    /**\n     * Validates the explicit properties and returns a list of compatible transaction types.\n     *\n     * @returns {number[]} The compatible transaction types.\n     */\n    inferTypes() {\n        if (this.gasPrice != null && this.minerTip != null) {\n            assert(this.gasPrice >= this.minerTip, 'priorityFee cannot be more than maxFee', 'BAD_DATA', {\n                value: this,\n            });\n        }\n        assert(this.type !== 0 && this.type !== 1, 'transaction type cannot have externalGasLimit, externalGasTip, externalGasPrice, externalData, or externalAccessList', 'BAD_DATA', { value: this });\n        const types = [];\n        // Explicit type\n        if (this.type != null) {\n            types.push(this.type);\n        }\n        else {\n            types.push(0);\n        }\n        types.sort();\n        return types;\n    }\n    /**\n     * Create a copy of this transaction.\n     *\n     * @returns {QuaiTransaction} The cloned transaction.\n     */\n    clone() {\n        return QuaiTransaction.from(this);\n    }\n    /**\n     * Return a JSON-friendly object.\n     *\n     * @returns {QuaiTransactionLike} The JSON-friendly object.\n     */\n    toJSON() {\n        const s = (v) => {\n            if (v == null) {\n                return null;\n            }\n            return v.toString();\n        };\n        return {\n            type: this.type,\n            to: this.to,\n            from: this.from,\n            data: this.data,\n            nonce: this.nonce,\n            gasLimit: s(this.gasLimit),\n            gasPrice: s(this.gasPrice),\n            minerTip: s(this.minerTip),\n            value: s(this.value),\n            chainId: s(this.chainId),\n            signature: this.signature ? this.signature.toJSON() : null,\n            hash: this.hash,\n            accessList: this.accessList,\n        };\n    }\n    /**\n     * Return a protobuf-friendly JSON object.\n     *\n     * @param {boolean} [includeSignature=true] - Whether to include the signature. Default is `true`\n     * @returns {ProtoTransaction} The protobuf-friendly JSON object.\n     */\n    toProtobuf(includeSignature = true) {\n        const protoTx = {\n            type: this.type || 0,\n            chain_id: formatNumber(this.chainId || 0, 'chainId'),\n            nonce: this.nonce || 0,\n            miner_tip: formatNumber(this.minerTip || 0, 'minerTip'),\n            gas_price: formatNumber(this.gasPrice || 0, 'gasPrice'),\n            gas: Number(this.gasLimit || 0),\n            to: this.to != null ? getBytes(this.to) : null,\n            value: formatNumber(this.value || 0, 'value'),\n            data: getBytes(this.data || '0x'),\n            access_list: {\n                access_tuples: this.accessList?.map((it) => {\n                    return {\n                        address: getBytes(it.address),\n                        storage_key: it.storageKeys.map((key) => {\n                            return { value: getBytes(key) };\n                        }),\n                    };\n                }) || [],\n            },\n        };\n        if (this.signature && includeSignature) {\n            protoTx.v = formatNumber(this.signature.yParity, 'yParity');\n            protoTx.r = toBeArray(this.signature.r);\n            protoTx.s = toBeArray(this.signature.s);\n        }\n        return protoTx;\n    }\n    /**\n     * Create a **Transaction** from a serialized transaction or a Transaction-like object.\n     *\n     * @param {string | QuaiTransactionLike} tx - The transaction to decode.\n     * @returns {QuaiTransaction} The decoded transaction.\n     */\n    static from(tx) {\n        if (typeof tx === 'string') {\n            const decodedProtoTx = decodeProtoTransaction(getBytes(tx));\n            return QuaiTransaction.fromProto(decodedProtoTx);\n        }\n        const result = new QuaiTransaction(tx.from);\n        if (tx.type != null) {\n            result.type = tx.type;\n        }\n        if (tx.to != null) {\n            validateAddress(tx.to);\n            result.to = tx.to;\n        }\n        if (tx.nonce != null) {\n            result.nonce = tx.nonce;\n        }\n        if (tx.gasLimit != null) {\n            result.gasLimit = tx.gasLimit;\n        }\n        if (tx.minerTip != null) {\n            result.minerTip = tx.minerTip;\n        }\n        if (tx.gasPrice != null) {\n            result.gasPrice = tx.gasPrice;\n        }\n        if (tx.data != null && tx.data !== '') {\n            result.data = tx.data;\n        }\n        if (tx.value != null) {\n            result.value = tx.value;\n        }\n        if (tx.chainId != null) {\n            result.chainId = tx.chainId;\n        }\n        if (tx.signature != null) {\n            result.signature = Signature.from(tx.signature);\n        }\n        if (tx.accessList != null) {\n            result.accessList = tx.accessList;\n        }\n        if (tx.hash != null) {\n            assertArgument(result.isSigned(), 'unsigned transaction cannot define hash', 'tx', tx);\n        }\n        if (tx.from != null) {\n            assertArgument(isQuaiAddress(tx.from), 'from address must be a Quai address', 'tx.from', tx.from);\n            assertArgument((result.from || '').toLowerCase() === (tx.from || '').toLowerCase(), 'from mismatch', 'tx', tx);\n            result.from = tx.from;\n        }\n        return result;\n    }\n    /**\n     * Create a **Transaction** from a ProtoTransaction object.\n     *\n     * @param {ProtoTransaction} protoTx - The transaction to decode.\n     * @returns {QuaiTransaction} The decoded transaction.\n     */\n    static fromProto(protoTx) {\n        //  TODO: Fix this because new tx instance requires a 'from' address\n        let signature = null;\n        let address = '';\n        delete protoTx.etx_sender;\n        delete protoTx.etx_index;\n        const protoTxCopy = structuredClone(protoTx);\n        if (protoTx.v && protoTx.r && protoTx.s) {\n            // check if protoTx.r is zero\n            if (protoTx.r.reduce((acc, val) => (acc += val), 0) == 0) {\n                throw new Error('Proto decoding only supported for signed transactions');\n            }\n            const signatureFields = [hexlify(protoTx.v), hexlify(protoTx.r), hexlify(protoTx.s)];\n            signature = _parseSignature(signatureFields);\n            delete protoTxCopy.v;\n            delete protoTxCopy.r;\n            delete protoTxCopy.s;\n            delete protoTxCopy.signature;\n            address = recoverAddress(keccak256(encodeProtoTransaction(protoTxCopy)), signature);\n        }\n        const tx = new QuaiTransaction(address);\n        if (signature) {\n            tx.signature = signature;\n        }\n        if (protoTx.to !== null) {\n            const toAddr = hexlify(protoTx.to);\n            tx.to = getAddress(toAddr);\n        }\n        tx.type = protoTx.type;\n        tx.chainId = toBigInt(protoTx.chain_id);\n        tx.nonce = Number(protoTx.nonce);\n        tx.minerTip = toBigInt(protoTx.miner_tip);\n        tx.gasPrice = toBigInt(protoTx.gas_price);\n        tx.gasLimit = toBigInt(protoTx.gas);\n        tx.value = protoTx.value !== null ? toBigInt(protoTx.value) : BigInt(0);\n        tx.data = hexlify(protoTx.data);\n        tx.accessList = protoTx.access_list.access_tuples.map((tuple) => ({\n            address: formatMixedCaseChecksumAddress(hexlify(tuple.address)),\n            storageKeys: tuple.storage_key.map((key) => hexlify(key.value)),\n        }));\n        return tx;\n    }\n}\n//# sourceMappingURL=quai-transaction.js.map","import { defineProperties, getBigInt, getNumber, hexlify, resolveProperties, assert, assertArgument, isError, makeError, } from '../utils/index.js';\nimport { computeAddress } from '../address/index.js';\nimport { accessListify } from '../transaction/index.js';\nconst BN_0 = BigInt(0);\nimport { toShard, toZone } from '../constants/index.js';\nimport { getZoneFromNodeLocation, getZoneForAddress } from '../utils/shards.js';\n/**\n * Get the value if it is not null or undefined.\n *\n * @ignore\n * @param {undefined | null | T} value - The value to check.\n * @returns {null | T} The value if not null or undefined, otherwise null.\n */\nfunction getValue(value) {\n    if (value == null) {\n        return null;\n    }\n    return value;\n}\n/**\n * Convert a value to a JSON-friendly string.\n *\n * @ignore\n * @param {null | bigint | string} value - The value to convert.\n * @returns {null | string} The JSON-friendly string or null.\n */\nfunction toJson(value) {\n    if (value == null) {\n        return null;\n    }\n    return value.toString();\n}\n/**\n * A **FeeData** wraps all the fee-related values associated with the network.\n *\n * @category Providers\n */\nexport class FeeData {\n    /**\n     * The gas price for legacy networks.\n     */\n    gasPrice;\n    /**\n     * The additional amount to pay per gas to encourage a validator to include the transaction.\n     *\n     * The purpose of this is to compensate the validator for the adjusted risk for including a given transaction.\n     *\n     * This will be `null` on legacy networks (i.e. [pre-EIP-1559](https://eips.ethereum.org/EIPS/eip-1559))\n     */\n    minerTip;\n    /**\n     * Creates a new FeeData for `gasPrice`, `gasPrice` and `minerTip`.\n     *\n     * @param {null | bigint} [gasPrice] - The gas price.\n     * @param {null | bigint} [gasPrice] - The maximum fee per gas.\n     * @param {null | bigint} [minerTip] - The maximum priority fee per gas.\n     */\n    constructor(gasPrice, minerTip) {\n        defineProperties(this, {\n            gasPrice: getValue(gasPrice),\n            minerTip: getValue(minerTip),\n        });\n    }\n    /**\n     * Returns a JSON-friendly value.\n     *\n     * @returns {any} The JSON-friendly value.\n     */\n    toJSON() {\n        const { gasPrice, minerTip } = this;\n        return {\n            _type: 'FeeData',\n            gasPrice: toJson(gasPrice),\n            minerTip: toJson(minerTip),\n        };\n    }\n}\n/**\n * Determines the address from a transaction request.\n *\n * @param {TransactionRequest} tx - The transaction request.\n * @returns {AddressLike} The address from the transaction request.\n * @throws {Error} If unable to determine the address.\n */\nexport function addressFromTransactionRequest(tx) {\n    if ('from' in tx && !!tx.from) {\n        return tx.from;\n    }\n    if ('txInputs' in tx && !!tx.txInputs) {\n        return computeAddress(tx.txInputs[0].pubkey);\n    }\n    if ('to' in tx && !!tx.to) {\n        return tx.to;\n    }\n    throw new Error('Unable to determine address from transaction inputs, from or to field');\n}\n/**\n * Returns a copy of `req` with all properties coerced to their strict types.\n *\n * @category Providers\n * @param {TransactionRequest} req - The transaction request to copy.\n * @returns {PreparedTransactionRequest} The prepared transaction request.\n * @throws {Error} If the request is invalid.\n */\nexport function copyRequest(req) {\n    const result = {};\n    // These could be addresses or Addressables\n    if ('to' in req && req.to) {\n        result.to = req.to;\n    }\n    if ('from' in req && req.from) {\n        result.from = req.from;\n    }\n    if ('data' in req && req.data) {\n        result.data = hexlify(req.data);\n    }\n    const bigIntKeys = 'chainId,gasLimit,gasPrice,minerTip,value'.split(/,/);\n    for (const key of bigIntKeys) {\n        if (!(key in req) || req[key] == null) {\n            continue;\n        }\n        result[key] = getBigInt(req[key], `request.${key}`);\n    }\n    const numberKeys = 'type,nonce'.split(/,/);\n    for (const key of numberKeys) {\n        if (!(key in req) || req[key] == null) {\n            continue;\n        }\n        result[key] = getNumber(req[key], `request.${key}`);\n    }\n    if ('accessList' in req && req.accessList) {\n        result.accessList = accessListify(req.accessList);\n    }\n    if ('blockTag' in req) {\n        result.blockTag = req.blockTag;\n    }\n    if ('customData' in req) {\n        result.customData = req.customData;\n    }\n    if ('txInputs' in req && req.txInputs) {\n        result.txInputs = req.txInputs.map((entry) => ({ ...entry }));\n    }\n    if ('txOutputs' in req && req.txOutputs) {\n        result.txOutputs = req.txOutputs.map((entry) => ({ ...entry }));\n    }\n    return result;\n}\n/**\n * Represents the header of a block.\n *\n * @category Providers\n */\nexport class BlockHeader {\n    gasPrice;\n    efficiencyScore;\n    etxEligibleSlices;\n    etxSetRoot;\n    evmRoot;\n    expansionNumber;\n    etxRollupRoot;\n    outboundEtxsRoot;\n    extraData;\n    gasLimit;\n    gasUsed;\n    interlinkRootHash;\n    manifestHash;\n    number;\n    parentDeltaEntropy;\n    parentEntropy;\n    parentHash;\n    parentUncledDeltaEntropy;\n    primeTerminusHash;\n    quaiStateSize;\n    receiptsRoot;\n    uncleHash;\n    size;\n    stateLimit;\n    stateUsed;\n    thresholdCount;\n    transactionsRoot;\n    uncledEntropy;\n    utxoRoot;\n    exchangeRate;\n    quaiToQi;\n    qiToQuai;\n    secondaryCoinbase;\n    constructor(params) {\n        this.gasPrice = params.gasPrice;\n        this.efficiencyScore = params.efficiencyScore;\n        this.etxEligibleSlices = params.etxEligibleSlices;\n        this.etxSetRoot = params.etxSetRoot;\n        this.evmRoot = params.evmRoot;\n        this.expansionNumber = params.expansionNumber;\n        this.etxRollupRoot = params.etxRollupRoot;\n        this.outboundEtxsRoot = params.outboundEtxsRoot;\n        this.extraData = params.extraData;\n        this.gasLimit = params.gasLimit;\n        this.gasUsed = params.gasUsed;\n        this.interlinkRootHash = params.interlinkRootHash;\n        this.manifestHash = params.manifestHash;\n        this.number = params.number;\n        this.parentDeltaEntropy = params.parentDeltaEntropy;\n        this.parentEntropy = params.parentEntropy;\n        this.parentHash = params.parentHash;\n        this.parentUncledDeltaEntropy = params.parentUncledDeltaEntropy;\n        this.primeTerminusHash = params.primeTerminusHash;\n        this.quaiStateSize = params.quaiStateSize;\n        this.receiptsRoot = params.receiptsRoot;\n        this.uncleHash = params.uncleHash;\n        this.size = params.size;\n        this.stateLimit = params.stateLimit;\n        this.stateUsed = params.stateUsed;\n        this.thresholdCount = params.thresholdCount;\n        this.transactionsRoot = params.transactionsRoot;\n        this.uncledEntropy = params.uncledEntropy;\n        this.utxoRoot = params.utxoRoot;\n        this.exchangeRate = params.exchangeRate;\n        this.quaiToQi = params.quaiToQi;\n        this.qiToQuai = params.qiToQuai;\n        this.secondaryCoinbase = params.secondaryCoinbase;\n    }\n    toJSON() {\n        return {\n            ...this,\n        };\n    }\n}\n/**\n * Represents the header of a work object.\n *\n * @category Providers\n */\nexport class Uncle {\n    primaryCoinbase;\n    difficulty;\n    headerHash;\n    location;\n    mixHash;\n    nonce;\n    number;\n    parentHash;\n    timestamp;\n    txHash;\n    lock;\n    /**\n     * Creates a new Uncle instance.\n     *\n     * @param {UncleParams} params - The parameters for the Uncle.\n     */\n    constructor(params) {\n        this.primaryCoinbase = params.primaryCoinbase;\n        this.difficulty = params.difficulty;\n        this.headerHash = params.headerHash;\n        this.location = params.location;\n        this.mixHash = params.mixHash;\n        this.nonce = params.nonce;\n        this.number = params.number;\n        this.parentHash = params.parentHash;\n        this.timestamp = params.timestamp;\n        this.txHash = params.txHash;\n        this.lock = params.lock;\n    }\n    toJSON() {\n        return {\n            primaryCoinbase: this.primaryCoinbase,\n            difficulty: this.difficulty,\n            headerHash: this.headerHash,\n            location: this.location,\n            mixHash: this.mixHash,\n            nonce: this.nonce,\n            number: this.number,\n            parentHash: this.parentHash,\n            timestamp: this.timestamp,\n            txHash: this.txHash,\n            lock: this.lock,\n        };\n    }\n}\n/**\n * A **Block** represents the data associated with a full block on Ethereum.\n *\n * @category Providers\n */\nexport class Block {\n    #outboundEtxs;\n    hash;\n    header;\n    interlinkHashes; // New parameter\n    size;\n    subManifest;\n    totalEntropy;\n    #transactions;\n    uncles;\n    woHeader;\n    workShares;\n    /**\n     * The provider connected to the block used to fetch additional details if necessary.\n     */\n    provider;\n    /**\n     * Create a new **Block** object.\n     *\n     * This should generally not be necessary as the unless implementing a low-level library.\n     *\n     * @param {BlockParams} block - The block parameters.\n     * @param {Provider} provider - The provider.\n     */\n    constructor(block, provider) {\n        this.#transactions = block.transactions.map((tx) => {\n            if (typeof tx === 'string') {\n                return tx;\n            }\n            if ('originatingTxHash' in tx) {\n                return new ExternalTransactionResponse(tx, provider);\n            }\n            if ('from' in tx) {\n                return new QuaiTransactionResponse(tx, provider);\n            }\n            return new QiTransactionResponse(tx, provider);\n        });\n        this.#outboundEtxs = block.outboundEtxs.map((tx) => {\n            if (typeof tx !== 'string') {\n                return new ExternalTransactionResponse(tx, provider);\n            }\n            return tx;\n        });\n        this.hash = block.hash;\n        this.header = new BlockHeader(block.header);\n        this.interlinkHashes = block.interlinkHashes;\n        this.size = block.size;\n        this.subManifest = block.subManifest;\n        this.totalEntropy = block.totalEntropy;\n        this.uncles = block.uncles.map((uncle) => {\n            if (typeof uncle === 'string') {\n                return uncle;\n            }\n            return new Uncle(uncle);\n        });\n        this.woHeader = new Uncle(block.woHeader);\n        this.workShares = block.workShares.map((workShare) => {\n            if (typeof workShare === 'string') {\n                return workShare;\n            }\n            return new Uncle(workShare);\n        });\n        this.provider = provider;\n    }\n    /**\n     * Returns the list of transaction hashes, in the order they were executed within the block.\n     *\n     * @returns {ReadonlyArray<string>} The list of transaction hashes.\n     */\n    get transactions() {\n        return this.#transactions.map((tx) => {\n            if (typeof tx === 'string') {\n                return tx;\n            }\n            return tx.hash;\n        });\n    }\n    /**\n     * Returns the list of extended transaction hashes, in the order they were executed within the block.\n     *\n     * @returns {ReadonlyArray<string>} The list of extended transaction hashes.\n     */\n    get outboundEtxs() {\n        return this.#outboundEtxs.map((tx) => {\n            if (typeof tx === 'string') {\n                return tx;\n            }\n            return tx.hash;\n        });\n    }\n    /**\n     * Returns the complete transactions, in the order they were executed within the block.\n     *\n     * This is only available for blocks which prefetched transactions, by passing `true` to `prefetchTxs` into\n     * {@link Provider.getBlock | **getBlock**}.\n     *\n     * @returns {TransactionResponse[]} The list of prefetched transactions.\n     * @throws {Error} If the transactions were not prefetched.\n     */\n    get prefetchedTransactions() {\n        const txs = this.#transactions.slice();\n        // Doesn't matter...\n        if (txs.length === 0) {\n            return [];\n        }\n        // Make sure we prefetched the transactions\n        assert(typeof txs[0] === 'object', 'transactions were not prefetched with block request', 'UNSUPPORTED_OPERATION', {\n            operation: 'transactionResponses()',\n        });\n        return txs;\n    }\n    /**\n     * Returns the complete extended transactions, in the order they were executed within the block.\n     *\n     * This is only available for blocks which prefetched transactions, by passing `true` to `prefetchTxs` into\n     * {@link Provider.getBlock | **getBlock**}.\n     *\n     * @returns {TransactionResponse[]} The list of prefetched extended transactions.\n     * @throws {Error} If the transactions were not prefetched.\n     */\n    get prefetchedExtTransactions() {\n        const txs = this.#outboundEtxs.slice();\n        // Doesn't matter...\n        if (txs.length === 0) {\n            return [];\n        }\n        // Make sure we prefetched the transactions\n        assert(typeof txs[0] === 'object', 'transactions were not prefetched with block request', 'UNSUPPORTED_OPERATION', {\n            operation: 'transactionResponses()',\n        });\n        return txs;\n    }\n    /**\n     * Returns a JSON-friendly value.\n     *\n     * @returns {any} The JSON-friendly value.\n     */\n    toJSON() {\n        const { hash, header, interlinkHashes, size, subManifest, totalEntropy, uncles, woHeader, workShares } = this;\n        // Using getters to retrieve the transactions and extTransactions\n        const transactions = this.transactions;\n        const outboundEtxs = this.outboundEtxs;\n        return {\n            outboundEtxs,\n            hash,\n            header: header.toJSON(),\n            interlinkHashes,\n            transactions,\n            size: size,\n            subManifest,\n            totalEntropy: totalEntropy,\n            uncles: uncles.map((uncle) => {\n                if (typeof uncle === 'string') {\n                    return uncle;\n                }\n                return uncle.toJSON();\n            }),\n            woHeader: woHeader.toJSON(),\n            workShares: workShares.map((workShare) => {\n                if (typeof workShare === 'string') {\n                    return workShare;\n                }\n                return workShare.toJSON();\n            }),\n        };\n    }\n    [Symbol.iterator]() {\n        let index = 0;\n        const txs = this.transactions;\n        return {\n            next: () => {\n                if (index < this.length) {\n                    return {\n                        value: txs[index++],\n                        done: false,\n                    };\n                }\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    /**\n     * The number of transactions in this block.\n     *\n     * @returns {number} The number of transactions.\n     */\n    get length() {\n        return this.#transactions.length;\n    }\n    /**\n     * The [Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date) this block was\n     * included at.\n     *\n     * @returns {null | Date} The date this block was included at, or null if the timestamp is not available.\n     */\n    get date() {\n        const timestampHex = this.woHeader.timestamp;\n        if (!timestampHex) {\n            return null;\n        }\n        const timestamp = parseInt(timestampHex, 16);\n        return new Date(timestamp * 1000);\n    }\n    /**\n     * Get the transaction at `index` within this block.\n     *\n     * @param {number | string} indexOrHash - The index or hash of the transaction.\n     * @returns {Promise<TransactionResponse>} A promise resolving to the transaction.\n     * @throws {Error} If the transaction is not found.\n     */\n    async getTransaction(indexOrHash) {\n        // Find the internal value by its index or hash\n        let tx = undefined;\n        if (typeof indexOrHash === 'number') {\n            tx = this.#transactions[indexOrHash];\n        }\n        else {\n            const hash = indexOrHash.toLowerCase();\n            for (const v of this.#transactions) {\n                if (typeof v === 'string') {\n                    if (v !== hash) {\n                        continue;\n                    }\n                    tx = v;\n                    break;\n                }\n                else {\n                    if (v.hash === hash) {\n                        continue;\n                    }\n                    tx = v;\n                    break;\n                }\n            }\n        }\n        if (tx == null) {\n            throw new Error('no such tx');\n        }\n        if (typeof tx === 'string') {\n            return await this.provider.getTransaction(tx);\n        }\n        else {\n            return tx;\n        }\n    }\n    /**\n     * Get the extended transaction at `index` within this block.\n     *\n     * @param {number | string} indexOrHash - The index or hash of the extended transaction.\n     * @returns {Promise<TransactionResponse>} A promise resolving to the extended transaction.\n     * @throws {Error} If the extended transaction is not found.\n     */\n    async getExtTransaction(indexOrHash) {\n        // Find the internal value by its index or hash\n        let tx = undefined;\n        if (typeof indexOrHash === 'number') {\n            tx = this.#outboundEtxs[indexOrHash];\n        }\n        else {\n            const hash = indexOrHash.toLowerCase();\n            for (const v of this.#outboundEtxs) {\n                if (typeof v === 'string') {\n                    if (v !== hash) {\n                        continue;\n                    }\n                    tx = v;\n                    break;\n                }\n                else {\n                    if (v.hash === hash) {\n                        continue;\n                    }\n                    tx = v;\n                    break;\n                }\n            }\n        }\n        if (tx == null) {\n            throw new Error('no such tx');\n        }\n        if (typeof tx === 'string') {\n            throw new Error(\"External Transaction isn't prefetched\");\n        }\n        else {\n            return tx;\n        }\n    }\n    /**\n     * If a **Block** was fetched with a request to include the transactions this will allow synchronous access to those\n     * transactions.\n     *\n     * If the transactions were not prefetched, this will throw.\n     *\n     * @param {number | string} indexOrHash - The index or hash of the transaction.\n     * @returns {TransactionResponse} The transaction.\n     * @throws {Error} If the transaction is not found.\n     */\n    getPrefetchedTransaction(indexOrHash) {\n        const txs = this.prefetchedTransactions;\n        if (typeof indexOrHash === 'number') {\n            return txs[indexOrHash];\n        }\n        indexOrHash = indexOrHash.toLowerCase();\n        for (const tx of txs) {\n            if (tx.hash === indexOrHash) {\n                return tx;\n            }\n        }\n        assertArgument(false, 'no matching transaction', 'indexOrHash', indexOrHash);\n    }\n    /**\n     * Returns true if this block been mined. This provides a type guard for all properties on a\n     * {@link MinedBlock | **MinedBlock**}.\n     *\n     * @returns {boolean} True if the block has been mined.\n     */\n    isMined() {\n        return !!this.hash;\n    }\n    /**\n     * @ignore\n     */\n    orphanedEvent() {\n        if (!this.isMined() || !this.woHeader.number) {\n            throw new Error('');\n        }\n        return createOrphanedBlockFilter({\n            hash: this.hash,\n            number: parseInt(this.woHeader.number, 16),\n        });\n    }\n}\n//////////////////////\n// Log\n/**\n * A **Log** in Ethereum represents an event that has been included in a transaction using the `LOG*` opcodes, which are\n * most commonly used by Solidity's emit for announcing events.\n *\n * @category Providers\n */\nexport class Log {\n    /**\n     * The provider connected to the log used to fetch additional details if necessary.\n     */\n    provider;\n    /**\n     * The transaction hash of the transaction this log occurred in. Use the\n     * {@link Log.getTransaction | **Log.getTransaction**} to get the\n     * {@link TransactionResponse | **TransactionResponse}.\n     */\n    transactionHash;\n    /**\n     * The block hash of the block this log occurred in. Use the {@link Log.getBlock | **Log.getBlock**} to get the\n     * {@link Block | **Block**}.\n     */\n    blockHash;\n    /**\n     * The block number of the block this log occurred in. It is preferred to use the {@link Block.hash | **Block.hash**}\n     * when fetching the related {@link Block | **Block**}, since in the case of an orphaned block, the block at that\n     * height may have changed.\n     */\n    blockNumber;\n    /**\n     * If the **Log** represents a block that was removed due to an orphaned block, this will be true.\n     *\n     * This can only happen within an orphan event listener.\n     */\n    removed;\n    /**\n     * The address of the contract that emitted this log.\n     */\n    address;\n    /**\n     * The data included in this log when it was emitted.\n     */\n    data;\n    /**\n     * The indexed topics included in this log when it was emitted.\n     *\n     * All topics are included in the bloom filters, so they can be efficiently filtered using the\n     * {@link Provider.getLogs | **Provider.getLogs**} method.\n     */\n    topics;\n    /**\n     * The index within the block this log occurred at. This is generally not useful to developers, but can be used with\n     * the various roots to proof inclusion within a block.\n     */\n    index;\n    /**\n     * The index within the transaction of this log.\n     */\n    transactionIndex;\n    /**\n     * @ignore\n     */\n    constructor(log, provider) {\n        this.provider = provider;\n        const topics = Object.freeze(log.topics.slice());\n        defineProperties(this, {\n            transactionHash: log.transactionHash,\n            blockHash: log.blockHash,\n            blockNumber: log.blockNumber,\n            removed: log.removed,\n            address: log.address,\n            data: log.data,\n            topics,\n            index: log.index,\n            transactionIndex: log.transactionIndex,\n        });\n    }\n    /**\n     * Returns a JSON-compatible object.\n     */\n    toJSON() {\n        const { address, blockHash, blockNumber, data, index, removed, topics, transactionHash, transactionIndex } = this;\n        return {\n            _type: 'log',\n            address,\n            blockHash,\n            blockNumber,\n            data,\n            index,\n            removed,\n            topics,\n            transactionHash,\n            transactionIndex,\n        };\n    }\n    /**\n     * Returns the block that this log occurred in.\n     *\n     * @param {Shard} shard - The shard to fetch the block from.\n     * @returns {Promise<Block>} A promise resolving to the block.\n     */\n    async getBlock(shard) {\n        const block = await this.provider.getBlock(shard, this.blockHash);\n        assert(!!block, 'failed to find transaction', 'UNKNOWN_ERROR', {});\n        return block;\n    }\n    /**\n     * Returns the transaction that this log occurred in.\n     *\n     * @returns {Promise<TransactionResponse>} A promise resolving to the transaction.\n     */\n    async getTransaction() {\n        const tx = await this.provider.getTransaction(this.transactionHash);\n        assert(!!tx, 'failed to find transaction', 'UNKNOWN_ERROR', {});\n        return tx;\n    }\n    /**\n     * Returns the transaction receipt fot the transaction that this log occurred in.\n     *\n     * @returns {Promise<TransactionReceipt>} A promise resolving to the transaction receipt.\n     */\n    async getTransactionReceipt() {\n        const receipt = await this.provider.getTransactionReceipt(this.transactionHash);\n        assert(!!receipt, 'failed to find transaction receipt', 'UNKNOWN_ERROR', {});\n        return receipt;\n    }\n    /**\n     * @ignore\n     */\n    removedEvent() {\n        return createRemovedLogFilter(this);\n    }\n}\n//////////////////////\n// Transaction Receipt\nexport function zoneFromHash(hash) {\n    return toZone(hash.slice(0, 4));\n}\n/**\n * A **TransactionReceipt** includes additional information about a transaction that is only available after it has been\n * mined.\n *\n * @category Providers\n */\nexport class TransactionReceipt {\n    /**\n     * The provider connected to the log used to fetch additional details if necessary.\n     */\n    provider;\n    /**\n     * The address the transaction was sent to.\n     */\n    to;\n    /**\n     * The sender of the transaction.\n     */\n    from;\n    /**\n     * The address of the contract if the transaction was directly responsible for deploying one.\n     *\n     * This is non-null **only** if the `to` is empty and the `data` was successfully executed as initcode.\n     */\n    contractAddress;\n    /**\n     * The transaction hash.\n     */\n    hash;\n    /**\n     * The index of this transaction within the block transactions.\n     */\n    index;\n    /**\n     * The block hash of the {@link Block | **Block**} this transaction was included in.\n     */\n    blockHash;\n    /**\n     * The block number of the {@link Block | **Block**} this transaction was included in.\n     */\n    blockNumber;\n    /**\n     * The bloom filter bytes that represent all logs that occurred within this transaction. This is generally not\n     * useful for most developers, but can be used to validate the included logs.\n     */\n    logsBloom;\n    /**\n     * The actual amount of gas used by this transaction.\n     *\n     * When creating a transaction, the amount of gas that will be used can only be approximated, but the sender must\n     * pay the gas fee for the entire gas limit. After the transaction, the difference is refunded.\n     */\n    gasUsed;\n    /**\n     * The amount of gas used by all transactions within the block for this and all transactions with a lower `index`.\n     *\n     * This is generally not useful for developers but can be used to validate certain aspects of execution.\n     */\n    cumulativeGasUsed;\n    /**\n     * The actual gas price used during execution.\n     *\n     * Due to the complexity of [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559) this value can only be caluclated\n     * after the transaction has been mined, snce the base fee is protocol-enforced.\n     */\n    gasPrice;\n    /**\n     * The [EIP-2718](https://eips.ethereum.org/EIPS/eip-2718) transaction type.\n     */\n    type;\n    //readonly byzantium!: boolean;\n    /**\n     * The status of this transaction, indicating success (i.e. `1`) or a revert (i.e. `0`).\n     *\n     * This is available in post-byzantium blocks, but some backends may backfill this value.\n     */\n    status;\n    /**\n     * The root hash of this transaction.\n     *\n     * This is no present and was only included in pre-byzantium blocks, but could be used to validate certain parts of\n     * the receipt.\n     */\n    #logs;\n    outboundEtxs = [];\n    etxType;\n    originatingTxHash;\n    /**\n     * @ignore\n     */\n    constructor(tx, provider) {\n        this.#logs = Object.freeze(tx.logs.map((log) => {\n            return new Log(log, provider);\n        }));\n        let gasPrice = BN_0;\n        if (tx.effectiveGasPrice != null) {\n            gasPrice = tx.effectiveGasPrice;\n        }\n        else if (tx.gasPrice != null) {\n            gasPrice = tx.gasPrice;\n        }\n        const outboundEtxs = tx.outboundEtxs\n            ? tx.outboundEtxs.map((etx) => {\n                const safeConvert = (value, name) => {\n                    try {\n                        if (value != null) {\n                            return BigInt(value);\n                        }\n                        return null;\n                    }\n                    catch (error) {\n                        console.error(`Conversion to BigInt failed for ${name}: ${value}, error: ${error}`);\n                        return null;\n                    }\n                };\n                return {\n                    type: etx.type,\n                    nonce: etx.nonce,\n                    gasPrice: safeConvert(etx.gasPrice, 'gasPrice'),\n                    minerTip: safeConvert(etx.minerTip, 'minerTip'),\n                    gas: safeConvert(etx.gas, 'gas'),\n                    value: safeConvert(etx.value, 'value'),\n                    input: etx.input,\n                    to: etx.to,\n                    accessList: etx.accessList,\n                    chainId: safeConvert(etx.chainId, 'chainId'),\n                    from: etx.from,\n                    hash: etx.hash,\n                    originatingTxHash: etx.originatingTxHash,\n                    etxIndex: etx.etxIndex,\n                };\n            })\n            : [];\n        defineProperties(this, {\n            provider,\n            to: tx.to,\n            from: tx.from,\n            contractAddress: tx.contractAddress,\n            hash: tx.hash,\n            index: tx.index,\n            blockHash: tx.blockHash,\n            blockNumber: tx.blockNumber,\n            logsBloom: tx.logsBloom,\n            gasUsed: tx.gasUsed,\n            cumulativeGasUsed: tx.cumulativeGasUsed,\n            gasPrice,\n            outboundEtxs: outboundEtxs,\n            type: tx.type,\n            status: tx.status,\n            etxType: tx.etxType,\n            originatingTxHash: tx.originatingTxHash,\n        });\n    }\n    /**\n     * The logs for this transaction.\n     */\n    get logs() {\n        return this.#logs;\n    }\n    /**\n     * Returns a JSON-compatible representation.\n     */\n    toJSON() {\n        const { to, from, contractAddress, hash, index, blockHash, blockNumber, logsBloom, logs, //byzantium,\n        status, outboundEtxs, } = this;\n        return {\n            _type: 'TransactionReceipt',\n            blockHash,\n            blockNumber,\n            contractAddress,\n            cumulativeGasUsed: toJson(this.cumulativeGasUsed),\n            from,\n            gasPrice: toJson(this.gasPrice),\n            gasUsed: toJson(this.gasUsed),\n            hash,\n            index,\n            logs,\n            logsBloom,\n            status,\n            to,\n            outboundEtxs: outboundEtxs ?? [],\n        };\n    }\n    /**\n     * @ignore\n     */\n    get length() {\n        return this.logs.length;\n    }\n    [Symbol.iterator]() {\n        let index = 0;\n        return {\n            next: () => {\n                if (index < this.length) {\n                    return { value: this.logs[index++], done: false };\n                }\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    /**\n     * The total fee for this transaction, in wei.\n     */\n    get fee() {\n        return this.gasUsed * this.gasPrice;\n    }\n    /**\n     * Resolves to the block this transaction occurred in.\n     *\n     * @param {Shard} shard - The shard to fetch the block from.\n     * @returns {Promise<Block>} A promise resolving to the block.\n     * @throws {Error} If the block is not found.\n     */\n    async getBlock(shard) {\n        const block = await this.provider.getBlock(shard, this.blockHash);\n        if (block == null) {\n            throw new Error('TODO');\n        }\n        return block;\n    }\n    /**\n     * Resolves to the transaction this transaction occurred in.\n     *\n     * @returns {Promise<TransactionResponse>} A promise resolving to the transaction.\n     * @throws {Error} If the transaction is not found.\n     */\n    async getTransaction() {\n        const tx = await this.provider.getTransaction(this.hash);\n        if (tx == null) {\n            throw new Error('TODO');\n        }\n        return tx;\n    }\n    /**\n     * Resolves to the return value of the execution of this transaction.\n     *\n     * Support for this feature is limited, as it requires an archive node with the `debug_` or `trace_` API enabled.\n     *\n     * @returns {Promise<string>} A promise resolving to the return value of the transaction.\n     * @throws {Error} If the transaction is not found.\n     */\n    async getResult() {\n        return await this.provider.getTransactionResult(this.hash);\n    }\n    /**\n     * Resolves to the number of confirmations this transaction has.\n     *\n     * @returns {Promise<number>} A promise resolving to the number of confirmations.\n     * @throws {Error} If the block is not found.\n     */\n    async confirmations() {\n        const zone = zoneFromHash(this.hash);\n        return (await this.provider.getBlockNumber(toShard(zone))) - this.blockNumber + 1;\n    }\n    /**\n     * @ignore\n     */\n    removedEvent() {\n        return createRemovedTransactionFilter(this);\n    }\n    /**\n     * @ignore\n     */\n    reorderedEvent(other) {\n        assert(!other || other.isMined(), \"unmined 'other' transction cannot be orphaned\", 'UNSUPPORTED_OPERATION', {\n            operation: 'reorderedEvent(other)',\n        });\n        return createReorderedTransactionFilter(this, other);\n    }\n}\nexport class ExternalTransactionResponse {\n    /**\n     * The provider this is connected to, which will influence how its methods will resolve its async inspection\n     * methods.\n     */\n    provider;\n    /**\n     * The block number of the block that this transaction was included in.\n     *\n     * This is `null` for pending transactions.\n     */\n    blockNumber;\n    /**\n     * The blockHash of the block that this transaction was included in.\n     *\n     * This is `null` for pending transactions.\n     */\n    blockHash;\n    /**\n     * The index within the block that this transaction resides at.\n     */\n    index;\n    /**\n     * The transaction hash.\n     */\n    hash;\n    /**\n     * The [EIP-2718](https://eips.ethereum.org/EIPS/eip-2718) transaction envelope type. This is `0` for legacy\n     * transactions types.\n     */\n    type;\n    /**\n     * The receiver of this transaction.\n     *\n     * If `null`, then the transaction is an initcode transaction. This means the result of executing the\n     * {@link ExternalTransactionResponse.data | **data** } will be deployed as a new contract on chain (assuming it does\n     * not revert) and the address may be computed using [getCreateAddress](../functions/getCreateAddress).\n     */\n    to;\n    /**\n     * The sender of this transaction. It is implicitly computed from the transaction pre-image hash (as the digest) and\n     * the {@link QuaiTransactionResponse.signature | **signature** } using ecrecover.\n     */\n    from;\n    /**\n     * The nonce, which is used to prevent replay attacks and offer a method to ensure transactions from a given sender\n     * are explicitly ordered.\n     *\n     * When sending a transaction, this must be equal to the number of transactions ever sent by\n     * {@link ExternalTransactionResponse.from | **from** }.\n     */\n    nonce;\n    /**\n     * The maximum units of gas this transaction can consume. If execution exceeds this, the entries transaction is\n     * reverted and the sender is charged for the full amount, despite not state changes being made.\n     */\n    gasLimit;\n    /**\n     * The data.\n     */\n    data;\n    /**\n     * The value, in wei. Use [formatEther](../functions/formatEther) to format this value as ether.\n     */\n    value;\n    /**\n     * The chain ID.\n     */\n    chainId;\n    /**\n     * The signature.\n     */\n    signature;\n    /**\n     * The [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930) access list for transaction types that support it,\n     * otherwise `null`.\n     */\n    accessList;\n    etxType;\n    originatingTxHash;\n    sender;\n    etxIndex;\n    startBlock;\n    /**\n     * @ignore\n     */\n    constructor(tx, provider) {\n        this.provider = provider;\n        this.blockNumber = tx.blockNumber != null ? tx.blockNumber : null;\n        this.blockHash = tx.blockHash != null ? tx.blockHash : null;\n        this.hash = tx.hash;\n        this.index = tx.index;\n        this.type = tx.type;\n        this.from = tx.from;\n        this.to = tx.to || null;\n        this.gasLimit = tx.gasLimit;\n        this.nonce = tx.nonce;\n        this.data = tx.data;\n        this.value = tx.value;\n        this.chainId = tx.chainId;\n        this.signature = tx.signature;\n        this.accessList = tx.accessList != null ? tx.accessList : null;\n        this.startBlock = -1;\n        this.originatingTxHash = tx.originatingTxHash != null ? tx.originatingTxHash : null;\n        this.etxType = tx.etxType != null ? tx.etxType : null;\n        this.etxIndex = tx.etxIndex;\n    }\n    /**\n     * Returns a JSON-compatible representation of this transaction.\n     */\n    toJSON() {\n        const { blockNumber, blockHash, index, hash, type, to, from, nonce, data, signature, accessList, etxType, originatingTxHash, etxIndex, } = this;\n        const result = {\n            _type: 'TransactionReceipt',\n            accessList,\n            blockNumber,\n            blockHash,\n            chainId: toJson(this.chainId),\n            data,\n            from,\n            gasLimit: toJson(this.gasLimit),\n            hash,\n            nonce,\n            signature,\n            to,\n            index,\n            type,\n            etxType,\n            originatingTxHash,\n            etxIndex,\n            value: toJson(this.value),\n        };\n        return result;\n    }\n    replaceableTransaction(startBlock) {\n        assertArgument(Number.isInteger(startBlock) && startBlock >= 0, 'invalid startBlock', 'startBlock', startBlock);\n        const tx = new ExternalTransactionResponse(this, this.provider);\n        tx.startBlock = startBlock;\n        return tx;\n    }\n}\n/**\n * A **QuaiTransactionResponse** includes all properties about a Quai transaction that was sent to the network, which\n * may or may not be included in a block.\n *\n * The {@link TransactionResponse.isMined | **TransactionResponse.isMined**} can be used to check if the transaction has\n * been mined as well as type guard that the otherwise possibly `null` properties are defined.\n *\n * @category Providers\n */\nexport class QuaiTransactionResponse {\n    /**\n     * The provider this is connected to, which will influence how its methods will resolve its async inspection\n     * methods.\n     */\n    provider;\n    /**\n     * The block number of the block that this transaction was included in.\n     *\n     * This is `null` for pending transactions.\n     */\n    blockNumber;\n    /**\n     * The blockHash of the block that this transaction was included in.\n     *\n     * This is `null` for pending transactions.\n     */\n    blockHash;\n    /**\n     * The index within the block that this transaction resides at.\n     */\n    index;\n    /**\n     * The transaction hash.\n     */\n    hash;\n    /**\n     * The [EIP-2718](https://eips.ethereum.org/EIPS/eip-2718) transaction envelope type. This is `0` for legacy\n     * transactions types.\n     */\n    type;\n    /**\n     * The receiver of this transaction.\n     *\n     * If `null`, then the transaction is an initcode transaction. This means the result of executing the\n     * {@link QuaiTransactionResponse.data | **data** } will be deployed as a new contract on chain (assuming it does not\n     * revert) and the address may be computed using [getCreateAddress](../functions/getCreateAddress).\n     */\n    to;\n    /**\n     * The sender of this transaction. It is implicitly computed from the transaction pre-image hash (as the digest) and\n     * the {@link QuaiTransactionResponse.signature | **signature** } using ecrecover.\n     */\n    from;\n    /**\n     * The nonce, which is used to prevent replay attacks and offer a method to ensure transactions from a given sender\n     * are explicitly ordered.\n     *\n     * When sending a transaction, this must be equal to the number of transactions ever sent by\n     * {@link QuaiTransactionResponse.from | **from** }.\n     */\n    nonce;\n    /**\n     * The maximum units of gas this transaction can consume. If execution exceeds this, the entries transaction is\n     * reverted and the sender is charged for the full amount, despite not state changes being made.\n     */\n    gasLimit;\n    /**\n     * The maximum priority fee (per unit of gas) to allow a validator to charge the sender. This is inclusive of the\n     * {@link QuaiTransactionResponse.gasPrice | **gasPrice** }.\n     */\n    minerTip;\n    /**\n     * The maximum fee (per unit of gas) to allow this transaction to charge the sender.\n     */\n    gasPrice;\n    /**\n     * The data.\n     */\n    data;\n    /**\n     * The value, in wei. Use [formatEther](../functions/formatEther) to format this value as ether.\n     */\n    value;\n    /**\n     * The chain ID.\n     */\n    chainId;\n    /**\n     * The signature.\n     */\n    signature;\n    /**\n     * The [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930) access list for transaction types that support it,\n     * otherwise `null`.\n     */\n    accessList;\n    etxType;\n    sender;\n    originatingTxHash;\n    startBlock;\n    /**\n     * @ignore\n     */\n    constructor(tx, provider) {\n        this.provider = provider;\n        this.blockNumber = tx.blockNumber != null ? tx.blockNumber : null;\n        this.blockHash = tx.blockHash != null ? tx.blockHash : null;\n        this.hash = tx.hash;\n        this.index = tx.index;\n        this.type = tx.type;\n        this.from = tx.from;\n        this.to = tx.to || null;\n        this.gasLimit = tx.gasLimit;\n        this.nonce = tx.nonce;\n        this.data = tx.data;\n        this.value = tx.value;\n        this.minerTip = tx.minerTip != null ? tx.minerTip : null;\n        this.gasPrice = tx.gasPrice != null ? tx.gasPrice : null;\n        this.chainId = tx.chainId;\n        this.signature = tx.signature;\n        this.accessList = tx.accessList != null ? tx.accessList : null;\n        this.startBlock = -1;\n        this.etxType = tx.etxType != null ? tx.etxType : null;\n    }\n    /**\n     * Returns a JSON-compatible representation of this transaction.\n     */\n    toJSON() {\n        const { blockNumber, blockHash, index, hash, type, to, from, nonce, data, signature, accessList } = this;\n        const result = {\n            _type: 'TransactionReceipt',\n            accessList,\n            blockNumber,\n            blockHash,\n            chainId: toJson(this.chainId),\n            data,\n            from,\n            gasLimit: toJson(this.gasLimit),\n            hash,\n            gasPrice: toJson(this.gasPrice),\n            minerTip: toJson(this.minerTip),\n            nonce,\n            signature,\n            to,\n            index,\n            type,\n            value: toJson(this.value),\n        };\n        return result;\n    }\n    /**\n     * Resolves to the Block that this transaction was included in.\n     *\n     * This will return null if the transaction has not been included yet.\n     *\n     * @param {Shard} shard - The shard to fetch the block from.\n     * @returns {null | Promise<Block>} A promise resolving to the block.\n     */\n    async getBlock(shard) {\n        let blockNumber = this.blockNumber;\n        if (blockNumber == null) {\n            const tx = await this.getTransaction();\n            if (tx) {\n                blockNumber = tx.blockNumber;\n            }\n        }\n        if (blockNumber == null) {\n            return null;\n        }\n        const block = this.provider.getBlock(shard, blockNumber);\n        if (block == null) {\n            throw new Error('TODO');\n        }\n        return block;\n    }\n    /**\n     * Resolves to this transaction being re-requested from the provider. This can be used if you have an unmined\n     * transaction and wish to get an up-to-date populated instance.\n     *\n     * @returns {null | Promise<TransactionResponse>} A promise resolving to the transaction, or null if not found.\n     */\n    async getTransaction() {\n        const transaction = this.provider.getTransaction(this.hash);\n        if (transaction instanceof QuaiTransactionResponse) {\n            return transaction;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Resolve to the number of confirmations this transaction has.\n     *\n     * @returns {Promise<number>} A promise resolving to the number of confirmations.\n     * @throws {Error} If the block is not found.\n     */\n    async confirmations() {\n        const zone = zoneFromHash(this.hash);\n        if (this.blockNumber == null) {\n            const { tx, blockNumber } = await resolveProperties({\n                tx: this.getTransaction(),\n                blockNumber: this.provider.getBlockNumber(toShard(zone)),\n            });\n            // Not mined yet...\n            if (tx == null || tx.blockNumber == null) {\n                return 0;\n            }\n            return blockNumber - tx.blockNumber + 1;\n        }\n        const blockNumber = await this.provider.getBlockNumber(toShard(zone));\n        return blockNumber - this.blockNumber + 1;\n    }\n    /**\n     * Resolves once this transaction has been mined and has `confirms` blocks including it (default: `1`) with an\n     * optional `timeout`.\n     *\n     * This can resolve to `null` only if `confirms` is `0` and the transaction has not been mined, otherwise this will\n     * wait until enough confirmations have completed.\n     *\n     * @param {number} [_confirms] - The number of confirmations to wait for.\n     * @param {number} [_timeout] - The number of milliseconds to wait before rejecting.\n     * @returns {Promise<null | TransactionReceipt>} A promise resolving to the transaction receipt.\n     * @throws {Error} If the transaction was replaced, repriced, or cancelled.\n     */\n    async wait(_confirms, _timeout) {\n        const confirms = _confirms == null ? 1 : _confirms;\n        const timeout = _timeout == null ? 0 : _timeout;\n        let startBlock = this.startBlock;\n        let nextScan = -1;\n        let stopScanning = startBlock === -1 ? true : false;\n        const zone = zoneFromHash(this.hash);\n        const checkReplacement = async () => {\n            // Get the current transaction count for this sender\n            if (stopScanning) {\n                return null;\n            }\n            const { blockNumber, nonce } = await resolveProperties({\n                blockNumber: this.provider.getBlockNumber(toShard(zone)),\n                nonce: this.provider.getTransactionCount(this.from),\n            });\n            // No transaction or our nonce has not been mined yet; but we\n            // can start scanning later when we do start\n            if (nonce < this.nonce) {\n                startBlock = blockNumber;\n                return;\n            }\n            // We were mined; no replacement\n            if (stopScanning) {\n                return null;\n            }\n            const mined = await this.getTransaction();\n            if (mined && mined.blockNumber != null) {\n                return;\n            }\n            // We were replaced; start scanning for that transaction\n            // Starting to scan; look back a few extra blocks for safety\n            if (nextScan === -1) {\n                nextScan = startBlock - 3;\n                if (nextScan < this.startBlock) {\n                    nextScan = this.startBlock;\n                }\n            }\n            while (nextScan <= blockNumber) {\n                // Get the next block to scan\n                if (stopScanning) {\n                    return null;\n                }\n                const block = await this.provider.getBlock(toShard(zone), nextScan, true);\n                // This should not happen; but we'll try again shortly\n                if (block == null) {\n                    return;\n                }\n                // We were mined; no replacement\n                for (const hash of block) {\n                    if (hash === this.hash) {\n                        return;\n                    }\n                }\n                // Search for the transaction that replaced us\n                for (let i = 0; i < block.length; i++) {\n                    const tx = await block.getTransaction(i);\n                    if ('from' in tx && tx.from === this.from && tx.nonce === this.nonce) {\n                        // Get the receipt\n                        if (stopScanning) {\n                            return null;\n                        }\n                        const receipt = await this.provider.getTransactionReceipt(tx.hash);\n                        // This should not happen; but we'll try again shortly\n                        if (receipt == null) {\n                            return;\n                        }\n                        // We will retry this on the next block (this case could be optimized)\n                        if (blockNumber - receipt.blockNumber + 1 < confirms) {\n                            return;\n                        }\n                        // The reason we were replaced\n                        let reason = 'replaced';\n                        if (tx.data === this.data && tx.to === this.to && tx.value === this.value) {\n                            reason = 'repriced';\n                        }\n                        else if (tx.data === '0x' && tx.from === tx.to && tx.value === BN_0) {\n                            reason = 'cancelled';\n                        }\n                        assert(false, 'transaction was replaced', 'TRANSACTION_REPLACED', {\n                            cancelled: reason === 'replaced' || reason === 'cancelled',\n                            reason,\n                            replacement: tx.replaceableTransaction(startBlock),\n                            hash: tx.hash,\n                            receipt,\n                        });\n                    }\n                }\n                nextScan++;\n            }\n            return;\n        };\n        const checkReceipt = (receipt) => {\n            if (receipt == null || receipt.status !== 0) {\n                return receipt;\n            }\n            assert(false, 'transaction execution reverted', 'CALL_EXCEPTION', {\n                action: 'sendTransaction',\n                data: null,\n                reason: null,\n                invocation: null,\n                revert: null,\n                transaction: {\n                    to: receipt.to,\n                    from: receipt.from,\n                    data: '', // @TODO: in v7, split out sendTransaction properties\n                },\n                receipt,\n            });\n        };\n        const receipt = await this.provider.getTransactionReceipt(this.hash);\n        if (confirms === 0) {\n            return checkReceipt(receipt);\n        }\n        if (receipt) {\n            if ((await receipt.confirmations()) >= confirms) {\n                return checkReceipt(receipt);\n            }\n        }\n        else {\n            // Check for a replacement; throws if a replacement was found\n            await checkReplacement();\n            // Allow null only when the confirms is 0\n            if (confirms === 0) {\n                return null;\n            }\n        }\n        const waiter = new Promise((resolve, reject) => {\n            // List of things to cancel when we have a result (one way or the other)\n            const cancellers = [];\n            const cancel = () => {\n                cancellers.forEach((c) => c());\n            };\n            // On cancel, stop scanning for replacements\n            cancellers.push(() => {\n                stopScanning = true;\n            });\n            // Set up any timeout requested\n            if (timeout > 0) {\n                const timer = setTimeout(() => {\n                    cancel();\n                    reject(makeError('wait for transaction timeout', 'TIMEOUT'));\n                }, timeout);\n                cancellers.push(() => {\n                    clearTimeout(timer);\n                });\n            }\n            const txListener = async (receipt) => {\n                // Done; return it!\n                if ((await receipt.confirmations()) >= confirms) {\n                    cancel();\n                    try {\n                        resolve(checkReceipt(receipt));\n                    }\n                    catch (error) {\n                        reject(error);\n                    }\n                }\n            };\n            cancellers.push(() => {\n                this.provider.off(this.hash, txListener);\n            });\n            this.provider.on(this.hash, txListener);\n            // We support replacement detection; start checking\n            if (startBlock >= 0) {\n                const replaceListener = async () => {\n                    try {\n                        // Check for a replacement; this throws only if one is found\n                        await checkReplacement();\n                    }\n                    catch (error) {\n                        // We were replaced (with enough confirms); re-throw the error\n                        if (isError(error, 'TRANSACTION_REPLACED')) {\n                            cancel();\n                            reject(error);\n                            return;\n                        }\n                    }\n                    // Rescheudle a check on the next block\n                    if (!stopScanning) {\n                        this.provider.once('block', replaceListener, zone);\n                    }\n                };\n                cancellers.push(() => {\n                    this.provider.off('block', replaceListener, zone);\n                });\n                this.provider.once('block', replaceListener, zone);\n            }\n        });\n        return await waiter;\n    }\n    /**\n     * Returns `true` if this transaction has been included.\n     *\n     * This is effective only as of the time the TransactionResponse was instantiated. To get up-to-date information,\n     * use {@link QuaiTransactionResponse.getTransaction | **getTransaction**}.\n     *\n     * This provides a Type Guard that this transaction will have non-null property values for properties that are null\n     * for unmined transactions.\n     *\n     * @returns {QuaiMinedTransactionResponse} True if the transaction has been mined.\n     * @throws {Error} If the transaction was replaced, repriced, or cancelled.\n     */\n    isMined() {\n        return this.blockHash != null;\n    }\n    /**\n     * Returns a filter which can be used to listen for orphan events that evict this transaction.\n     *\n     * @returns {OrphanFilter} The orphan filter.\n     */\n    removedEvent() {\n        assert(this.isMined(), 'unmined transaction canot be orphaned', 'UNSUPPORTED_OPERATION', {\n            operation: 'removeEvent()',\n        });\n        return createRemovedTransactionFilter(this);\n    }\n    /**\n     * Returns a filter which can be used to listen for orphan events that re-order this event against `other`.\n     *\n     * @param {TransactionResponse} [other] - The other transaction to compare against.\n     * @returns {OrphanFilter} The orphan filter.\n     */\n    reorderedEvent(other) {\n        assert(this.isMined(), 'unmined transaction canot be orphaned', 'UNSUPPORTED_OPERATION', {\n            operation: 'removeEvent()',\n        });\n        assert(!other || other.isMined(), \"unmined 'other' transaction canot be orphaned\", 'UNSUPPORTED_OPERATION', {\n            operation: 'removeEvent()',\n        });\n        return createReorderedTransactionFilter(this, other);\n    }\n    /**\n     * Returns a new TransactionResponse instance which has the ability to detect (and throw an error) if the\n     * transaction is replaced, which will begin scanning at `startBlock`.\n     *\n     * This should generally not be used by developers and is intended primarily for internal use. Setting an incorrect\n     * `startBlock` can have devastating performance consequences if used incorrectly.\n     *\n     * @param {number} startBlock - The block number to start scanning for replacements.\n     * @returns {QuaiTransactionResponse} The replaceable transaction.\n     */\n    replaceableTransaction(startBlock) {\n        assertArgument(Number.isInteger(startBlock) && startBlock >= 0, 'invalid startBlock', 'startBlock', startBlock);\n        const tx = new QuaiTransactionResponse(this, this.provider);\n        tx.startBlock = startBlock;\n        return tx;\n    }\n}\n/**\n * A **QiTransactionResponse** includes all properties about a Qi transaction that was sent to the network, which may or\n * may not be included in a block.\n *\n * The {@link TransactionResponse.isMined | **TransactionResponse.isMined**} can be used to check if the transaction has\n * been mined as well as type guard that the otherwise possibly `null` properties are defined.\n *\n * @category Providers\n */\nexport class QiTransactionResponse {\n    /**\n     * The provider this is connected to, which will influence how its methods will resolve its async inspection\n     * methods.\n     */\n    provider;\n    /**\n     * The block number of the block that this transaction was included in.\n     *\n     * This is `null` for pending transactions.\n     */\n    blockNumber;\n    /**\n     * The blockHash of the block that this transaction was included in.\n     *\n     * This is `null` for pending transactions.\n     */\n    blockHash;\n    /**\n     * The index within the block that this transaction resides at.\n     */\n    index;\n    /**\n     * The transaction hash.\n     */\n    hash;\n    /**\n     * The [EIP-2718](https://eips.ethereum.org/EIPS/eip-2718) transaction envelope type. This is `0` for legacy\n     * transactions types.\n     */\n    type;\n    /**\n     * The chain ID.\n     */\n    chainId;\n    /**\n     * The signature.\n     */\n    signature;\n    txInputs;\n    txOutputs;\n    startBlock;\n    /**\n     * @ignore\n     */\n    constructor(tx, provider) {\n        this.provider = provider;\n        this.blockNumber = tx.blockNumber != null ? tx.blockNumber : null;\n        this.blockHash = tx.blockHash != null ? tx.blockHash : null;\n        this.hash = tx.hash;\n        this.index = tx.index;\n        this.type = tx.type;\n        this.chainId = tx.chainId;\n        this.signature = tx.signature;\n        this.startBlock = -1;\n        this.txInputs = tx.txInputs;\n        this.txOutputs = tx.txOutputs;\n    }\n    /**\n     * Returns a JSON-compatible representation of this transaction.\n     */\n    toJSON() {\n        const { blockNumber, blockHash, index, hash, type, signature, txInputs, txOutputs } = this;\n        const result = {\n            _type: 'TransactionReceipt',\n            blockNumber,\n            blockHash,\n            chainId: toJson(this.chainId),\n            hash,\n            signature,\n            index,\n            type,\n            txInputs: JSON.parse(JSON.stringify(txInputs)),\n            txOutputs: JSON.parse(JSON.stringify(txOutputs)),\n        };\n        return result;\n    }\n    /**\n     * Resolves to the Block that this transaction was included in.\n     *\n     * This will return null if the transaction has not been included yet.\n     *\n     * @param {Shard} shard - The shard to fetch the block from.\n     * @returns {null | Promise<Block>} A promise resolving to the block or null if not found.\n     */\n    async getBlock(shard) {\n        let blockNumber = this.blockNumber;\n        if (blockNumber == null) {\n            const tx = await this.getTransaction();\n            if (tx) {\n                blockNumber = tx.blockNumber;\n            }\n        }\n        if (blockNumber == null) {\n            return null;\n        }\n        const block = this.provider.getBlock(shard, blockNumber);\n        if (block == null) {\n            throw new Error('TODO');\n        }\n        return block;\n    }\n    /**\n     * Resolves to this transaction being re-requested from the provider. This can be used if you have an unmined\n     * transaction and wish to get an up-to-date populated instance.\n     *\n     * @returns {null | Promise<TransactionResponse>} A promise resolving to the transaction, or null if not found.\n     * @throws {Error} If the transaction is not found.\n     */\n    async getTransaction() {\n        const transaction = this.provider.getTransaction(this.hash);\n        if (transaction instanceof QiTransactionResponse) {\n            return transaction;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Resolve to the number of confirmations this transaction has.\n     *\n     * @returns {Promise<number>} A promise resolving to the number of confirmations.\n     */\n    async confirmations() {\n        const zone = zoneFromHash(this.hash);\n        if (this.blockNumber == null) {\n            const { tx, blockNumber } = await resolveProperties({\n                tx: this.getTransaction(),\n                blockNumber: this.provider.getBlockNumber(toShard(zone)),\n            });\n            // Not mined yet...\n            if (tx == null || tx.blockNumber == null) {\n                return 0;\n            }\n            return blockNumber - tx.blockNumber + 1;\n        }\n        const blockNumber = await this.provider.getBlockNumber(toShard(zone));\n        return blockNumber - this.blockNumber + 1;\n    }\n    /**\n     * Returns `true` if this transaction has been included.\n     *\n     * This is effective only as of the time the TransactionResponse was instantiated. To get up-to-date information,\n     * use {@link QiTransactionResponse.getTransaction | **getTransaction**}.\n     *\n     * This provides a Type Guard that this transaction will have non-null property values for properties that are null\n     * for unmined transactions.\n     *\n     * @returns {QiMinedTransactionResponse} True if the transaction has been mined or false otherwise.\n     */\n    isMined() {\n        return this.blockHash != null;\n    }\n    /**\n     * Returns a filter which can be used to listen for orphan events that evict this transaction.\n     *\n     * @returns {OrphanFilter} The orphan filter.\n     */\n    removedEvent() {\n        assert(this.isMined(), 'unmined transaction canot be orphaned', 'UNSUPPORTED_OPERATION', {\n            operation: 'removeEvent()',\n        });\n        return createRemovedTransactionFilter(this);\n    }\n    /**\n     * Returns a filter which can be used to listen for orphan events that re-order this event against `other`.\n     *\n     * @param {TransactionResponse} [other] - The other transaction to compare against.\n     * @returns {OrphanFilter} The orphan filter.\n     */\n    reorderedEvent(other) {\n        assert(this.isMined(), 'unmined transaction canot be orphaned', 'UNSUPPORTED_OPERATION', {\n            operation: 'removeEvent()',\n        });\n        assert(!other || other.isMined(), \"unmined 'other' transaction canot be orphaned\", 'UNSUPPORTED_OPERATION', {\n            operation: 'removeEvent()',\n        });\n        return createReorderedTransactionFilter(this, other);\n    }\n    /**\n     * Returns a new TransactionResponse instance which has the ability to detect (and throw an error) if the\n     * transaction is replaced, which will begin scanning at `startBlock`.\n     *\n     * This should generally not be used by developers and is intended primarily for internal use. Setting an incorrect\n     * `startBlock` can have devastating performance consequences if used incorrectly.\n     *\n     * @param {number} startBlock - The block number to start scanning for replacements.\n     * @returns {QiTransactionResponse} The replaceable transaction.\n     */\n    replaceableTransaction(startBlock) {\n        assertArgument(Number.isInteger(startBlock) && startBlock >= 0, 'invalid startBlock', 'startBlock', startBlock);\n        const tx = new QiTransactionResponse(this, this.provider);\n        tx.startBlock = startBlock;\n        return tx;\n    }\n}\nfunction createOrphanedBlockFilter(block) {\n    return { orphan: 'drop-block', hash: block.hash, number: block.number };\n}\nfunction createReorderedTransactionFilter(tx, other) {\n    return { orphan: 'reorder-transaction', tx, other };\n}\nfunction createRemovedTransactionFilter(tx) {\n    return { orphan: 'drop-transaction', tx };\n}\nfunction createRemovedLogFilter(log) {\n    return {\n        orphan: 'drop-log',\n        log: {\n            transactionHash: log.transactionHash,\n            blockHash: log.blockHash,\n            blockNumber: log.blockNumber,\n            address: log.address,\n            data: log.data,\n            topics: Object.freeze(log.topics.slice()),\n            index: log.index,\n        },\n    };\n}\nexport function getZoneFromEventFilter(filter) {\n    let zone = null;\n    if (filter.nodeLocation) {\n        zone = getZoneFromNodeLocation(filter.nodeLocation);\n    }\n    else if (filter.address) {\n        let address;\n        if (Array.isArray(filter.address)) {\n            address = filter.address[0];\n        }\n        else {\n            address = filter.address;\n        }\n        const addressZone = getZoneForAddress(address);\n        if (addressZone) {\n            zone = toZone(addressZone);\n        }\n        else {\n            return null;\n        }\n    }\n    return zone;\n}\n//# sourceMappingURL=provider.js.map","// import from provider.ts instead of index.ts to prevent circular dep\n// from quaiscanProvider\nimport { Log, QuaiTransactionResponse, TransactionReceipt } from '../providers/provider.js';\nimport { defineProperties, EventPayload } from '../utils/index.js';\n/**\n * An **EventLog** contains additional properties parsed from the {@link Log | **Log**}.\n *\n * @category Contract\n */\nexport class EventLog extends Log {\n    /**\n     * The Contract Interface.\n     */\n    interface;\n    /**\n     * The matching event.\n     */\n    fragment;\n    /**\n     * The parsed arguments passed to the event by `emit`.\n     */\n    args;\n    /**\n     * @ignore\n     */\n    constructor(log, iface, fragment) {\n        super(log, log.provider);\n        const args = iface.decodeEventLog(fragment, log.data, log.topics);\n        defineProperties(this, { args, fragment, interface: iface });\n    }\n    /**\n     * The name of the event.\n     */\n    get eventName() {\n        return this.fragment.name;\n    }\n    /**\n     * The signature of the event.\n     */\n    get eventSignature() {\n        return this.fragment.format();\n    }\n}\n/**\n * An **EventLog** contains additional properties parsed from the {@link Log | **Log**}.\n *\n * @category Contract\n */\nexport class UndecodedEventLog extends Log {\n    /**\n     * The error encounted when trying to decode the log.\n     */\n    error;\n    /**\n     * @ignore\n     */\n    constructor(log, error) {\n        super(log, log.provider);\n        defineProperties(this, { error });\n    }\n}\n/**\n * A **ContractTransactionReceipt** includes the parsed logs from a {@link TransactionReceipt | **TransactionReceipt**}.\n *\n * @category Contract\n */\nexport class ContractTransactionReceipt extends TransactionReceipt {\n    #iface;\n    /**\n     * @ignore\n     */\n    constructor(iface, provider, tx) {\n        super(tx, provider);\n        this.#iface = iface;\n    }\n    /**\n     * The parsed logs for any {@link Log | **Log**} which has a matching event in the Contract ABI.\n     */\n    get logs() {\n        return super.logs.map((log) => {\n            const fragment = log.topics.length ? this.#iface.getEvent(log.topics[0]) : null;\n            if (fragment) {\n                try {\n                    return new EventLog(log, this.#iface, fragment);\n                }\n                catch (error) {\n                    return new UndecodedEventLog(log, error);\n                }\n            }\n            return log;\n        });\n    }\n}\n/**\n * A **ContractTransactionResponse** will return a {@link ContractTransactionReceipt | **ContractTransactionReceipt**}\n * when waited on.\n *\n * @category Contract\n */\nexport class ContractTransactionResponse extends QuaiTransactionResponse {\n    #iface;\n    /**\n     * @ignore\n     */\n    constructor(iface, provider, tx) {\n        super(tx, provider);\n        this.#iface = iface;\n    }\n    /**\n     * Resolves once this transaction has been mined and has `confirms` blocks including it (default: `1`) with an\n     * optional `timeout`.\n     *\n     * This can resolve to `null` only if `confirms` is `0` and the transaction has not been mined, otherwise this will\n     * wait until enough confirmations have completed.\n     *\n     * @param {number} confirms - The number of confirmations to wait for.\n     * @returns {Promise<ContractTransactionReceipt | null>} The transaction receipt, or `null` if `confirms` is `0`.\n     */\n    async wait(confirms) {\n        const receipt = await super.wait(confirms);\n        if (receipt == null) {\n            return null;\n        }\n        return new ContractTransactionReceipt(this.#iface, this.provider, receipt);\n    }\n}\n/**\n * A **ContractUnknownEventPayload** is included as the last parameter to Contract Events when the event does not match\n * any events in the ABI.\n *\n * @category Contract\n */\nexport class ContractUnknownEventPayload extends EventPayload {\n    /**\n     * The log with no matching events.\n     */\n    log;\n    /**\n     * @ignore\n     */\n    constructor(contract, listener, filter, log) {\n        super(contract, listener, filter);\n        defineProperties(this, { log });\n    }\n    /**\n     * Resolves to the block the event occured in.\n     *\n     * @param {Shard} shard - The shard to get the block from.\n     * @returns {Promise<Block>} A promise resolving to the block the event occured in.\n     */\n    async getBlock(shard) {\n        return await this.log.getBlock(shard);\n    }\n    /**\n     * Resolves to the transaction the event occured in.\n     *\n     * @returns {Promise<TransactionResponse>} A promise resolving to the transaction the event occured in.\n     */\n    async getTransaction() {\n        return await this.log.getTransaction();\n    }\n    /**\n     * Resolves to the transaction receipt the event occured in.\n     *\n     * @returns {Promise<TransactionReceipt>} A promise resolving to the transaction receipt the event occured in.\n     */\n    async getTransactionReceipt() {\n        return await this.log.getTransactionReceipt();\n    }\n}\n/**\n * A **ContractEventPayload** is included as the last parameter to Contract Events when the event is known.\n *\n * @category Contract\n */\nexport class ContractEventPayload extends ContractUnknownEventPayload {\n    /**\n     * @ignore\n     */\n    constructor(contract, listener, filter, fragment, _log) {\n        super(contract, listener, filter, new EventLog(_log, contract.interface, fragment));\n        const args = contract.interface.decodeEventLog(fragment, this.log.data, this.log.topics);\n        defineProperties(this, { args, fragment });\n    }\n    /**\n     * The event name.\n     */\n    get eventName() {\n        return this.fragment.name;\n    }\n    /**\n     * The event signature.\n     */\n    get eventSignature() {\n        return this.fragment.format();\n    }\n}\n//# sourceMappingURL=wrappers.js.map","import { Interface, Typed } from '../abi/index.js';\nimport { isAddressable, resolveAddress, validateAddress } from '../address/index.js';\n// import from provider.ts instead of index.ts to prevent circular dep\n// from quaiscanProvider\nimport { copyRequest, Log, } from '../providers/provider.js';\nimport { defineProperties, getBigInt, isCallException, isHexString, resolveProperties, isError, assert, assertArgument, getZoneForAddress, } from '../utils/index.js';\nimport { ContractEventPayload, ContractUnknownEventPayload, ContractTransactionResponse, EventLog, UndecodedEventLog, } from './wrappers.js';\nimport { getNodeLocationFromZone } from '../utils/shards.js';\nconst BN_0 = BigInt(0);\n/**\n * Check if the value can call transactions.\n *\n * @param {any} value - The value to check.\n * @returns {value is ContractRunnerCaller} True if the value can call transactions.\n */\nfunction canCall(value) {\n    return value && typeof value.call === 'function';\n}\n/**\n * Check if the value can estimate gas.\n *\n * @param {any} value - The value to check.\n * @returns {value is ContractRunnerEstimater} True if the value can estimate gas.\n */\nfunction canEstimate(value) {\n    return value && typeof value.estimateGas === 'function';\n}\n/**\n * Check if the value can send transactions.\n *\n * @param {any} value - The value to check.\n * @returns {value is ContractRunnerSender} True if the value can send transactions.\n */\nfunction canSend(value) {\n    return value && typeof value.sendTransaction === 'function';\n}\n/**\n * Class representing a prepared topic filter.\n *\n * @implements {DeferredTopicFilter}\n */\nclass PreparedTopicFilter {\n    #filter;\n    fragment;\n    /**\n     * @ignore\n     */\n    constructor(contract, fragment, args) {\n        defineProperties(this, { fragment });\n        if (fragment.inputs.length < args.length) {\n            throw new Error('too many arguments');\n        }\n        this.#filter = (async function () {\n            const resolvedArgs = await Promise.all(fragment.inputs.map((param, index) => {\n                const arg = args[index];\n                if (arg == null) {\n                    return null;\n                }\n                return param.walkAsync(args[index], (type, value) => {\n                    if (type === 'address') {\n                        if (Array.isArray(value)) {\n                            return Promise.all(value.map((v) => resolveAddress(v)));\n                        }\n                        return resolveAddress(value);\n                    }\n                    return value;\n                });\n            }));\n            return contract.interface.encodeFilterTopics(fragment, resolvedArgs);\n        })();\n    }\n    /**\n     * Get the topic filter.\n     *\n     * @returns {Promise<TopicFilter>} The topic filter.\n     */\n    getTopicFilter() {\n        return this.#filter;\n    }\n}\n/**\n * Get the runner for a specific feature.\n *\n * @param {any} value - The value to check.\n * @param {keyof ContractRunner} feature - The feature to check for.\n * @returns {null | T} The runner if available, otherwise null.\n */\nfunction getRunner(value, feature) {\n    if (value == null) {\n        return null;\n    }\n    if (typeof value[feature] === 'function') {\n        return value;\n    }\n    if (value.provider && typeof value.provider[feature] === 'function') {\n        return value.provider;\n    }\n    return null;\n}\n/**\n * Get the provider from a contract runner.\n *\n * @param {null | ContractRunner} value - The contract runner.\n * @returns {null | Provider} The provider if available, otherwise null.\n */\nfunction getProvider(value) {\n    if (value == null) {\n        return null;\n    }\n    return value.provider || null;\n}\n/**\n * @ignore Copy Overrides and validate them.\n * @param {any} arg - The argument containing overrides.\n * @param {string[]} [allowed] - The allowed override keys.\n * @returns {Promise<Omit<ContractTransaction, O>>} The copied and validated overrides.\n * @throws {Error} If the overrides are invalid.\n */\nexport async function copyOverrides(arg, allowed) {\n    // Make sure the overrides passed in are a valid overrides object\n    const _overrides = Typed.dereference(arg, 'overrides');\n    assertArgument(typeof _overrides === 'object', 'invalid overrides parameter', 'overrides', arg);\n    // Create a shallow copy (we'll deep-ify anything needed during normalizing)\n    const overrides = copyRequest(_overrides);\n    assertArgument(!('to' in overrides) || overrides.to == null || (allowed || []).indexOf('to') >= 0, 'cannot override to', 'overrides.to', overrides);\n    assertArgument(!('data' in overrides) || overrides.data == null || (allowed || []).indexOf('data') >= 0, 'cannot override data', 'overrides.data', overrides);\n    // Resolve any from\n    if ('from' in overrides && overrides.from) {\n        overrides.from = await overrides.from;\n    }\n    return overrides;\n}\n/**\n * @ignore Resolve Arguments for a contract runner.\n * @param {null | ContractRunner} _runner - The contract runner.\n * @param {ReadonlyArray<ParamType>} inputs - The input parameter types.\n * @param {any[]} args - The arguments to resolve.\n * @returns {Promise<any[]>} The resolved arguments.\n */\nexport async function resolveArgs(_runner, inputs, args) {\n    // Recursively descend into args and resolve any addresses\n    return await Promise.all(inputs.map((param, index) => {\n        return param.walkAsync(args[index], (type, value) => {\n            value = Typed.dereference(value, type);\n            if (type === 'address') {\n                return resolveAddress(value);\n            }\n            return value;\n        });\n    }));\n}\n/**\n * Build a wrapped fallback method for a contract.\n *\n * @param {BaseContract} contract - The contract instance.\n * @returns {WrappedFallback} The wrapped fallback method.\n */\nfunction buildWrappedFallback(contract) {\n    /**\n     * Populate a transaction with overrides.\n     *\n     * @param {Omit<QuaiTransactionRequest, 'to'>} [overrides] - The transaction overrides.\n     * @returns {Promise<ContractTransaction>} The populated transaction.\n     * @throws {Error} If the overrides are invalid.\n     */\n    const populateTransaction = async function (overrides) {\n        // If an overrides was passed in, copy it and normalize the values\n        const tx = await copyOverrides(overrides, ['data']);\n        tx.to = await contract.getAddress();\n        validateAddress(tx.to);\n        if (tx.from) {\n            tx.from = await resolveAddress(tx.from);\n            validateAddress(tx.from);\n        }\n        const iface = contract.interface;\n        const noValue = getBigInt(tx.value || BN_0, 'overrides.value') === BN_0;\n        const noData = (tx.data || '0x') === '0x';\n        if (iface.fallback && !iface.fallback.payable && iface.receive && !noData && !noValue) {\n            assertArgument(false, 'cannot send data to receive or send value to non-payable fallback', 'overrides', overrides);\n        }\n        assertArgument(iface.fallback || noData, 'cannot send data to receive-only contract', 'overrides.data', tx.data);\n        // Only allow payable contracts to set non-zero value\n        const payable = iface.receive || (iface.fallback && iface.fallback.payable);\n        assertArgument(payable || noValue, 'cannot send value to non-payable fallback', 'overrides.value', tx.value);\n        // Only allow fallback contracts to set non-empty data\n        assertArgument(iface.fallback || noData, 'cannot send data to receive-only contract', 'overrides.data', tx.data);\n        return tx;\n    };\n    /**\n     * Perform a static call with the given overrides.\n     *\n     * @param {Omit<QuaiTransactionRequest, 'to'>} [overrides] - The transaction overrides.\n     * @returns {Promise<string>} The result of the static call.\n     * @throws {Error} If the call fails.\n     */\n    const staticCall = async function (overrides) {\n        const runner = getRunner(contract.runner, 'call');\n        assert(canCall(runner), 'contract runner does not support calling', 'UNSUPPORTED_OPERATION', {\n            operation: 'call',\n        });\n        const tx = await populateTransaction(overrides);\n        try {\n            return await runner.call(tx);\n        }\n        catch (error) {\n            if (isCallException(error) && error.data) {\n                throw contract.interface.makeError(error.data, tx);\n            }\n            throw error;\n        }\n    };\n    /**\n     * Send a transaction with the given overrides.\n     *\n     * @param {Omit<QuaiTransactionRequest, 'to'>} [overrides] - The transaction overrides.\n     * @returns {Promise<ContractTransactionResponse>} The transaction response.\n     * @throws {Error} If the transaction fails.\n     */\n    const send = async function (overrides) {\n        const runner = contract.runner;\n        assert(canSend(runner), 'contract runner does not support sending transactions', 'UNSUPPORTED_OPERATION', {\n            operation: 'sendTransaction',\n        });\n        const tx = (await runner.sendTransaction(await populateTransaction(overrides)));\n        const provider = getProvider(contract.runner);\n        // @TODO: the provider can be null; make a custom dummy provider that will throw a\n        // meaningful error\n        return new ContractTransactionResponse(contract.interface, provider, tx);\n    };\n    /**\n     * Estimate the gas required for a transaction with the given overrides.\n     *\n     * @param {Omit<QuaiTransactionRequest, 'to'>} [overrides] - The transaction overrides.\n     * @returns {Promise<bigint>} The estimated gas.\n     * @throws {Error} If the gas estimation fails.\n     */\n    const estimateGas = async function (overrides) {\n        const runner = getRunner(contract.runner, 'estimateGas');\n        assert(canEstimate(runner), 'contract runner does not support gas estimation', 'UNSUPPORTED_OPERATION', {\n            operation: 'estimateGas',\n        });\n        return await runner.estimateGas(await populateTransaction(overrides));\n    };\n    /**\n     * Send a transaction with the given overrides.\n     *\n     * @param {Omit<QuaiTransactionRequest, 'to'>} [overrides] - The transaction overrides.\n     * @returns {Promise<ContractTransactionResponse>} The transaction response.\n     * @throws {Error} If the transaction fails.\n     */\n    const method = async (overrides) => {\n        return await send(overrides);\n    };\n    defineProperties(method, {\n        _contract: contract,\n        estimateGas,\n        populateTransaction,\n        send,\n        staticCall,\n    });\n    return method;\n}\n/**\n * Build a wrapped method for a contract.\n *\n * @param {BaseContract} contract - The contract instance.\n * @param {string} key - The method key.\n * @returns {BaseContractMethod<A, R, D>} The wrapped method.\n */\nfunction buildWrappedMethod(contract, key) {\n    /**\n     * Get the function fragment for the given arguments.\n     *\n     * @param {...ContractMethodArgs<A>} args - The method arguments.\n     * @returns {FunctionFragment} The function fragment.\n     * @throws {Error} If no matching fragment is found.\n     */\n    const getFragment = function (...args) {\n        const fragment = contract.interface.getFunction(key, args);\n        assert(fragment, 'no matching fragment', 'UNSUPPORTED_OPERATION', {\n            operation: 'fragment',\n            info: { key, args },\n        });\n        return fragment;\n    };\n    /**\n     * Populate a transaction with the given arguments.\n     *\n     * @param {...ContractMethodArgs<A>} args - The method arguments.\n     * @returns {Promise<ContractTransaction>} The populated transaction.\n     * @throws {Error} If the arguments are invalid.\n     */\n    const populateTransaction = async function (...args) {\n        const fragment = getFragment(...args);\n        // If an overrides was passed in, copy it and normalize the values\n        let overrides;\n        if (fragment.inputs.length + 1 === args.length) {\n            overrides = await copyOverrides(args.pop());\n            const resolvedArgs = await resolveArgs(contract.runner, fragment.inputs, args);\n            return Object.assign({}, overrides, await resolveProperties({\n                to: contract.getAddress(),\n                data: contract.interface.encodeFunctionData(fragment, resolvedArgs),\n            }));\n        }\n        if (fragment.inputs.length !== args.length) {\n            throw new Error(\"internal error: fragment inputs doesn't match arguments; should not happen\");\n        }\n        const resolvedArgs = await resolveArgs(contract.runner, fragment.inputs, args);\n        return await resolveProperties({\n            to: contract.getAddress(),\n            from: args.pop()?.from,\n            data: contract.interface.encodeFunctionData(fragment, resolvedArgs),\n        });\n    };\n    /**\n     * Perform a static call with the given arguments.\n     *\n     * @param {...ContractMethodArgs<A>} args - The method arguments.\n     * @returns {Promise<R>} The result of the static call.\n     * @throws {Error} If the call fails.\n     */\n    const staticCall = async function (...args) {\n        const result = await staticCallResult(...args);\n        if (result.length === 1) {\n            return result[0];\n        }\n        return result;\n    };\n    /**\n     * Send a transaction with the given arguments.\n     *\n     * @param {...ContractMethodArgs<A>} args - The method arguments.\n     * @returns {Promise<ContractTransactionResponse>} The transaction response.\n     * @throws {Error} If the transaction fails.\n     */\n    const send = async function (...args) {\n        const runner = contract.runner;\n        assert(canSend(runner), 'contract runner does not support sending transactions', 'UNSUPPORTED_OPERATION', {\n            operation: 'sendTransaction',\n        });\n        const pop = await populateTransaction(...args);\n        if (!pop.from && 'address' in runner && typeof runner.address === 'string') {\n            pop.from = await resolveAddress(runner.address);\n        }\n        const tx = (await runner.sendTransaction(await pop));\n        const provider = getProvider(contract.runner);\n        // @TODO: the provider can be null; make a custom dummy provider that will throw a\n        // meaningful error\n        return new ContractTransactionResponse(contract.interface, provider, tx);\n    };\n    /**\n     * Estimate the gas required for a transaction with the given arguments.\n     *\n     * @param {...ContractMethodArgs<A>} args - The method arguments.\n     * @returns {Promise<bigint>} The estimated gas.\n     * @throws {Error} If the gas estimation fails.\n     */\n    const estimateGas = async function (...args) {\n        const runner = getRunner(contract.runner, 'estimateGas');\n        assert(canEstimate(runner), 'contract runner does not support gas estimation', 'UNSUPPORTED_OPERATION', {\n            operation: 'estimateGas',\n        });\n        return await runner.estimateGas(await populateTransaction(...args));\n    };\n    /**\n     * Perform a static call and return the result with the given arguments.\n     *\n     * @param {...ContractMethodArgs<A>} args - The method arguments.\n     * @returns {Promise<Result>} The result of the static call.\n     * @throws {Error} If the call fails.\n     */\n    const staticCallResult = async function (...args) {\n        const runner = getRunner(contract.runner, 'call');\n        assert(canCall(runner), 'contract runner does not support calling', 'UNSUPPORTED_OPERATION', {\n            operation: 'call',\n        });\n        const tx = await populateTransaction(...args);\n        if (!tx.from && 'address' in runner && typeof runner.address === 'string') {\n            tx.from = await resolveAddress(runner.address);\n        }\n        let result = '0x';\n        try {\n            result = await runner.call(tx);\n        }\n        catch (error) {\n            if (isCallException(error) && error.data) {\n                throw contract.interface.makeError(error.data, tx);\n            }\n            throw error;\n        }\n        const fragment = getFragment(...args);\n        return contract.interface.decodeFunctionResult(fragment, result);\n    };\n    /**\n     * Send a transaction or perform a static call based on the method arguments.\n     *\n     * @param {...ContractMethodArgs<A>} args - The method arguments.\n     * @returns {Promise<R | ContractTransactionResponse>} The result of the method call.\n     * @throws {Error} If the method call fails.\n     */\n    const method = async (...args) => {\n        const fragment = getFragment(...args);\n        if (fragment.constant) {\n            return await staticCall(...args);\n        }\n        return await send(...args);\n    };\n    defineProperties(method, {\n        name: contract.interface.getFunctionName(key),\n        _contract: contract,\n        _key: key,\n        getFragment,\n        estimateGas,\n        populateTransaction,\n        send,\n        staticCall,\n        staticCallResult,\n    });\n    // Only works on non-ambiguous keys (refined fragment is always non-ambiguous)\n    Object.defineProperty(method, 'fragment', {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n            const fragment = contract.interface.getFunction(key);\n            assert(fragment, 'no matching fragment', 'UNSUPPORTED_OPERATION', {\n                operation: 'fragment',\n                info: { key },\n            });\n            return fragment;\n        },\n    });\n    return method;\n}\n/**\n * Build a wrapped event for a contract.\n *\n * @param {BaseContract} contract - The contract instance.\n * @param {string} key - The event key.\n * @returns {ContractEvent<A>} The wrapped event.\n */\nfunction buildWrappedEvent(contract, key) {\n    /**\n     * Get the event fragment for the given arguments.\n     *\n     * @param {...ContractEventArgs<A>} args - The event arguments.\n     * @returns {EventFragment} The event fragment.\n     * @throws {Error} If no matching fragment is found.\n     */\n    const getFragment = function (...args) {\n        const fragment = contract.interface.getEvent(key, args);\n        assert(fragment, 'no matching fragment', 'UNSUPPORTED_OPERATION', {\n            operation: 'fragment',\n            info: { key, args },\n        });\n        return fragment;\n    };\n    /**\n     * Create a prepared topic filter for the event.\n     *\n     * @param {...ContractMethodArgs<A>} args - The event arguments.\n     * @returns {PreparedTopicFilter} The prepared topic filter.\n     */\n    const method = function (...args) {\n        return new PreparedTopicFilter(contract, getFragment(...args), args);\n    };\n    defineProperties(method, {\n        name: contract.interface.getEventName(key),\n        _contract: contract,\n        _key: key,\n        getFragment,\n    });\n    // Only works on non-ambiguous keys (refined fragment is always non-ambiguous)\n    Object.defineProperty(method, 'fragment', {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n            const fragment = contract.interface.getEvent(key);\n            assert(fragment, 'no matching fragment', 'UNSUPPORTED_OPERATION', {\n                operation: 'fragment',\n                info: { key },\n            });\n            return fragment;\n        },\n    });\n    return method;\n}\n// The combination of TypeScrype, Private Fields and Proxies makes\n// the world go boom; so we hide variables with some trickery keeping\n// a symbol attached to each BaseContract which its sub-class (even\n// via a Proxy) can reach and use to look up its internal values.\nconst internal = Symbol.for('_quaisInternal_contract');\nconst internalValues = new WeakMap();\n/**\n * Set internal values for a contract.\n *\n * @param {BaseContract} contract - The contract instance.\n * @param {Internal} values - The internal values.\n */\nfunction setInternal(contract, values) {\n    internalValues.set(contract[internal], values);\n}\n/**\n * Get internal values for a contract.\n *\n * @param {BaseContract} contract - The contract instance.\n * @returns {Internal} The internal values.\n */\nfunction getInternal(contract) {\n    return internalValues.get(contract[internal]);\n}\n/**\n * Check if a value is a deferred topic filter.\n *\n * @param {any} value - The value to check.\n * @returns {value is DeferredTopicFilter} True if the value is a deferred topic filter.\n */\nfunction isDeferred(value) {\n    return (value &&\n        typeof value === 'object' &&\n        'getTopicFilter' in value &&\n        typeof value.getTopicFilter === 'function' &&\n        value.fragment);\n}\n/**\n * Get subscription information for an event.\n *\n * @param {BaseContract} contract - The contract instance.\n * @param {ContractEventName} event - The event name.\n * @returns {Promise<{ fragment: null | EventFragment; tag: string; topics: TopicFilter }>} The subscription\n *   information.\n * @throws {Error} If the event name is unknown.\n */\nasync function getSubInfo(contract, event) {\n    let topics;\n    let fragment = null;\n    // Convert named events to topicHash and get the fragment for\n    // events which need deconstructing.\n    if (Array.isArray(event)) {\n        const topicHashify = function (name) {\n            if (isHexString(name, 32)) {\n                return name;\n            }\n            const fragment = contract.interface.getEvent(name);\n            assertArgument(fragment, 'unknown fragment', 'name', name);\n            return fragment.topicHash;\n        };\n        // Array of Topics and Names; e.g. `[ \"0x1234...89ab\", \"Transfer(address)\" ]`\n        topics = event.map((e) => {\n            if (e == null) {\n                return null;\n            }\n            if (Array.isArray(e)) {\n                return e.map(topicHashify);\n            }\n            return topicHashify(e);\n        });\n    }\n    else if (event === '*') {\n        topics = [null];\n    }\n    else if (typeof event === 'string') {\n        if (isHexString(event, 32)) {\n            // Topic Hash\n            topics = [event];\n        }\n        else {\n            // Name or Signature; e.g. `\"Transfer\", `\"Transfer(address)\"`\n            fragment = contract.interface.getEvent(event);\n            assertArgument(fragment, 'unknown fragment', 'event', event);\n            topics = [fragment.topicHash];\n        }\n    }\n    else if (isDeferred(event)) {\n        // Deferred Topic Filter; e.g. `contract.filter.Transfer(from)`\n        topics = await event.getTopicFilter();\n    }\n    else if (event && 'fragment' in event) {\n        // ContractEvent; e.g. `contract.filter.Transfer`\n        fragment = event.fragment;\n        topics = [fragment.topicHash];\n    }\n    else {\n        assertArgument(false, 'unknown event name', 'event', event);\n    }\n    // Normalize topics and sort TopicSets\n    topics = topics.map((t) => {\n        if (t == null) {\n            return null;\n        }\n        if (Array.isArray(t)) {\n            const items = Array.from(new Set(t.map((t) => t.toLowerCase())).values());\n            if (items.length === 1) {\n                return items[0];\n            }\n            items.sort();\n            return items;\n        }\n        return t.toLowerCase();\n    });\n    const tag = topics\n        .map((t) => {\n        if (t == null) {\n            return 'null';\n        }\n        if (Array.isArray(t)) {\n            return t.join('|');\n        }\n        return t;\n    })\n        .join('&');\n    return { fragment, tag, topics };\n}\n/**\n * Check if a contract has a subscription for an event.\n *\n * @param {BaseContract} contract - The contract instance.\n * @param {ContractEventName} event - The event name.\n * @returns {Promise<null | Sub>} The subscription if available, otherwise null.\n */\nasync function hasSub(contract, event) {\n    const { subs } = getInternal(contract);\n    return subs.get((await getSubInfo(contract, event)).tag) || null;\n}\n/**\n * Get a subscription for an event.\n *\n * @param {BaseContract} contract - The contract instance.\n * @param {string} operation - The operation name.\n * @param {ContractEventName} event - The event name.\n * @returns {Promise<Sub>} The subscription.\n * @throws {Error} If the contract runner does not support subscribing.\n */\nasync function getSub(contract, operation, event) {\n    // Make sure our runner can actually subscribe to events\n    const provider = getProvider(contract.runner);\n    assert(provider, 'contract runner does not support subscribing', 'UNSUPPORTED_OPERATION', { operation });\n    const { fragment, tag, topics } = await getSubInfo(contract, event);\n    const { addr, subs } = getInternal(contract);\n    let sub = subs.get(tag);\n    if (!sub) {\n        const address = addr ? addr : contract;\n        const filter = { address, topics };\n        const listener = (log) => {\n            let foundFragment = fragment;\n            if (foundFragment == null) {\n                try {\n                    foundFragment = contract.interface.getEvent(log.topics[0]);\n                    // eslint-disable-next-line no-empty\n                }\n                catch (error) { }\n            }\n            // If fragment is null, we do not deconstruct the args to emit\n            if (foundFragment) {\n                const _foundFragment = foundFragment;\n                const args = fragment ? contract.interface.decodeEventLog(fragment, log.data, log.topics) : [];\n                emit(contract, event, args, (listener) => {\n                    return new ContractEventPayload(contract, listener, event, _foundFragment, log);\n                });\n            }\n            else {\n                emit(contract, event, [], (listener) => {\n                    return new ContractUnknownEventPayload(contract, listener, event, log);\n                });\n            }\n        };\n        const zone = getZoneForAddress(await resolveAddress(address));\n        let starting = [];\n        const start = () => {\n            if (starting.length) {\n                return;\n            }\n            starting.push(provider.on(filter, listener, zone));\n        };\n        const stop = async () => {\n            if (starting.length == 0) {\n                return;\n            }\n            const started = starting;\n            starting = [];\n            await Promise.all(started);\n            provider.off(filter, listener, zone);\n        };\n        sub = { tag, listeners: [], start, stop };\n        subs.set(tag, sub);\n    }\n    return sub;\n}\n/**\n * We use this to ensure one emit resolves before firing the next to ensure correct ordering (note this cannot throw and\n * just adds the notice to the event queue using setTimeout).\n */\nlet lastEmit = Promise.resolve();\n/**\n * Emit an event with the given arguments and payload function.\n *\n * @ignore\n * @param {BaseContract} contract - The contract instance.\n * @param {ContractEventName} event - The event name.\n * @param {any[]} args - The arguments to pass to the listeners.\n * @param {null | PayloadFunc} payloadFunc - The payload function.\n * @returns {Promise<boolean>} Resolves to true if any listeners were called.\n */\nasync function _emit(contract, event, args, payloadFunc) {\n    await lastEmit;\n    const sub = await hasSub(contract, event);\n    if (!sub) {\n        return false;\n    }\n    const count = sub.listeners.length;\n    sub.listeners = sub.listeners.filter(({ listener, once }) => {\n        const passArgs = Array.from(args);\n        if (payloadFunc) {\n            passArgs.push(payloadFunc(once ? null : listener));\n        }\n        try {\n            listener.call(contract, ...passArgs);\n            // eslint-disable-next-line no-empty\n        }\n        catch (error) { }\n        return !once;\n    });\n    if (sub.listeners.length === 0) {\n        sub.stop();\n        getInternal(contract).subs.delete(sub.tag);\n    }\n    return count > 0;\n}\n/**\n * Emit an event with the given arguments and payload function.\n *\n * @param {BaseContract} contract - The contract instance.\n * @param {ContractEventName} event - The event name.\n * @param {any[]} args - The arguments to pass to the listeners.\n * @param {null | PayloadFunc} payloadFunc - The payload function.\n * @returns {Promise<boolean>} Resolves to true if any listeners were called.\n */\nasync function emit(contract, event, args, payloadFunc) {\n    try {\n        await lastEmit;\n        // eslint-disable-next-line no-empty\n    }\n    catch (error) { }\n    const resultPromise = _emit(contract, event, args, payloadFunc);\n    lastEmit = resultPromise;\n    return await resultPromise;\n}\nconst passProperties = ['then'];\n/**\n * Creates a new contract connected to target with the abi and optionally connected to a runner to perform operations on\n * behalf of.\n *\n * @category Contract\n */\nexport class BaseContract {\n    /**\n     * The target to connect to.\n     *\n     * This can be an address or any [Addressable](../interfaces/Addressable), such as another contract. To get the\n     * resolved address, use the `getAddress` method.\n     */\n    target;\n    /**\n     * The contract Interface.\n     */\n    interface;\n    /**\n     * The connected runner. This is generally a [**Provider**](../interfaces/Provider) or a\n     * [**Signer**](../interfaces/Signer), which dictates what operations are supported.\n     *\n     * For example, a **Contract** connected to a [**Provider**](../interfaces/Provider) may only execute read-only\n     * operations.\n     */\n    runner;\n    /**\n     * All the Events available on this contract.\n     */\n    filters;\n    /**\n     * @ignore\n     */\n    [internal];\n    /**\n     * The fallback or receive function if any.\n     */\n    fallback;\n    /**\n     * Creates a new contract connected to `target` with the `abi` and optionally connected to a `runner` to perform\n     * operations on behalf of.\n     *\n     * @ignore\n     */\n    constructor(target, abi, runner, _deployTx) {\n        assertArgument(typeof target === 'string' || isAddressable(target), 'invalid value for Contract target', 'target', target);\n        if (runner == null) {\n            runner = null;\n        }\n        const iface = Interface.from(abi);\n        defineProperties(this, { target, runner, interface: iface });\n        Object.defineProperty(this, internal, { value: {} });\n        let addrPromise;\n        let addr = null;\n        let deployTx = null;\n        if (_deployTx) {\n            const provider = getProvider(runner);\n            // @TODO: the provider can be null; make a custom dummy provider that will throw a\n            // meaningful error\n            deployTx = new ContractTransactionResponse(this.interface, provider, _deployTx);\n        }\n        const subs = new Map();\n        // Resolve the target as the address\n        if (typeof target === 'string') {\n            addr = target;\n            addrPromise = Promise.resolve(target);\n        }\n        else {\n            addrPromise = target.getAddress().then((addr) => {\n                if (addr == null) {\n                    throw new Error('TODO');\n                }\n                getInternal(this).addr = addr;\n                return addr;\n            });\n        }\n        // Set our private values\n        setInternal(this, { addrPromise, addr, deployTx, subs });\n        // Add the event filters\n        const filters = new Proxy({}, {\n            get: (target, prop, receiver) => {\n                // Pass important checks (like `then` for Promise) through\n                if (typeof prop === 'symbol' || passProperties.indexOf(prop) >= 0) {\n                    return Reflect.get(target, prop, receiver);\n                }\n                try {\n                    return this.getEvent(prop);\n                }\n                catch (error) {\n                    if (!isError(error, 'INVALID_ARGUMENT') || error.argument !== 'key') {\n                        throw error;\n                    }\n                }\n                return undefined;\n            },\n            has: (target, prop) => {\n                // Pass important checks (like `then` for Promise) through\n                if (passProperties.indexOf(prop) >= 0) {\n                    return Reflect.has(target, prop);\n                }\n                return Reflect.has(target, prop) || this.interface.hasEvent(String(prop));\n            },\n        });\n        defineProperties(this, { filters });\n        defineProperties(this, {\n            fallback: iface.receive || iface.fallback ? buildWrappedFallback(this) : null,\n        });\n        // Return a Proxy that will respond to functions\n        return new Proxy(this, {\n            get: (target, prop, receiver) => {\n                if (typeof prop === 'symbol' || prop in target || passProperties.indexOf(prop) >= 0) {\n                    return Reflect.get(target, prop, receiver);\n                }\n                // Undefined properties should return undefined\n                try {\n                    return target.getFunction(prop);\n                }\n                catch (error) {\n                    if (!isError(error, 'INVALID_ARGUMENT') || error.argument !== 'key') {\n                        throw error;\n                    }\n                }\n                return undefined;\n            },\n            has: (target, prop) => {\n                if (typeof prop === 'symbol' || prop in target || passProperties.indexOf(prop) >= 0) {\n                    return Reflect.has(target, prop);\n                }\n                return target.interface.hasFunction(prop);\n            },\n        });\n    }\n    /**\n     * Return a new Contract instance with the same target and ABI, but a different `runner`.\n     *\n     * @param {null | ContractRunner} runner - The runner to use.\n     * @returns {BaseContract} The new contract instance.\n     */\n    connect(runner) {\n        return new BaseContract(this.target, this.interface, runner);\n    }\n    /**\n     * Return a new Contract instance with the same ABI and runner, but a different `target`.\n     *\n     * @param {string | Addressable} target - The target to connect to.\n     * @returns {BaseContract} The new contract instance.\n     */\n    attach(target) {\n        return new BaseContract(target, this.interface, this.runner);\n    }\n    /**\n     * Return the resolved address of this Contract.\n     *\n     * @returns {Promise<string>} The resolved address.\n     */\n    async getAddress() {\n        return await getInternal(this).addrPromise;\n    }\n    /**\n     * Return the deployed bytecode or null if no bytecode is found.\n     *\n     * @returns {Promise<null | string>} The deployed bytecode or null.\n     * @throws {Error} If the runner does not support .provider.\n     */\n    async getDeployedCode() {\n        const provider = getProvider(this.runner);\n        assert(provider, 'runner does not support .provider', 'UNSUPPORTED_OPERATION', {\n            operation: 'getDeployedCode',\n        });\n        const code = await provider.getCode(await this.getAddress());\n        if (code === '0x') {\n            return null;\n        }\n        return code;\n    }\n    /**\n     * Resolve to this Contract once the bytecode has been deployed, or resolve immediately if already deployed.\n     *\n     * @returns {Promise<this>} The contract instance.\n     * @throws {Error} If the contract runner does not support .provider.\n     */\n    async waitForDeployment() {\n        // We have the deployment transaction; just use that (throws if deployment fails)\n        const deployTx = this.deploymentTransaction();\n        if (deployTx) {\n            await deployTx.wait();\n            return this;\n        }\n        // Check for code\n        const code = await this.getDeployedCode();\n        if (code != null) {\n            return this;\n        }\n        // Make sure we can subscribe to a provider event\n        const provider = getProvider(this.runner);\n        assert(provider != null, 'contract runner does not support .provider', 'UNSUPPORTED_OPERATION', {\n            operation: 'waitForDeployment',\n        });\n        return new Promise((resolve, reject) => {\n            const checkCode = async () => {\n                try {\n                    const code = await this.getDeployedCode();\n                    if (code != null) {\n                        return resolve(this);\n                    }\n                    provider.once('block', checkCode);\n                }\n                catch (error) {\n                    reject(error);\n                }\n            };\n            checkCode();\n        });\n    }\n    /**\n     * Return the transaction used to deploy this contract.\n     *\n     * This is only available if this instance was returned from a [**ContractFactor**](../classes/ContractFactory).\n     *\n     * @returns The transaction used to deploy this contract or `null`.\n     */\n    deploymentTransaction() {\n        return getInternal(this).deployTx;\n    }\n    /**\n     * Return the function for a given name. This is useful when a contract method name conflicts with a JavaScript name\n     * such as `prototype` or when using a Contract programatically.\n     *\n     * @param {string | FunctionFragment} key - The name of the function to return.\n     * @returns The function for the given name.\n     */\n    getFunction(key) {\n        if (typeof key !== 'string') {\n            key = key.format();\n        }\n        const func = buildWrappedMethod(this, key);\n        return func;\n    }\n    /**\n     * Return the event for a given name. This is useful when a contract event name conflicts with a JavaScript name\n     * such as `prototype` or when using a Contract programatically.\n     *\n     * @param {string | EventFragment} key - The name of the event to return.\n     * @returns The event for the given name.\n     */\n    getEvent(key) {\n        if (typeof key !== 'string') {\n            key = key.format();\n        }\n        return buildWrappedEvent(this, key);\n    }\n    /**\n     * @ignore\n     */\n    // TODO: implement\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async queryTransaction(hash) {\n        throw new Error('@TODO');\n    }\n    /**\n     * Provide historic access to event data for `event` in the range `fromBlock` (default: `0`) to `toBlock` (default:\n     * `\"latest\"`) inclusive.\n     *\n     * @param {Zone} zone - The zone to query.\n     * @param {ContractEventName} event - The event to query.\n     * @param {BlockTag} fromBlock - The block to start querying from.\n     * @param {BlockTag} toBlock - The block to stop querying at.\n     * @returns An array of event logs.\n     */\n    async queryFilter(event, fromBlock, toBlock) {\n        if (fromBlock == null) {\n            fromBlock = 0;\n        }\n        if (toBlock == null) {\n            toBlock = 'latest';\n        }\n        const { addr, addrPromise } = getInternal(this);\n        const address = addr ? addr : await addrPromise;\n        const { fragment, topics } = await getSubInfo(this, event);\n        const zone = getZoneForAddress(address);\n        const filter = { address, topics, fromBlock, toBlock, nodeLocation: getNodeLocationFromZone(zone) };\n        const provider = getProvider(this.runner);\n        assert(provider, 'contract runner does not have a provider', 'UNSUPPORTED_OPERATION', {\n            operation: 'queryFilter',\n        });\n        return (await provider.getLogs(filter)).map((log) => {\n            let foundFragment = fragment;\n            if (foundFragment == null) {\n                try {\n                    foundFragment = this.interface.getEvent(log.topics[0]);\n                    // eslint-disable-next-line no-empty\n                }\n                catch (error) { }\n            }\n            if (foundFragment) {\n                try {\n                    return new EventLog(log, this.interface, foundFragment);\n                }\n                catch (error) {\n                    return new UndecodedEventLog(log, error);\n                }\n            }\n            return new Log(log, provider);\n        });\n    }\n    /**\n     * Add an event `listener` for the `event`.\n     *\n     * @param {ContractEventName} event - The event to listen for.\n     * @param {Listener} listener - The listener to call when the event is emitted.\n     * @returns This contract instance.\n     */\n    async on(event, listener) {\n        const sub = await getSub(this, 'on', event);\n        sub.listeners.push({ listener, once: false });\n        sub.start();\n        return this;\n    }\n    /**\n     * Add an event `listener` for the `event`, but remove the listener after it is fired once.\n     *\n     * @param {ContractEventName} event - The event to listen for.\n     * @param {Listener} listener - The listener to call when the event is emitted.\n     */\n    async once(event, listener) {\n        const sub = await getSub(this, 'once', event);\n        sub.listeners.push({ listener, once: true });\n        sub.start();\n        return this;\n    }\n    /**\n     * Emit an `event` calling all listeners with `args`.\n     *\n     * Resolves to `true` if any listeners were called.\n     *\n     * @param {ContractEventName} event - The event to emit.\n     * @param {any[]} args - The arguments to pass to the listeners.\n     * @returns `true` if any listeners were called.\n     */\n    async emit(event, ...args) {\n        return await emit(this, event, args, null);\n    }\n    /**\n     * Resolves to the number of listeners of `event` or the total number of listeners if unspecified.\n     *\n     * @param {ContractEventName} event - The event to count listeners for.\n     * @returns {number} The number of listeners.\n     */\n    async listenerCount(event) {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) {\n                return 0;\n            }\n            return sub.listeners.length;\n        }\n        const { subs } = getInternal(this);\n        let total = 0;\n        for (const { listeners } of subs.values()) {\n            total += listeners.length;\n        }\n        return total;\n    }\n    /**\n     * Resolves to the listeners subscribed to `event` or all listeners if unspecified.\n     *\n     * @param {ContractEventName} event - The event to get listeners for.\n     * @returns {Listener[]} The listeners.\n     */\n    async listeners(event) {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) {\n                return [];\n            }\n            return sub.listeners.map(({ listener }) => listener);\n        }\n        const { subs } = getInternal(this);\n        let result = [];\n        for (const { listeners } of subs.values()) {\n            result = result.concat(listeners.map(({ listener }) => listener));\n        }\n        return result;\n    }\n    /**\n     * Remove the `listener` from the listeners for `event` or remove all listeners if unspecified.\n     *\n     * @param {ContractEventName} event - The event to remove the listener from.\n     * @param {Listener} listener - The listener to remove.\n     * @returns This contract instance.\n     */\n    async off(event, listener) {\n        const sub = await hasSub(this, event);\n        if (!sub) {\n            return this;\n        }\n        if (listener) {\n            const index = sub.listeners.map(({ listener }) => listener).indexOf(listener);\n            if (index >= 0) {\n                sub.listeners.splice(index, 1);\n            }\n        }\n        if (listener == null || sub.listeners.length === 0) {\n            sub.stop();\n            getInternal(this).subs.delete(sub.tag);\n        }\n        return this;\n    }\n    /**\n     * Remove all the listeners for `event` or remove all listeners if unspecified.\n     *\n     * @param {ContractEventName} event - The event to remove the listeners from.\n     * @returns This contract instance.\n     */\n    async removeAllListeners(event) {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) {\n                return this;\n            }\n            sub.stop();\n            getInternal(this).subs.delete(sub.tag);\n        }\n        else {\n            const { subs } = getInternal(this);\n            for (const { tag, stop } of subs.values()) {\n                stop();\n                subs.delete(tag);\n            }\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link BaseContract.on | **on**}.\n     *\n     * @param {ContractEventName} event - The event to listen for.\n     * @param {Listener} listener - The listener to call when the event is emitted.\n     */\n    async addListener(event, listener) {\n        return await this.on(event, listener);\n    }\n    /**\n     * Alias for {@link BaseContract.off | **off**}.\n     *\n     * @param {ContractEventName} event - The event to remove the listener from.\n     * @param {Listener} listener - The listener to remove.\n     */\n    async removeListener(event, listener) {\n        return await this.off(event, listener);\n    }\n    /**\n     * Create a new Class for the `abi`.\n     *\n     * @param {Interface | InterfaceAbi} abi - The ABI to create the class from.\n     * @returns The new Class for the ABI.\n     */\n    static buildClass(abi) {\n        class CustomContract extends BaseContract {\n            constructor(address, runner = null) {\n                super(address, abi, runner);\n            }\n        }\n        return CustomContract;\n    }\n    /**\n     * Create a new BaseContract with a specified Interface.\n     *\n     * @param {string} target - The target to connect to.\n     * @param {Interface | InterfaceAbi} abi - The ABI to use.\n     * @param {null | ContractRunner} runner - The runner to use.\n     * @returns The new BaseContract.\n     */\n    static from(target, abi, runner) {\n        if (runner == null) {\n            runner = null;\n        }\n        const contract = new this(target, abi, runner);\n        return contract;\n    }\n}\nfunction _ContractBase() {\n    return BaseContract;\n}\n/**\n * A {@link BaseContract | **BaseContract**} with no type guards on its methods or events.\n *\n * @category Contract\n */\nexport class Contract extends _ContractBase() {\n}\n//# sourceMappingURL=contract.js.map","/**\n * Generally the [Wallet](../classes/Wallet) and [JsonRpcSigner](../classes/JsonRpcSigner) and their sub-classes are\n * sufficent for most developers, but this is provided to fascilitate more complex Signers.\n */\nimport { formatMixedCaseChecksumAddress, resolveAddress, validateAddress } from '../address/index.js';\nimport { defineProperties, getBigInt, resolveProperties, assert, assertArgument } from '../utils/index.js';\nimport { addressFromTransactionRequest, copyRequest } from '../providers/provider.js';\nimport { getTxType } from '../utils/index.js';\nimport { QuaiTransaction } from '../transaction/index.js';\nimport { toZone } from '../constants/index.js';\nfunction checkProvider(signer, operation) {\n    if (signer.provider) {\n        return signer.provider;\n    }\n    assert(false, 'missing provider', 'UNSUPPORTED_OPERATION', { operation });\n}\nasync function populate(signer, tx) {\n    const pop = copyRequest(tx);\n    if (pop.to != null) {\n        pop.to = resolveAddress(pop.to);\n        validateAddress(pop.to);\n    }\n    if (pop.from != null) {\n        const from = pop.from;\n        pop.from = await Promise.all([signer.getAddress(), resolveAddress(from)]).then(([address, from]) => {\n            assertArgument(address.toLowerCase() === from.toLowerCase(), 'transaction from mismatch', 'tx.from', from);\n            return address;\n        });\n    }\n    else {\n        pop.from = await signer.getAddress();\n    }\n    validateAddress(pop.from);\n    return await resolveProperties(pop);\n}\n/**\n * An **AbstractSigner** includes most of teh functionality required to get a {@link Signer | **Signer**} working as\n * expected, but requires a few Signer-specific methods be overridden.\n *\n * @category Signers\n */\nexport class AbstractSigner {\n    /**\n     * The provider this signer is connected to.\n     */\n    provider;\n    /**\n     * Creates a new Signer connected to `provider`.\n     */\n    constructor(provider) {\n        defineProperties(this, { provider: provider || null });\n    }\n    /**\n     * @ignore\n     */\n    _getAddress(address) {\n        return resolveAddress(address);\n    }\n    async zoneFromAddress(_address) {\n        const address = this._getAddress(_address);\n        return toZone((await address).slice(0, 4));\n    }\n    async getNonce(blockTag) {\n        return checkProvider(this, 'getTransactionCount').getTransactionCount(await this.getAddress(), blockTag);\n    }\n    async populateCall(tx) {\n        const pop = await populate(this, tx);\n        return pop;\n    }\n    async populateQuaiTransaction(tx) {\n        const provider = checkProvider(this, 'populateTransaction');\n        const zone = await this.zoneFromAddress(tx.from);\n        const pop = (await populate(this, tx));\n        if (pop.type == null) {\n            pop.type = await getTxType(pop.from ?? null, pop.to ?? null);\n        }\n        if (pop.nonce == null) {\n            pop.nonce = await this.getNonce('pending');\n        }\n        if (pop.gasLimit == null) {\n            if (pop.type == 0)\n                pop.gasLimit = await this.estimateGas(pop);\n            else {\n                //Special cases for type 2 tx to bypass address out of scope in the node\n                const temp = pop.to;\n                pop.to = '0x0000000000000000000000000000000000000000';\n                pop.gasLimit = getBigInt(2 * Number(await this.estimateGas(pop)));\n                pop.to = temp;\n            }\n        }\n        // Populate the chain ID\n        const network = await this.provider.getNetwork();\n        if (pop.chainId != null) {\n            const chainId = getBigInt(pop.chainId);\n            assertArgument(chainId === network.chainId, 'transaction chainId mismatch', 'tx.chainId', zone);\n        }\n        else {\n            pop.chainId = network.chainId;\n        }\n        if (pop.gasPrice == null || pop.minerTip == null) {\n            const feeData = await provider.getFeeData(zone, true);\n            if (pop.gasPrice == null) {\n                pop.gasPrice = feeData.gasPrice;\n            }\n            if (pop.minerTip == null) {\n                pop.minerTip = feeData.minerTip || 10n;\n            }\n        }\n        if (pop.data) {\n            if (tx.accessList) {\n                pop.accessList = tx.accessList;\n            }\n            else {\n                pop.accessList = (await this.createAccessList(tx))?.map((it) => {\n                    it.address = formatMixedCaseChecksumAddress(it.address);\n                    return it;\n                });\n            }\n        }\n        //@TOOD: Don't await all over the place; save them up for\n        // the end for better batching\n        return await resolveProperties(pop);\n    }\n    async estimateGas(tx) {\n        return checkProvider(this, 'estimateGas').estimateGas(await this.populateCall(tx));\n    }\n    async createAccessList(tx) {\n        return checkProvider(this, 'createAccessList').createAccessList((await this.populateCall(tx)));\n    }\n    async call(tx) {\n        return checkProvider(this, 'call').call(await this.populateCall(tx));\n    }\n    async sendTransaction(tx) {\n        const provider = checkProvider(this, 'sendTransaction');\n        const zone = await this.zoneFromAddress(addressFromTransactionRequest(tx));\n        const pop = await this.populateQuaiTransaction(tx);\n        const txObj = QuaiTransaction.from(pop);\n        const sender = await this.getAddress();\n        const signedTx = await this.signTransaction(txObj);\n        return await provider.broadcastTransaction(zone, signedTx, sender);\n    }\n}\n/**\n * A **VoidSigner** is a class deisgned to allow an address to be used in any API which accepts a Signer, but for which\n * there are no credentials available to perform any actual signing.\n *\n * This for example allow impersonating an account for the purpose of static calls or estimating gas, but does not allow\n * sending transactions.\n *\n * @category Signers\n */\nexport class VoidSigner extends AbstractSigner {\n    /**\n     * The signer address.\n     */\n    address;\n    /**\n     * Creates a new **VoidSigner** with `address` attached to `provider`.\n     */\n    constructor(address, provider) {\n        super(provider);\n        defineProperties(this, { address });\n    }\n    async getAddress() {\n        return this.address;\n    }\n    connect(provider) {\n        return new VoidSigner(this.address, provider);\n    }\n    #throwUnsupported(suffix, operation) {\n        assert(false, `VoidSigner cannot sign ${suffix}`, 'UNSUPPORTED_OPERATION', { operation });\n    }\n    // TODO: `domain`, `types` and `value` are not used, remove?\n    // TODO: this function only throws, remove?\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async signTransaction(tx) {\n        this.#throwUnsupported('transactions', 'signTransaction');\n    }\n    // TODO: `domain`, `types` and `value` are not used, remove?\n    // TODO: this function only throws, remove?\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async signMessage(message) {\n        this.#throwUnsupported('messages', 'signMessage');\n    }\n    // TODO: `domain`, `types` and `value` are not used, remove?\n    // TODO: this function only throws, remove?\n    async signTypedData(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    domain, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    types, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    value) {\n        this.#throwUnsupported('typed-data', 'signTypedData');\n    }\n}\n//# sourceMappingURL=abstract-signer.js.map","import { getAddress, computeAddress, resolveAddress, validateAddress } from '../address/index.js';\nimport { hashMessage, TypedDataEncoder } from '../hash/index.js';\nimport { AbstractSigner } from '../signers/index.js';\nimport { resolveProperties, assertArgument } from '../utils/index.js';\nimport { QuaiTransaction } from '../transaction/quai-transaction.js';\nimport { keccak256 } from '../crypto/index.js';\n/**\n * The **BaseWallet** is a stream-lined implementation of a {@link AbstractSigner} that operates with a private key.\n *\n * It is preferred to use the {@link Wallet} class, as it offers additional functionality and simplifies loading a\n * variety of JSON formats, Mnemonic Phrases, etc.\n *\n * This class may be of use for those attempting to implement a minimal Signer.\n *\n * @category Wallet\n */\nexport class BaseWallet extends AbstractSigner {\n    /**\n     * The wallet address.\n     *\n     * @type {string}\n     * @readonly\n     */\n    #address;\n    /**\n     * The signing key used for signing payloads.\n     *\n     * @type {SigningKey}\n     * @readonly\n     */\n    #signingKey;\n    /**\n     * Creates a new BaseWallet for `privateKey`, optionally connected to `provider`.\n     *\n     * If `provider` is not specified, only offline methods can be used.\n     *\n     * @param {SigningKey} privateKey - The private key for the wallet.\n     * @param {null | Provider} [provider] - The provider to connect to.\n     */\n    constructor(privateKey, provider) {\n        super(provider);\n        assertArgument(privateKey && typeof privateKey.sign === 'function', 'invalid private key', 'privateKey', '[ REDACTED ]');\n        this.#signingKey = privateKey;\n        this.#address = computeAddress(this.signingKey.publicKey);\n    }\n    // Store private values behind getters to reduce visibility\n    /**\n     * The address of this wallet.\n     *\n     * @type {string}\n     * @readonly\n     */\n    get address() {\n        return this.#address;\n    }\n    /**\n     * The {@link SigningKey | **SigningKey**} used for signing payloads.\n     *\n     * @type {SigningKey}\n     * @readonly\n     */\n    get signingKey() {\n        return this.#signingKey;\n    }\n    /**\n     * The private key for this wallet.\n     *\n     * @type {string}\n     * @readonly\n     */\n    get privateKey() {\n        return this.signingKey.privateKey;\n    }\n    // TODO: `_zone` is not used, should it be removed?\n    /**\n     * Returns the address of this wallet.\n     *\n     * @param {string} [_zone] - The zone (optional).\n     * @returns {Promise<string>} The wallet address.\n     */\n    // eslint-disable-next-line\n    async getAddress(_zone) {\n        return this.#address;\n    }\n    /**\n     * Connects the wallet to a provider.\n     *\n     * @param {null | Provider} provider - The provider to connect to.\n     * @returns {BaseWallet} The connected wallet.\n     */\n    connect(provider) {\n        return new BaseWallet(this.#signingKey, provider);\n    }\n    /**\n     * Signs a transaction.\n     *\n     * @param {QuaiTransactionRequest} tx - The transaction request.\n     * @returns {Promise<string>} The signed transaction.\n     */\n    async signTransaction(tx) {\n        // Replace any Addressable with an address\n        const { to, from } = await resolveProperties({\n            to: tx.to ? resolveAddress(tx.to) : undefined,\n            from: tx.from ? resolveAddress(tx.from) : undefined,\n        });\n        if (to !== undefined) {\n            validateAddress(to);\n            tx.to = to;\n        }\n        if (from !== undefined) {\n            assertArgument(getAddress(from) === this.#address, 'transaction from address mismatch', 'tx.from', from);\n        }\n        else {\n            // No `from` specified, use the wallet's address\n            tx.from = this.#address;\n        }\n        const btx = QuaiTransaction.from(tx);\n        const digest = keccak256(btx.unsignedSerialized);\n        btx.signature = this.signingKey.sign(digest);\n        return btx.serialized;\n    }\n    /**\n     * Signs a message.\n     *\n     * @async\n     * @param {string | Uint8Array} message - The message to sign.\n     * @returns {Promise<string>} The signed message.\n     */\n    async signMessage(message) {\n        return this.signMessageSync(message);\n    }\n    // @TODO: Add a secialized signTx and signTyped sync that enforces\n    // all parameters are known?\n    /**\n     * Returns the signature for `message` signed with this wallet.\n     *\n     * @param {string | Uint8Array} message - The message to sign.\n     * @returns {string} The serialized signature.\n     */\n    signMessageSync(message) {\n        return this.signingKey.sign(hashMessage(message)).serialized;\n    }\n    /**\n     * Signs typed data.\n     *\n     * @async\n     * @param {TypedDataDomain} domain - The domain of the typed data.\n     * @param {Record<string, TypedDataField[]>} types - The types of the typed data.\n     * @param {Record<string, any>} value - The value of the typed data.\n     * @returns {Promise<string>} The signed typed data.\n     */\n    async signTypedData(domain, types, value) {\n        return this.signingKey.sign(TypedDataEncoder.hash(domain, types, value)).serialized;\n    }\n}\n//# sourceMappingURL=base-wallet.js.map","import { assertArgument } from '../utils/index.js';\nconst subsChrs = \" !#$%&'()*+,-./<=>?@[]^_`{|}~\";\nconst Word = /^[a-z]*$/i;\nfunction unfold(words, sep) {\n    let initial = 97;\n    return words.reduce((accum, word) => {\n        if (word === sep) {\n            initial++;\n        }\n        else if (word.match(Word)) {\n            accum.push(String.fromCharCode(initial) + word);\n        }\n        else {\n            initial = 97;\n            accum.push(word);\n        }\n        return accum;\n    }, []);\n}\n/**\n * @ignore\n */\nexport function decode(data, subs) {\n    // Replace all the substitutions with their expanded form\n    for (let i = subsChrs.length - 1; i >= 0; i--) {\n        data = data.split(subsChrs[i]).join(subs.substring(2 * i, 2 * i + 2));\n    }\n    // Get all tle clumps; each suffix, first-increment and second-increment\n    const clumps = [];\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const leftover = data.replace(/(:|([0-9])|([A-Z][a-z]*))/g, (all, item, semi, word) => {\n        if (semi) {\n            for (let i = parseInt(semi); i >= 0; i--) {\n                clumps.push(';');\n            }\n        }\n        else {\n            clumps.push(item.toLowerCase());\n        }\n        return '';\n    });\n    /* c8 ignore start */\n    if (leftover) {\n        throw new Error(`leftovers: ${JSON.stringify(leftover)}`);\n    }\n    /* c8 ignore stop */\n    return unfold(unfold(clumps, ';'), ':');\n}\n/**\n * @ignore\n */\nexport function decodeOwl(data) {\n    assertArgument(data[0] === '0', 'unsupported auwl data', 'data', data);\n    return decode(data.substring(1 + 2 * subsChrs.length), data.substring(1, 1 + 2 * subsChrs.length));\n}\n//# sourceMappingURL=decode-owl.js.map","import { defineProperties } from '../utils/index.js';\n/**\n * A Wordlist represents a collection of language-specific words used to encode and devoce\n * [BIP-39](https://en.bitcoin.it/wiki/BIP_0039) encoded data by mapping words to 11-bit values and vice versa.\n *\n * @category Wordlists\n */\nexport class Wordlist {\n    locale;\n    /**\n     * Creates a new Wordlist instance.\n     *\n     * Sub-classes MUST call this if they provide their own constructor, passing in the locale string of the language.\n     *\n     * Generally there is no need to create instances of a Wordlist, since each language-specific Wordlist creates an\n     * instance and there is no state kept internally, so they are safe to share.\n     */\n    constructor(locale) {\n        defineProperties(this, { locale });\n    }\n    /**\n     * Sub-classes may override this to provide a language-specific method for spliting `phrase` into individual words.\n     *\n     * By default, `phrase` is split using any sequences of white-space as defined by regular expressions (i.e.\n     * `/\\s+/`).\n     *\n     * @param {string} phrase - The phrase to split.\n     * @returns {string[]} The split words in the phrase.\n     */\n    split(phrase) {\n        return phrase.toLowerCase().split(/\\s+/g);\n    }\n    /**\n     * Sub-classes may override this to provider a language-specific method for joining `words` into a phrase.\n     *\n     * By default, `words` are joined by a single space.\n     *\n     * @param {string[]} words - The words to join.\n     * @returns {string} The joined phrase.\n     */\n    join(words) {\n        return words.join(' ');\n    }\n}\n//# sourceMappingURL=wordlist.js.map","// Use the encode-latin.js script to create the necessary\n// data files to be consumed by this class\nimport { id } from '../hash/index.js';\nimport { assertArgument } from '../utils/index.js';\nimport { decodeOwl } from './decode-owl.js';\nimport { Wordlist } from './wordlist.js';\n/**\n * An OWL format Wordlist is an encoding method that exploits the general locality of alphabetically sorted words to\n * achieve a simple but effective means of compression.\n *\n * This class is generally not useful to most developers as it is used mainly internally to keep Wordlists for languages\n * based on ASCII-7 small.\n *\n * If necessary, there are tools within the `generation/` folder to create the necessary data.\n *\n * @category Wordlists\n */\nexport class WordlistOwl extends Wordlist {\n    #data;\n    #checksum;\n    /**\n     * Creates a new Wordlist for `locale` using the OWL `data` and validated against the `checksum`.\n     */\n    constructor(locale, data, checksum) {\n        super(locale);\n        this.#data = data;\n        this.#checksum = checksum;\n        this.#words = null;\n    }\n    /**\n     * The OWL-encoded data.\n     *\n     * @ignore\n     */\n    get _data() {\n        return this.#data;\n    }\n    /**\n     * Decode all the words for the wordlist.\n     */\n    _decodeWords() {\n        return decodeOwl(this.#data);\n    }\n    #words;\n    #loadWords() {\n        if (this.#words == null) {\n            const words = this._decodeWords();\n            // Verify the computed list matches the official list\n            const checksum = id(words.join('\\n') + '\\n');\n            /* c8 ignore start */\n            if (checksum !== this.#checksum) {\n                throw new Error(`BIP39 Wordlist for ${this.locale} FAILED`);\n            }\n            /* c8 ignore stop */\n            this.#words = words;\n        }\n        return this.#words;\n    }\n    getWord(index) {\n        const words = this.#loadWords();\n        assertArgument(index >= 0 && index < words.length, `invalid word index: ${index}`, 'index', index);\n        return words[index];\n    }\n    getWordIndex(word) {\n        return this.#loadWords().indexOf(word);\n    }\n}\n//# sourceMappingURL=wordlist-owl.js.map","import { WordlistOwl } from './wordlist-owl.js';\nconst words = \"0erleonalorenseinceregesticitStanvetearctssi#ch2Athck&tneLl0And#Il.yLeOutO=S|S%b/ra@SurdU'0Ce[Cid|CountCu'Hie=IdOu,-Qui*Ro[TT]T%T*[Tu$0AptDD-tD*[Ju,M.UltV<)Vi)0Rob-0FairF%dRaid0A(EEntRee0Ead0MRRp%tS!_rmBumCoholErtI&LLeyLowMo,O}PhaReadySoT Ways0A>urAz(gOngOuntU'd0Aly,Ch%Ci|G G!GryIm$K!Noun)Nu$O` Sw T&naTiqueXietyY1ArtOlogyPe?P!Pro=Ril1ChCt-EaEnaGueMMedM%MyOundR<+Re,Ri=RowTTefa@Ti,Tw%k0KPe@SaultSetSi,SumeThma0H!>OmTa{T&dT.udeTra@0Ct]D.Gu,NtTh%ToTumn0Era+OcadoOid0AkeA*AyEsomeFulKw?d0Is:ByChel%C#D+GL<)Lc#y~MbooN<aNn RRelyRga(R*lSeS-SketTt!3A^AnAutyCau'ComeEfF%eG(Ha=H(dLie=LowLtN^Nef./TrayTt Twe&Y#d3Cyc!DKeNdOlogyRdR`Tt _{AdeAmeAnketA,EakE[IndOodO[omOu'UeUrUsh_rdAtDyIlMbNeNusOkO,Rd R(gRrowSsTtomUn)XY_{etA(AndA[A=EadEezeI{Id+IefIghtIngIskOccoliOk&OnzeOomO` OwnUsh2Bb!DdyD+tFf$oIldLbLkL!tNd!Nk Rd&Rg R,SS(e[SyTt Y Zz:Bba+B(B!CtusGeKe~LmM aMpNN$N)lNdyNn#NoeNvasNy#Pab!P.$Pta(RRb#RdRgoRpetRryRtSeShS(o/!Su$TT$ogT^Teg%yTt!UghtU'Ut]Ve3Il(gL yM|NsusNturyRe$Rta(_irAlkAmp]An+AosApt Ar+A'AtEapE{Ee'EfErryE,I{&IefIldIm}yOi)Oo'R#-U{!UnkUrn0G?Nnam#Rc!Tiz&TyVil_imApArifyAwAyE<ErkEv I{I|IffImbIn-IpO{OgO'O`OudOwnUbUmpU, Ut^_^A,C#utDeFfeeIlInL!@L%LumnMb(eMeMf%tM-Mm#Mp<yNc tNdu@NfirmNg*[N}@Nsid NtrolNv()OkOlPp PyR$ReRnR*@/Tt#U^UntryUp!Ur'Us(V Yo>_{Ad!AftAmA}AshAt AwlAzyEamEd.EekEwI{etImeIspIt-OpO[Ou^OwdUci$UelUi'Umb!Un^UshYY,$2BeLtu*PPbo?dRiousRr|Rta(R=Sh]/omTe3C!:DMa+MpN)Ng R(gShUght WnY3AlBa>BrisCadeCemb CideCl(eC%a>C*a'ErF&'F(eFyG*eLayLiv M<dMi'Ni$Nti,NyP?tP&dPos.P`PutyRi=ScribeS tSignSkSpair/royTailTe@VelopVi)Vo>3AgramAlAm#dAryCeE'lEtFf G.$Gn.yLemmaNn NosaurRe@RtSag*eScov Sea'ShSmi[S%d Splay/<)V tVideV%)Zzy5Ct%Cum|G~Lph(Ma(Na>NkeyN%OrSeUb!Ve_ftAg#AmaA,-AwEamE[IftIllInkIpI=OpUmY2CkMbNeR(g/T^Ty1Arf1Nam-:G G!RlyRnR`Sily/Sy1HoOlogyOnomy0GeItUca>1F%t0G1GhtTh 2BowD E@r-Eg<tEm|Eph<tEvat%I>Se0B?kBodyBra)Er+Ot]PloyPow Pty0Ab!A@DD![D%'EmyErgyF%)Ga+G(eH<)JoyLi,OughR-hRollSu*T Ti*TryVelope1Isode0U$Uip0AA'OdeOs]R%Upt0CapeSayS&)Ta>0Ern$H-s1Id&)IlOkeOl=1A@Amp!Ce[Ch<+C.eCludeCu'Ecu>Erci'Hau,Hib.I!I,ItOt-P<dPe@Pi*Pla(Po'P*[T&dTra0EEbrow:Br-CeCultyDeIntI`~L'MeMilyMousNNcyNtasyRmSh]TT$Th TigueUltV%.e3Atu*Bru?yD $EEdElMa!N)/iv$T^V W3B Ct]EldGu*LeLmLt N$NdNeNg NishReRmR,Sc$ShTT}[X_gAmeAshAtAv%EeIghtIpOatO{O%Ow UidUshY_mCusGIlLd~owOdOtR)Re,R+tRkRtu}RumRw?dSsil/ UndX_gi!AmeEqu|EshI&dIn+OgOntO,OwnOz&U.2ElNNnyRna)RyTu*:D+tInLaxy~ yMePRa+Rba+Rd&Rl-Rm|SSpTeTh U+Ze3N $NiusN*Nt!Nu(e/u*2O,0AntFtGg!Ng RaffeRlVe_dAn)A*A[IdeImp'ObeOomOryO=OwUe_tDde[LdOdO'RillaSpelSsipV nWn_bA)A(AntApeA[Av.yEatE&IdIefItOc yOupOwUnt_rdE[IdeIltIt?N3M:B.IrLfMm M, NdPpyRb%RdRshR=,TVeWkZ?d3AdAl`ArtAvyD+hogIght~oLmetLpNRo3Dd&Gh~NtPRe/%y5BbyCkeyLdLeLiday~owMeNeyOdPeRnRr%R'Sp.$/TelUrV 5BGeM<Mb!M%Nd*dNgryNtRd!RryRtSb<d3Brid:1EOn0EaEntifyLe2N%e4LLeg$L}[0A+Ita>M&'Mu}Pa@Po'Pro=Pul'0ChCludeComeC*a'DexD-a>Do%Du,ryF<tFl-tF%mHa!H .Iti$Je@JuryMa>N Noc|PutQuiryS<eSe@SideSpi*/$lTa@T e,ToVe,V.eVol=3On0L<dOla>Sue0Em1Ory:CketGu?RZz3AlousAns~yWel9BInKeUr}yY5D+I)MpNg!Ni%Nk/:Ng?oo3EnEpT^upY3CkDD}yNdNgdomSsTT^&TeTt&Wi4EeIfeO{Ow:BBelB%Dd DyKeMpNgua+PtopR+T T(UghUndryVaWWnWsu.Y Zy3Ad AfArnA=Ctu*FtGG$G&dIsu*M#NdNg`NsOp?dSs#Tt Vel3ArB tyBr?yC&'FeFtGhtKeMbM.NkOnQuid/Tt!VeZ?d5AdAnB, C$CkG-NelyNgOpTt yUdUn+VeY$5CkyGga+Mb N?N^Xury3R-s:Ch(eDG-G}tIdIlInJ%KeMm$NNa+Nda>NgoNs]Nu$P!Rb!R^Rg(R(eRketRria+SkSs/ T^T i$ThTrixTt XimumZe3AdowAnAsu*AtCh<-D$DiaLodyLtMb M%yNt]NuRcyR+R.RryShSsa+T$Thod3Dd!DnightLk~]M-NdNimumN%Nu>Rac!Rr%S ySs/akeXXedXtu*5Bi!DelDifyMM|N.%NkeyN, N`OnR$ReRn(gSqu.oTh T]T%Unta(U'VeVie5ChFf(LeLtiplySc!SeumShroomS-/Tu$3Self/ yTh:I=MePk(Rrow/yT]Tu*3ArCkEdGati=G!@I` PhewR=/TTw%kUtr$V WsXt3CeGht5B!I'M(eeOd!Rm$R`SeTab!TeTh(gTi)VelW5C!?Mb R'T:K0EyJe@Li+Scu*S =Ta(Vious0CurE<Tob 0Or1FF Fi)T&2L1Ay0DI=Ymp-0It0CeEI#L(eLy1EnEraIn]Po'T]1An+B.Ch?dD D(?yG<I|Ig($Ph<0Tr-h0H 0Tdo%T TputTside0AlEnEr0NN 0Yg&0/ 0O}:CtDd!GeIrLa)LmNdaNelN-N` P RadeR|RkRrotRtySsT^ThTi|TrolTt nU'VeYm|3A)AnutArAs<tL-<NN$tyNcilOp!Pp Rfe@Rm.Rs#T2O}OtoRa'Ys-$0AnoCn-Ctu*E)GGe#~LotNkO} Pe/olT^Zza_)A}tA,-A>AyEa'Ed+U{UgUn+2EmEtIntL?LeLi)NdNyOlPul?Rt]S.]Ssib!/TatoTt yV tyWd W _@i)Ai'Ed-tEf Epa*Es|EttyEv|I)IdeIm?yIntI%.yIs#Iva>IzeOb!mO)[Odu)Of.OgramOje@Omo>OofOp tyOsp O>@OudOvide2Bl-Dd(g~LpL'Mpk(N^PilPpyR^a'R.yRpo'R'ShTZz!3Ramid:99Al.yAntumArt E,]I{ItIzO>:Bb.Cco#CeCkD?DioIlInI'~yMpN^NdomN+PidReTeTh V&WZ%3AdyAlAs#BelBuildC$lCei=CipeC%dCyc!Du)F!@F%mFu'G]G*tGul?Je@LaxLea'LiefLyMa(Memb M(dMo=Nd NewNtOp&PairPeatPla)P%tQui*ScueSemb!Si,Sour)Sp#'SultTi*T*atTurnUn]Ve$ViewW?d2Y`m0BBb#CeChDeD+F!GhtGidNgOtPp!SkTu$V$V 5AdA,BotBu,CketM<)OfOkieOmSeTa>UghUndU>Y$5Bb DeGLeNNwayR$:DDd!D}[FeIlLadLm#L#LtLu>MeMp!NdTisfyToshiU)Usa+VeY1A!AnA*Att E}HemeHoolI&)I[%sOrp]OutRapRe&RiptRub1AAr^As#AtC#dC*tCt]Cur.yEdEkGm|Le@~M(?Ni%N'Nt&)RiesRvi)Ss]Tt!TupV&_dowAftAllowA*EdEllEriffIeldIftI}IpIv O{OeOotOpOrtOuld O=RimpRugUff!Y0Bl(gCkDeE+GhtGnL|Lk~yLv Mil?Mp!N)NgR&/ Tua>XZe1A>Et^IIllInIrtUll0AbAmEepEnd I)IdeIghtImOg<OtOwUsh0AllArtI!OkeOo`0A{AkeApIffOw0ApCc Ci$CkDaFtL?Ldi LidLut]L=Me#eNgOnRryRtUlUndUpUr)U`0A)A*Ati$AwnEakEci$EedEllEndH eI)Id IkeInIr.L.OilOns%O#OrtOtRayReadR(gY0Ua*UeezeUir*l_b!AdiumAffA+AirsAmpAndArtA>AyEakEelEmEpE*oI{IllIngO{Oma^O}OolOryO=Ra>gyReetRikeR#gRugg!Ud|UffUmb!Y!0Bje@Bm.BwayC)[ChDd&Ff G?G+,ItMm NNnyN'tP PplyP*meReRfa)R+Rpri'RroundR=ySpe@/a(1AllowAmpApArmE?EetIftImIngIt^Ord1MbolMptomRup/em:B!Ck!GIlL|LkNkPeR+tSk/eTtooXi3A^Am~NN<tNnisNtRm/Xt_nkAtEmeEnE%yE*EyIngIsOughtReeRi=RowUmbUnd 0CketDeG LtMb MeNyPRedSsueT!5A,BaccoDayDdl EGe` I!tK&MatoM%rowNeNgueNightOlO`PP-Pp!R^RnadoRtoi'SsT$Uri,W?dW WnY_{AdeAff-Ag-A(Ansf ApAshA=lAyEatEeEndI$IbeI{Igg ImIpOphyOub!U{UeUlyUmpetU,U`Y2BeIt]Mb!NaN}lRkeyRnRt!1El=EntyI)InI,O1PeP-$:5Ly5B*lla0Ab!Awa*C!Cov D DoFairFoldHappyIf%mIqueItIv 'KnownLo{TilUsu$Veil1Da>GradeHoldOnP Set1B<Ge0A+EEdEfulE![U$0Il.y:C<tCuumGueLidL!yL=NNishP%Rious/Ult3H-!L=tNd%Ntu*NueRbRifyRs]RyS'lT <3Ab!Br<tCiousCt%yDeoEw~a+Nta+Ol(Rtu$RusSaS.Su$T$Vid5C$I)IdLc<oLumeTeYa+:GeG#ItLk~LnutNtRfa*RmRri%ShSp/eT VeY3Al`Ap#ArA'lA` BDd(gEk&dIrdLcome/T_!AtEatEelEnE*IpIsp 0DeD`FeLd~NNdowNeNgNkNn Nt ReSdomSeShT}[5LfM<Nd OdOlRdRkRldRryR`_pE{E,!I,I>Ong::Rd3Ar~ow9UUngU`:3BraRo9NeO\";\nconst checksum = '0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60';\nlet wordlist = null;\n/**\n * The [English wordlist](https://github.com/bitcoin/bips/blob/master/bip-0039/english.txt) for [mnemonic\n * phrases](https://en.bitcoin.it/wiki/BIP_0039).\n *\n * @category Wordlists\n */\nexport class LangEn extends WordlistOwl {\n    /**\n     * Creates a new instance of the English language Wordlist.\n     *\n     * This should be unnecessary most of the time as the exported {@link langEn} should suffice.\n     *\n     * @ignore\n     */\n    constructor() {\n        super('en', words, checksum);\n    }\n    /**\n     * Returns a singleton instance of a `LangEn`, creating it if this is the first time being called.\n     */\n    static wordlist() {\n        if (wordlist == null) {\n            wordlist = new LangEn();\n        }\n        return wordlist;\n    }\n}\n//# sourceMappingURL=lang-en.js.map","import { pbkdf2, sha256 } from '../crypto/index.js';\nimport { defineProperties, getBytes, hexlify, assertNormalize, assertPrivate, assertArgument } from '../utils/index.js';\nimport { toUtf8Bytes } from '../encoding/index.js';\nimport { LangEn } from '../wordlists/lang-en.js';\n/**\n * Returns a byte with the MSB bits set.\n *\n * @param {number} bits - The number of bits to set.\n * @returns {number} The byte with the MSB bits set.\n */\nfunction getUpperMask(bits) {\n    return (((1 << bits) - 1) << (8 - bits)) & 0xff;\n}\n/**\n * Returns a byte with the LSB bits set.\n *\n * @param {number} bits - The number of bits to set.\n * @returns {number} The byte with the LSB bits set.\n */\nfunction getLowerMask(bits) {\n    return ((1 << bits) - 1) & 0xff;\n}\n/**\n * Converts a mnemonic phrase to entropy.\n *\n * @param {string} mnemonic - The mnemonic phrase.\n * @param {Wordlist} [wordlist] - The wordlist for the mnemonic.\n * @returns {string} The entropy.\n */\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    assertNormalize('NFKD');\n    if (wordlist == null) {\n        wordlist = LangEn.wordlist();\n    }\n    const words = wordlist.split(mnemonic);\n    assertArgument(words.length % 3 === 0 && words.length >= 12 && words.length <= 24, 'invalid mnemonic length', 'mnemonic', '[ REDACTED ]');\n    const entropy = new Uint8Array(Math.ceil((11 * words.length) / 8));\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        const index = wordlist.getWordIndex(words[i].normalize('NFKD'));\n        assertArgument(index >= 0, `invalid mnemonic word at index ${i}`, 'mnemonic', '[ REDACTED ]');\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= 1 << (7 - (offset % 8));\n            }\n            offset++;\n        }\n    }\n    const entropyBits = (32 * words.length) / 3;\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n    const checksum = getBytes(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n    assertArgument(checksum === (entropy[entropy.length - 1] & checksumMask), 'invalid mnemonic checksum', 'mnemonic', '[ REDACTED ]');\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\n/**\n * Converts entropy to a mnemonic phrase.\n *\n * @param {Uint8Array} entropy - The entropy.\n * @param {Wordlist} [wordlist] - The wordlist for the mnemonic.\n * @returns {string} The mnemonic phrase.\n */\nfunction entropyToMnemonic(entropy, wordlist) {\n    assertArgument(entropy.length % 4 === 0 && entropy.length >= 16 && entropy.length <= 32, 'invalid entropy size', 'entropy', '[ REDACTED ]');\n    if (wordlist == null) {\n        wordlist = LangEn.wordlist();\n    }\n    const indices = [0];\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n            remainingBits -= 8;\n            // This byte will complete an 11-bit index\n        }\n        else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n            remainingBits += 3;\n        }\n    }\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = parseInt(sha256(entropy).substring(2, 4), 16) & getUpperMask(checksumBits);\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= checksum >> (8 - checksumBits);\n    return wordlist.join(indices.map((index) => wordlist.getWord(index)));\n}\nconst _guard = {};\n/**\n * A **Mnemonic** wraps all properties required to compute [BIP-39](https://en.bitcoin.it/wiki/BIP_0039) seeds and\n * convert between phrases and entropy.\n *\n * @category Wallet\n */\nexport class Mnemonic {\n    /**\n     * The mnemonic phrase of 12, 15, 18, 21 or 24 words.\n     *\n     * Use the {@link wordlist | **wordlist**} `split` method to get the individual words.\n     */\n    phrase;\n    /**\n     * The password used for this mnemonic. If no password is used this is the empty string (i.e. `\"\"`) as per the\n     * specification.\n     */\n    password;\n    /**\n     * The wordlist for this mnemonic.\n     */\n    wordlist;\n    /**\n     * The underlying entropy which the mnemonic encodes.\n     */\n    entropy;\n    /**\n     * @param {any} guard - The guard object.\n     * @param {string} entropy - The entropy.\n     * @param {string} phrase - The mnemonic phrase.\n     * @param {string} [password] - The password for the mnemonic.\n     * @param {Wordlist} [wordlist] - The wordlist for the mnemonic.\n     */\n    constructor(guard, entropy, phrase, password, wordlist) {\n        if (password == null) {\n            password = '';\n        }\n        if (wordlist == null) {\n            wordlist = LangEn.wordlist();\n        }\n        assertPrivate(guard, _guard, 'Mnemonic');\n        defineProperties(this, { phrase, password, wordlist, entropy });\n    }\n    /**\n     * Returns the seed for the mnemonic.\n     *\n     * @returns {string} The seed.\n     */\n    computeSeed() {\n        const salt = toUtf8Bytes('mnemonic' + this.password, 'NFKD');\n        return pbkdf2(toUtf8Bytes(this.phrase, 'NFKD'), salt, 2048, 64, 'sha512');\n    }\n    /**\n     * Creates a new Mnemonic for the `phrase`.\n     *\n     * The default `password` is the empty string and the default wordlist is the {@link LangEn | **English wordlist**}.\n     *\n     * @param {string} phrase - The mnemonic phrase.\n     * @param {string} [password] - The password for the mnemonic.\n     * @param {Wordlist} [wordlist] - The wordlist for the mnemonic.\n     * @returns {Mnemonic} The new Mnemonic object.\n     */\n    static fromPhrase(phrase, password, wordlist) {\n        // Normalize the case and space; throws if invalid\n        if (wordlist == null) {\n            wordlist = LangEn.wordlist();\n        }\n        if (password == null) {\n            password = '';\n        }\n        const entropy = mnemonicToEntropy(phrase, wordlist);\n        phrase = entropyToMnemonic(getBytes(entropy), wordlist);\n        return new Mnemonic(_guard, entropy, phrase, password, wordlist);\n    }\n    /**\n     * Create a new **Mnemonic** from the `entropy`.\n     *\n     * The default `password` is the empty string and the default wordlist is the [{@link LangEn | **English wordlist**}.\n     *\n     * @param {BytesLike} _entropy - The entropy for the mnemonic.\n     * @param {string} [password] - The password for the mnemonic.\n     * @param {Wordlist} [wordlist] - The wordlist for the mnemonic.\n     * @returns {Mnemonic} The new Mnemonic object.\n     */\n    static fromEntropy(_entropy, password, wordlist) {\n        if (wordlist == null) {\n            wordlist = LangEn.wordlist();\n        }\n        if (password == null) {\n            password = '';\n        }\n        const entropy = getBytes(_entropy, 'entropy');\n        const phrase = entropyToMnemonic(entropy, wordlist);\n        return new Mnemonic(_guard, hexlify(entropy), phrase, password, wordlist);\n    }\n    /**\n     * Returns the phrase for `mnemonic`.\n     *\n     * @param {BytesLike} _entropy - The entropy for the mnemonic.\n     * @param {Wordlist} [wordlist] - The wordlist for the mnemonic.\n     * @returns {string} The mnemonic phrase.\n     */\n    static entropyToPhrase(_entropy, wordlist) {\n        const entropy = getBytes(_entropy, 'entropy');\n        return entropyToMnemonic(entropy, wordlist);\n    }\n    /**\n     * Returns the entropy for `phrase`.\n     *\n     * @param {string} phrase - The mnemonic phrase.\n     * @param {Wordlist} [wordlist] - The wordlist for the mnemonic.\n     * @returns {string} The entropy.\n     */\n    static phraseToEntropy(phrase, wordlist) {\n        return mnemonicToEntropy(phrase, wordlist);\n    }\n    /**\n     * Returns true if `phrase` is a valid [BIP-39](https://en.bitcoin.it/wiki/BIP_0039) phrase.\n     *\n     * This checks all the provided words belong to the `wordlist`, that the length is valid and the checksum is\n     * correct.\n     *\n     * @param {string} phrase - The mnemonic phrase.\n     * @param {Wordlist} [wordlist] - The wordlist for the mnemonic.\n     * @returns {boolean} True if the phrase is valid.\n     * @throws {Error} If the phrase is invalid.\n     */\n    static isValidMnemonic(phrase, wordlist) {\n        try {\n            mnemonicToEntropy(phrase, wordlist);\n            return true;\n            // eslint-disable-next-line no-empty\n        }\n        catch (error) { }\n        return false;\n    }\n}\n//# sourceMappingURL=mnemonic.js.map","/*! MIT License. Copyright 2015-2022 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _AES_key, _AES_Kd, _AES_Ke;\n// Number of rounds by keysize\nconst numberOfRounds = { 16: 10, 24: 12, 32: 14 };\n// Round constant words\nconst rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n// S-box and Inverse S-box (S is for Substitution)\nconst S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\nconst Si = [0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n// Transformations for encryption\nconst T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\nconst T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\nconst T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\nconst T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n// Transformations for decryption\nconst T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\nconst T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\nconst T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\nconst T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n// Transformations for decryption key expansion\nconst U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\nconst U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\nconst U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\nconst U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\nfunction convertToInt32(bytes) {\n    const result = [];\n    for (let i = 0; i < bytes.length; i += 4) {\n        result.push((bytes[i] << 24) | (bytes[i + 1] << 16) | (bytes[i + 2] << 8) | bytes[i + 3]);\n    }\n    return result;\n}\nexport class AES {\n    get key() { return __classPrivateFieldGet(this, _AES_key, \"f\").slice(); }\n    constructor(key) {\n        _AES_key.set(this, void 0);\n        _AES_Kd.set(this, void 0);\n        _AES_Ke.set(this, void 0);\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n        __classPrivateFieldSet(this, _AES_key, new Uint8Array(key), \"f\");\n        const rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new TypeError('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n        // encryption round keys\n        __classPrivateFieldSet(this, _AES_Ke, [], \"f\");\n        // decryption round keys\n        __classPrivateFieldSet(this, _AES_Kd, [], \"f\");\n        for (let i = 0; i <= rounds; i++) {\n            __classPrivateFieldGet(this, _AES_Ke, \"f\").push([0, 0, 0, 0]);\n            __classPrivateFieldGet(this, _AES_Kd, \"f\").push([0, 0, 0, 0]);\n        }\n        const roundKeyCount = (rounds + 1) * 4;\n        const KC = this.key.length / 4;\n        // convert the key into ints\n        const tk = convertToInt32(this.key);\n        // copy values into round key arrays\n        let index;\n        for (let i = 0; i < KC; i++) {\n            index = i >> 2;\n            __classPrivateFieldGet(this, _AES_Ke, \"f\")[index][i % 4] = tk[i];\n            __classPrivateFieldGet(this, _AES_Kd, \"f\")[rounds - index][i % 4] = tk[i];\n        }\n        // key expansion (fips-197 section 5.2)\n        let rconpointer = 0;\n        let t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                (S[(tt >> 8) & 0xFF] << 16) ^\n                (S[tt & 0xFF] << 8) ^\n                S[(tt >> 24) & 0xFF] ^\n                (rcon[rconpointer] << 24));\n            rconpointer += 1;\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (let i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            }\n            else {\n                for (let i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n                tk[KC / 2] ^= (S[tt & 0xFF] ^\n                    (S[(tt >> 8) & 0xFF] << 8) ^\n                    (S[(tt >> 16) & 0xFF] << 16) ^\n                    (S[(tt >> 24) & 0xFF] << 24));\n                for (let i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n            // copy values into round key arrays\n            let i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                __classPrivateFieldGet(this, _AES_Ke, \"f\")[r][c] = tk[i];\n                __classPrivateFieldGet(this, _AES_Kd, \"f\")[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (let r = 1; r < rounds; r++) {\n            for (let c = 0; c < 4; c++) {\n                tt = __classPrivateFieldGet(this, _AES_Kd, \"f\")[r][c];\n                __classPrivateFieldGet(this, _AES_Kd, \"f\")[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                    U2[(tt >> 16) & 0xFF] ^\n                    U3[(tt >> 8) & 0xFF] ^\n                    U4[tt & 0xFF]);\n            }\n        }\n    }\n    encrypt(plaintext) {\n        if (plaintext.length != 16) {\n            throw new TypeError('invalid plaintext size (must be 16 bytes)');\n        }\n        const rounds = __classPrivateFieldGet(this, _AES_Ke, \"f\").length - 1;\n        const a = [0, 0, 0, 0];\n        // convert plaintext to (ints ^ key)\n        let t = convertToInt32(plaintext);\n        for (let i = 0; i < 4; i++) {\n            t[i] ^= __classPrivateFieldGet(this, _AES_Ke, \"f\")[0][i];\n        }\n        // apply round transforms\n        for (let r = 1; r < rounds; r++) {\n            for (let i = 0; i < 4; i++) {\n                a[i] = (T1[(t[i] >> 24) & 0xff] ^\n                    T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                    T3[(t[(i + 2) % 4] >> 8) & 0xff] ^\n                    T4[t[(i + 3) % 4] & 0xff] ^\n                    __classPrivateFieldGet(this, _AES_Ke, \"f\")[r][i]);\n            }\n            t = a.slice();\n        }\n        // the last round is special\n        const result = new Uint8Array(16);\n        let tt = 0;\n        for (let i = 0; i < 4; i++) {\n            tt = __classPrivateFieldGet(this, _AES_Ke, \"f\")[rounds][i];\n            result[4 * i] = (S[(t[i] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >> 8) & 0xff] ^ (tt >> 8)) & 0xff;\n            result[4 * i + 3] = (S[t[(i + 3) % 4] & 0xff] ^ tt) & 0xff;\n        }\n        return result;\n    }\n    decrypt(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new TypeError('invalid ciphertext size (must be 16 bytes)');\n        }\n        const rounds = __classPrivateFieldGet(this, _AES_Kd, \"f\").length - 1;\n        const a = [0, 0, 0, 0];\n        // convert plaintext to (ints ^ key)\n        let t = convertToInt32(ciphertext);\n        for (let i = 0; i < 4; i++) {\n            t[i] ^= __classPrivateFieldGet(this, _AES_Kd, \"f\")[0][i];\n        }\n        // apply round transforms\n        for (let r = 1; r < rounds; r++) {\n            for (let i = 0; i < 4; i++) {\n                a[i] = (T5[(t[i] >> 24) & 0xff] ^\n                    T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                    T7[(t[(i + 2) % 4] >> 8) & 0xff] ^\n                    T8[t[(i + 1) % 4] & 0xff] ^\n                    __classPrivateFieldGet(this, _AES_Kd, \"f\")[r][i]);\n            }\n            t = a.slice();\n        }\n        // the last round is special\n        const result = new Uint8Array(16);\n        let tt = 0;\n        for (let i = 0; i < 4; i++) {\n            tt = __classPrivateFieldGet(this, _AES_Kd, \"f\")[rounds][i];\n            result[4 * i] = (Si[(t[i] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >> 8) & 0xff] ^ (tt >> 8)) & 0xff;\n            result[4 * i + 3] = (Si[t[(i + 1) % 4] & 0xff] ^ tt) & 0xff;\n        }\n        return result;\n    }\n}\n_AES_key = new WeakMap(), _AES_Kd = new WeakMap(), _AES_Ke = new WeakMap();\n//# sourceMappingURL=aes.js.map","import { AES } from \"./aes.js\";\nexport class ModeOfOperation {\n    constructor(name, key, cls) {\n        if (cls && !(this instanceof cls)) {\n            throw new Error(`${name} must be instantiated with \"new\"`);\n        }\n        Object.defineProperties(this, {\n            aes: { enumerable: true, value: new AES(key) },\n            name: { enumerable: true, value: name }\n        });\n    }\n}\n//# sourceMappingURL=mode.js.map","// Counter Mode\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CTR_remaining, _CTR_remainingIndex, _CTR_counter;\nimport { ModeOfOperation } from \"./mode.js\";\nexport class CTR extends ModeOfOperation {\n    constructor(key, initialValue) {\n        super(\"CTR\", key, CTR);\n        // Remaining bytes for the one-time pad\n        _CTR_remaining.set(this, void 0);\n        _CTR_remainingIndex.set(this, void 0);\n        // The current counter\n        _CTR_counter.set(this, void 0);\n        __classPrivateFieldSet(this, _CTR_counter, new Uint8Array(16), \"f\");\n        __classPrivateFieldGet(this, _CTR_counter, \"f\").fill(0);\n        __classPrivateFieldSet(this, _CTR_remaining, __classPrivateFieldGet(this, _CTR_counter, \"f\"), \"f\"); // This will be discarded immediately\n        __classPrivateFieldSet(this, _CTR_remainingIndex, 16, \"f\");\n        if (initialValue == null) {\n            initialValue = 1;\n        }\n        if (typeof (initialValue) === \"number\") {\n            this.setCounterValue(initialValue);\n        }\n        else {\n            this.setCounterBytes(initialValue);\n        }\n    }\n    get counter() { return new Uint8Array(__classPrivateFieldGet(this, _CTR_counter, \"f\")); }\n    setCounterValue(value) {\n        if (!Number.isInteger(value) || value < 0 || value > Number.MAX_SAFE_INTEGER) {\n            throw new TypeError(\"invalid counter initial integer value\");\n        }\n        for (let index = 15; index >= 0; --index) {\n            __classPrivateFieldGet(this, _CTR_counter, \"f\")[index] = value % 256;\n            value = Math.floor(value / 256);\n        }\n    }\n    setCounterBytes(value) {\n        if (value.length !== 16) {\n            throw new TypeError(\"invalid counter initial Uint8Array value length\");\n        }\n        __classPrivateFieldGet(this, _CTR_counter, \"f\").set(value);\n    }\n    increment() {\n        for (let i = 15; i >= 0; i--) {\n            if (__classPrivateFieldGet(this, _CTR_counter, \"f\")[i] === 255) {\n                __classPrivateFieldGet(this, _CTR_counter, \"f\")[i] = 0;\n            }\n            else {\n                __classPrivateFieldGet(this, _CTR_counter, \"f\")[i]++;\n                break;\n            }\n        }\n    }\n    encrypt(plaintext) {\n        var _a, _b;\n        const crypttext = new Uint8Array(plaintext);\n        for (let i = 0; i < crypttext.length; i++) {\n            if (__classPrivateFieldGet(this, _CTR_remainingIndex, \"f\") === 16) {\n                __classPrivateFieldSet(this, _CTR_remaining, this.aes.encrypt(__classPrivateFieldGet(this, _CTR_counter, \"f\")), \"f\");\n                __classPrivateFieldSet(this, _CTR_remainingIndex, 0, \"f\");\n                this.increment();\n            }\n            crypttext[i] ^= __classPrivateFieldGet(this, _CTR_remaining, \"f\")[__classPrivateFieldSet(this, _CTR_remainingIndex, (_b = __classPrivateFieldGet(this, _CTR_remainingIndex, \"f\"), _a = _b++, _b), \"f\"), _a];\n        }\n        return crypttext;\n    }\n    decrypt(ciphertext) {\n        return this.encrypt(ciphertext);\n    }\n}\n_CTR_remaining = new WeakMap(), _CTR_remainingIndex = new WeakMap(), _CTR_counter = new WeakMap();\n//# sourceMappingURL=mode-ctr.js.map","/**\n * @module wallet/utils\n */\nimport { getBytesCopy, assertArgument, concat, dataSlice, getBytes, assert } from '../utils/index.js';\nimport { computeHmac, sha256 } from '../crypto/index.js';\nimport { encodeBase58, toUtf8Bytes } from '../encoding/index.js';\n/**\n * Converts a hex string to a Uint8Array. If the string does not start with '0x', it adds it.\n *\n * @param {string} hexString - The hex string to convert.\n * @returns {Uint8Array} The resulting byte array.\n */\nexport function looseArrayify(hexString) {\n    if (typeof hexString === 'string' && !hexString.startsWith('0x')) {\n        hexString = '0x' + hexString;\n    }\n    return getBytesCopy(hexString);\n}\n/**\n * Converts a password to a Uint8Array. If the password is a string, it converts it to UTF-8 bytes.\n *\n * @param {string | Uint8Array} password - The password to convert.\n * @returns {Uint8Array} The resulting byte array.\n */\nexport function getPassword(password) {\n    if (typeof password === 'string') {\n        return toUtf8Bytes(password, 'NFKC');\n    }\n    return getBytesCopy(password);\n}\n/**\n * Traverses an object based on a path and returns the value at that path.\n *\n * @param {any} object - The object to traverse.\n * @param {string} _path - The path to traverse.\n * @returns {T} The value at the specified path.\n */\nexport function spelunk(object, _path) {\n    const match = _path.match(/^([a-z0-9$_.-]*)(:([a-z]+))?(!)?$/i);\n    assertArgument(match != null, 'invalid path', 'path', _path);\n    const path = match[1];\n    const type = match[3];\n    const reqd = match[4] === '!';\n    let cur = object;\n    for (const comp of path.toLowerCase().split('.')) {\n        // Search for a child object with a case-insensitive matching key\n        if (Array.isArray(cur)) {\n            if (!comp.match(/^[0-9]+$/)) {\n                break;\n            }\n            cur = cur[parseInt(comp)];\n        }\n        else if (typeof cur === 'object') {\n            let found = null;\n            for (const key in cur) {\n                if (key.toLowerCase() === comp) {\n                    found = cur[key];\n                    break;\n                }\n            }\n            cur = found;\n        }\n        else {\n            cur = null;\n        }\n        if (cur == null) {\n            break;\n        }\n    }\n    assertArgument(!reqd || cur != null, 'missing required value', 'path', path);\n    if (type && cur != null) {\n        if (type === 'int') {\n            if (typeof cur === 'string' && cur.match(/^-?[0-9]+$/)) {\n                return parseInt(cur);\n            }\n            else if (Number.isSafeInteger(cur)) {\n                return cur;\n            }\n        }\n        if (type === 'number') {\n            if (typeof cur === 'string' && cur.match(/^-?[0-9.]*$/)) {\n                return parseFloat(cur);\n            }\n        }\n        if (type === 'data') {\n            if (typeof cur === 'string') {\n                return looseArrayify(cur);\n            }\n        }\n        if (type === 'array' && Array.isArray(cur)) {\n            return cur;\n        }\n        if (type === typeof cur) {\n            return cur;\n        }\n        assertArgument(false, `wrong type found for ${type} `, 'path', path);\n    }\n    return cur;\n}\n// HDNODEWallet and UTXO Wallet util methods\n/**\n * \"Bitcoin seed\"\n */\nexport const MasterSecret = new Uint8Array([66, 105, 116, 99, 111, 105, 110, 32, 115, 101, 101, 100]);\n/**\n * Hardened bit constant\n */\nexport const HardenedBit = 0x80000000;\n/**\n * Constant N used in cryptographic operations\n */\nexport const N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\n/**\n * Hexadecimal characters\n */\nexport const Nibbles = '0123456789abcdef';\n/**\n * Pads a value with leading zeros to a specified length.\n *\n * @param {string | number} value - The value to pad.\n * @param {number} length - The desired length.\n * @returns {string} The padded value.\n */\nexport function zpad(value, length) {\n    // Determine if the value is hexadecimal\n    const isHex = typeof value === 'string' && value.startsWith('0x');\n    // Handle hexadecimal values\n    if (isHex) {\n        let hexValue = value.substring(2); // Remove the \"0x\" prefix\n        while (hexValue.length < length * 2) {\n            // Hexadecimal characters count double\n            hexValue = '0' + hexValue;\n        }\n        return '0x' + hexValue;\n    }\n    // Handle numbers or non-hexadecimal strings\n    let result = String(value);\n    while (result.length < length) {\n        result = '0' + result;\n    }\n    return result;\n}\n/**\n * Encodes a value using Base58Check encoding.\n *\n * @param {BytesLike} _value - The value to encode.\n * @returns {string} The Base58Check encoded string.\n */\nexport function encodeBase58Check(_value) {\n    const value = getBytes(_value);\n    const check = dataSlice(sha256(sha256(value)), 0, 4);\n    const bytes = concat([value, check]);\n    return encodeBase58(bytes);\n}\n/**\n * Serializes an index, chain code, public key, and private key into a pair of derived keys.\n *\n * @param {number} index - The index to serialize.\n * @param {string} chainCode - The chain code.\n * @param {string} publicKey - The public key.\n * @param {null | string} privateKey - The private key.\n * @returns {{ IL: Uint8Array; IR: Uint8Array }} The derived keys.\n */\nexport function ser_I(index, chainCode, publicKey, privateKey) {\n    const data = new Uint8Array(37);\n    if (index & HardenedBit) {\n        assert(privateKey != null, 'cannot derive child of neutered node', 'UNSUPPORTED_OPERATION', {\n            operation: 'deriveChild',\n        });\n        // Data = 0x00 || ser_256(k_par)\n        data.set(getBytes(privateKey), 1);\n    }\n    else {\n        // Data = ser_p(point(k_par))\n        data.set(getBytes(publicKey));\n    }\n    // Data += ser_32(i)\n    for (let i = 24; i >= 0; i -= 8) {\n        data[33 + (i >> 3)] = (index >> (24 - i)) & 0xff;\n    }\n    const I = getBytes(computeHmac('sha512', chainCode, data));\n    return { IL: I.slice(0, 32), IR: I.slice(32) };\n}\n//# sourceMappingURL=utils.js.map","/**\n * The JSON Wallet formats allow a simple way to store the private keys needed in Ethereum along with related\n * information and allows for extensible forms of encryption.\n *\n * These utilities facilitate decrypting and encrypting the most common JSON Wallet formats.\n */\nimport { CTR } from 'aes-js';\nimport { getAddress, computeAddress } from '../address/index.js';\nimport { keccak256, pbkdf2, randomBytes, scrypt, scryptSync } from '../crypto/index.js';\nimport { concat, getBytes, hexlify, uuidV4, assert, assertArgument } from '../utils/index.js';\nimport { getPassword, spelunk, zpad } from './utils.js';\nimport { version } from '../_version.js';\nconst defaultPath = \"m/44'/994'/0'/0/0\";\n/**\n * Returns true if `json` is a valid JSON Keystore Wallet.\n *\n * @category Wallet\n * @param {string} json - The JSON data to check.\n * @returns {boolean} True if the JSON data is a valid Keystore Wallet.\n */\nexport function isKeystoreJson(json) {\n    try {\n        const data = JSON.parse(json);\n        const version = data.version != null ? parseInt(data.version) : 0;\n        if (version === 3) {\n            return true;\n        }\n        // eslint-disable-next-line no-empty\n    }\n    catch (error) { }\n    return false;\n}\n/**\n * Decrypts the given ciphertext using the provided key and data.\n *\n * @param {any} data - The data containing encryption parameters.\n * @param {Uint8Array} key - The key to use for decryption.\n * @param {Uint8Array} ciphertext - The ciphertext to decrypt.\n * @returns {string} The decrypted data as a hex string.\n */\nfunction decrypt(data, key, ciphertext) {\n    const cipher = spelunk(data, 'crypto.cipher:string');\n    if (cipher === 'aes-128-ctr') {\n        const iv = spelunk(data, 'crypto.cipherparams.iv:data!');\n        const aesCtr = new CTR(key, iv);\n        return hexlify(aesCtr.decrypt(ciphertext));\n    }\n    assert(false, 'unsupported cipher', 'UNSUPPORTED_OPERATION', {\n        operation: 'decrypt',\n    });\n}\n/**\n * Retrieves the account details from the given data and key.\n *\n * @param {any} data - The data containing account information.\n * @param {string} _key - The key to use for decryption.\n * @returns {KeystoreAccount} The decrypted account details.\n */\nfunction getAccount(data, _key) {\n    const key = getBytes(_key);\n    const ciphertext = spelunk(data, 'crypto.ciphertext:data!');\n    const computedMAC = hexlify(keccak256(concat([key.slice(16, 32), ciphertext]))).substring(2);\n    assertArgument(computedMAC === spelunk(data, 'crypto.mac:string!').toLowerCase(), 'incorrect password', 'password', '[ REDACTED ]');\n    const privateKey = decrypt(data, key.slice(0, 16), ciphertext);\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (!check.startsWith('0x')) {\n            check = '0x' + check;\n        }\n        assertArgument(getAddress(check) === address, 'keystore address/privateKey mismatch', 'address', data.address);\n    }\n    const account = { address, privateKey };\n    // Version 0.1 x-quais metadata must contain an encrypted mnemonic phrase\n    const version = spelunk(data, 'x-quais.version:string');\n    if (version === '0.1') {\n        const mnemonicKey = key.slice(32, 64);\n        const mnemonicCiphertext = spelunk(data, 'x-quais.mnemonicCiphertext:data!');\n        const mnemonicIv = spelunk(data, 'x-quais.mnemonicCounter:data!');\n        const mnemonicAesCtr = new CTR(mnemonicKey, mnemonicIv);\n        account.mnemonic = {\n            path: spelunk(data, 'x-quais.path:string') || defaultPath,\n            locale: spelunk(data, 'x-quais.locale:string') || 'en',\n            entropy: hexlify(getBytes(mnemonicAesCtr.decrypt(mnemonicCiphertext))),\n        };\n    }\n    return account;\n}\n/**\n * Retrieves the key derivation function parameters from the given data.\n *\n * @param {any} data - The data containing KDF parameters.\n * @returns {KdfParams} The key derivation function parameters.\n */\nfunction getDecryptKdfParams(data) {\n    const kdf = spelunk(data, 'crypto.kdf:string');\n    if (kdf && typeof kdf === 'string') {\n        if (kdf.toLowerCase() === 'scrypt') {\n            const salt = spelunk(data, 'crypto.kdfparams.salt:data!');\n            const N = spelunk(data, 'crypto.kdfparams.n:int!');\n            const r = spelunk(data, 'crypto.kdfparams.r:int!');\n            const p = spelunk(data, 'crypto.kdfparams.p:int!');\n            // Make sure N is a power of 2\n            assertArgument(N > 0 && (N & (N - 1)) === 0, 'invalid kdf.N', 'kdf.N', N);\n            assertArgument(r > 0 && p > 0, 'invalid kdf', 'kdf', kdf);\n            const dkLen = spelunk(data, 'crypto.kdfparams.dklen:int!');\n            assertArgument(dkLen === 32, 'invalid kdf.dklen', 'kdf.dflen', dkLen);\n            return { name: 'scrypt', salt, N, r, p, dkLen: 64 };\n        }\n        else if (kdf.toLowerCase() === 'pbkdf2') {\n            const salt = spelunk(data, 'crypto.kdfparams.salt:data!');\n            const prf = spelunk(data, 'crypto.kdfparams.prf:string!');\n            const algorithm = prf.split('-').pop();\n            assertArgument(algorithm === 'sha256' || algorithm === 'sha512', 'invalid kdf.pdf', 'kdf.pdf', prf);\n            const count = spelunk(data, 'crypto.kdfparams.c:int!');\n            const dkLen = spelunk(data, 'crypto.kdfparams.dklen:int!');\n            assertArgument(dkLen === 32, 'invalid kdf.dklen', 'kdf.dklen', dkLen);\n            return { name: 'pbkdf2', salt, count, dkLen, algorithm };\n        }\n    }\n    assertArgument(false, 'unsupported key-derivation function', 'kdf', kdf);\n}\n/**\n * Returns the account details for the JSON Keystore Wallet `json` using `password`.\n *\n * It is preferred to use the {@link decryptKeystoreJson | **async version**} instead, which allows a\n * {@link ProgressCallback | **ProgressCallback} to keep the user informed as to the decryption status.\n *\n * This method will block the event loop (freezing all UI) until decryption is complete, which can take quite some time,\n * depending on the wallet paramters and platform.\n *\n * @category Wallet\n * @param {string} json - The JSON data to decrypt.\n * @param {string | Uint8Array} _password - The password to decrypt the JSON data.\n * @returns {KeystoreAccount} The decrypted account.\n */\nexport function decryptKeystoreJsonSync(json, _password) {\n    const data = JSON.parse(json);\n    const password = getPassword(_password);\n    const params = getDecryptKdfParams(data);\n    if (params.name === 'pbkdf2') {\n        const { salt, count, dkLen, algorithm } = params;\n        const key = pbkdf2(password, salt, count, dkLen, algorithm);\n        return getAccount(data, key);\n    }\n    assert(params.name === 'scrypt', 'cannot be reached', 'UNKNOWN_ERROR', { params });\n    const { salt, N, r, p, dkLen } = params;\n    const key = scryptSync(password, salt, N, r, p, dkLen);\n    return getAccount(data, key);\n}\n/**\n * Pauses execution for the specified duration.\n *\n * @param {number} duration - The duration to stall in milliseconds.\n * @returns {Promise<void>} A promise that resolves after the specified duration.\n */\nfunction stall(duration) {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve();\n        }, duration);\n    });\n}\n/**\n * Resolves to the decrypted JSON Keystore Wallet `json` using the `password`.\n *\n * If provided, `progress` will be called periodically during the decrpytion to provide feedback, and if the function\n * returns `false` will halt decryption.\n *\n * The `progressCallback` will **always** receive `0` before decryption begins and `1` when complete.\n *\n * @category Wallet\n * @param {string} json - The JSON data to decrypt.\n * @param {string | Uint8Array} _password - The password to decrypt the JSON data.\n * @param {ProgressCallback} [progress] - The callback to receive progress updates.\n * @returns {Promise<KeystoreAccount>} The decrypted account.\n */\nexport async function decryptKeystoreJson(json, _password, progress) {\n    const data = JSON.parse(json);\n    const password = getPassword(_password);\n    const params = getDecryptKdfParams(data);\n    if (params.name === 'pbkdf2') {\n        if (progress) {\n            progress(0);\n            await stall(0);\n        }\n        const { salt, count, dkLen, algorithm } = params;\n        const key = pbkdf2(password, salt, count, dkLen, algorithm);\n        if (progress) {\n            progress(1);\n            await stall(0);\n        }\n        return getAccount(data, key);\n    }\n    assert(params.name === 'scrypt', 'cannot be reached', 'UNKNOWN_ERROR', { params });\n    const { salt, N, r, p, dkLen } = params;\n    const key = await scrypt(password, salt, N, r, p, dkLen, progress);\n    return getAccount(data, key);\n}\n/**\n * Retrieves the key derivation function parameters for encryption.\n *\n * @param {EncryptOptions} options - The encryption options.\n * @returns {ScryptParams} The key derivation function parameters.\n */\nfunction getEncryptKdfParams(options) {\n    // Check/generate the salt\n    const salt = options.salt != null ? getBytes(options.salt, 'options.salt') : randomBytes(32);\n    // Override the scrypt password-based key derivation function parameters\n    let N = 1 << 17, r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    assertArgument(typeof N === 'number' && N > 0 && Number.isSafeInteger(N) && (BigInt(N) & BigInt(N - 1)) === BigInt(0), 'invalid scrypt N parameter', 'options.N', N);\n    assertArgument(typeof r === 'number' && r > 0 && Number.isSafeInteger(r), 'invalid scrypt r parameter', 'options.r', r);\n    assertArgument(typeof p === 'number' && p > 0 && Number.isSafeInteger(p), 'invalid scrypt p parameter', 'options.p', p);\n    return { name: 'scrypt', dkLen: 32, salt, N, r, p };\n}\n/**\n * Encrypts the keystore with the given key, KDF parameters, account, and options.\n *\n * @ignore\n * @param {Uint8Array} key - The key to use for encryption.\n * @param {ScryptParams} kdf - The key derivation function parameters.\n * @param {KeystoreAccount} account - The account to encrypt.\n * @param {EncryptOptions} options - The encryption options.\n * @returns {any} The encrypted keystore data.\n */\nfunction _encryptKeystore(key, kdf, account, options) {\n    const privateKey = getBytes(account.privateKey, 'privateKey');\n    // Override initialization vector\n    const iv = options.iv != null ? getBytes(options.iv, 'options.iv') : randomBytes(16);\n    assertArgument(iv.length === 16, 'invalid options.iv length', 'options.iv', options.iv);\n    // Override the uuid\n    const uuidRandom = options.uuid != null ? getBytes(options.uuid, 'options.uuid') : randomBytes(16);\n    assertArgument(uuidRandom.length === 16, 'invalid options.uuid length', 'options.uuid', options.iv);\n    // This will be used to encrypt the wallet (as per Web3 secret storage)\n    // - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    // - 32 bytes   AES key to encrypt mnemonic with (required here to be quais Wallet)\n    const derivedKey = key.slice(0, 16);\n    const macPrefix = key.slice(16, 32);\n    // Encrypt the private key\n    const aesCtr = new CTR(derivedKey, iv);\n    const ciphertext = getBytes(aesCtr.encrypt(privateKey));\n    // Compute the message authentication code, used to check the password\n    const mac = keccak256(concat([macPrefix, ciphertext]));\n    // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n    const data = {\n        address: account.address.substring(2).toLowerCase(),\n        id: uuidV4(uuidRandom),\n        version: 3,\n        Crypto: {\n            cipher: 'aes-128-ctr',\n            cipherparams: {\n                iv: hexlify(iv).substring(2),\n            },\n            ciphertext: hexlify(ciphertext).substring(2),\n            kdf: 'scrypt',\n            kdfparams: {\n                salt: hexlify(kdf.salt).substring(2),\n                n: kdf.N,\n                dklen: 32,\n                p: kdf.p,\n                r: kdf.r,\n            },\n            mac: mac.substring(2),\n        },\n    };\n    // If we have a mnemonic, encrypt it into the JSON wallet\n    if (account.mnemonic) {\n        const client = options.client != null ? options.client : `quais/${version}`;\n        const path = account.mnemonic.path || defaultPath;\n        const locale = account.mnemonic.locale || 'en';\n        const mnemonicKey = key.slice(32, 64);\n        const entropy = getBytes(account.mnemonic.entropy, 'account.mnemonic.entropy');\n        const mnemonicIv = randomBytes(16);\n        const mnemonicAesCtr = new CTR(mnemonicKey, mnemonicIv);\n        const mnemonicCiphertext = getBytes(mnemonicAesCtr.encrypt(entropy));\n        const now = new Date();\n        const timestamp = now.getUTCFullYear() +\n            '-' +\n            zpad(now.getUTCMonth() + 1, 2) +\n            '-' +\n            zpad(now.getUTCDate(), 2) +\n            'T' +\n            zpad(now.getUTCHours(), 2) +\n            '-' +\n            zpad(now.getUTCMinutes(), 2) +\n            '-' +\n            zpad(now.getUTCSeconds(), 2) +\n            '.0Z';\n        const gethFilename = 'UTC--' + timestamp + '--' + data.address;\n        data['x-quais'] = {\n            client,\n            gethFilename,\n            path,\n            locale,\n            mnemonicCounter: hexlify(mnemonicIv).substring(2),\n            mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n            version: '0.1',\n        };\n    }\n    return JSON.stringify(data);\n}\n/**\n * Return the JSON Keystore Wallet for `account` encrypted with `password`.\n *\n * The `options` can be used to tune the password-based key derivation function parameters, explicitly set the random\n * values used. Any provided {@link ProgressCallback | **ProgressCallback**} is ignored.\n *\n * @category Wallet\n * @param {KeystoreAccount} account - The account to encrypt.\n * @param {string | Uint8Array} password - The password to encrypt the JSON data.\n * @param {EncryptOptions} [options] - The options to use when encrypting the JSON data.\n * @returns {string} The encrypted JSON data.\n */\nexport function encryptKeystoreJsonSync(account, password, options) {\n    if (options == null) {\n        options = {};\n    }\n    const passwordBytes = getPassword(password);\n    const kdf = getEncryptKdfParams(options);\n    const key = scryptSync(passwordBytes, kdf.salt, kdf.N, kdf.r, kdf.p, 64);\n    return _encryptKeystore(getBytes(key), kdf, account, options);\n}\n/**\n * Resolved to the JSON Keystore Wallet for `account` encrypted with `password`.\n *\n * The `options` can be used to tune the password-based key derivation function parameters, explicitly set the random\n * values used and provide a {@link ProgressCallback | **ProgressCallback**} to receive periodic updates on the\n * completion status..\n *\n * @category Wallet\n * @param {KeystoreAccount} account - The account to encrypt.\n * @param {string | Uint8Array} password - The password to encrypt the JSON data.\n * @param {EncryptOptions} [options] - The options to use when encrypting the JSON data.\n * @returns {Promise<string>} The encrypted JSON data.\n */\nexport async function encryptKeystoreJson(account, password, options) {\n    if (options == null) {\n        options = {};\n    }\n    const passwordBytes = getPassword(password);\n    const kdf = getEncryptKdfParams(options);\n    const key = await scrypt(passwordBytes, kdf.salt, kdf.N, kdf.r, kdf.p, 64, options.progressCallback);\n    return _encryptKeystore(getBytes(key), kdf, account, options);\n}\n//# sourceMappingURL=json-keystore.js.map","import { computeHmac, randomBytes, ripemd160, SigningKey, sha256 } from '../crypto/index.js';\nimport { VoidSigner } from '../signers/index.js';\nimport { computeAddress } from '../address/index.js';\nimport { decodeBase58, encodeBase58 } from '../encoding/index.js';\nimport { concat, dataSlice, defineProperties, getBytes, hexlify, isBytesLike, getNumber, toBeArray, toBigInt, toBeHex, assertPrivate, assert, assertArgument, } from '../utils/index.js';\nimport { LangEn } from '../wordlists/lang-en.js';\nimport { BaseWallet } from './base-wallet.js';\nimport { Mnemonic } from './mnemonic.js';\nimport { encryptKeystoreJson, encryptKeystoreJsonSync } from './json-keystore.js';\n// \"Bitcoin seed\"\nconst MasterSecret = new Uint8Array([66, 105, 116, 99, 111, 105, 110, 32, 115, 101, 101, 100]);\nconst HardenedBit = 0x80000000;\nconst N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst Nibbles = '0123456789abcdef';\nfunction zpad(value, length) {\n    let result = '';\n    while (value) {\n        result = Nibbles[value % 16] + result;\n        value = Math.trunc(value / 16);\n    }\n    while (result.length < length * 2) {\n        result = '0' + result;\n    }\n    return '0x' + result;\n}\nfunction encodeBase58Check(_value) {\n    const value = getBytes(_value);\n    const check = dataSlice(sha256(sha256(value)), 0, 4);\n    const bytes = concat([value, check]);\n    return encodeBase58(bytes);\n}\nconst _guard = {};\nfunction ser_I(index, chainCode, publicKey, privateKey) {\n    const data = new Uint8Array(37);\n    if (index & HardenedBit) {\n        assert(privateKey != null, 'cannot derive child of neutered node', 'UNSUPPORTED_OPERATION', {\n            operation: 'deriveChild',\n        });\n        // Data = 0x00 || ser_256(k_par)\n        data.set(getBytes(privateKey), 1);\n    }\n    else {\n        // Data = ser_p(point(k_par))\n        data.set(getBytes(publicKey));\n    }\n    // Data += ser_32(i)\n    for (let i = 24; i >= 0; i -= 8) {\n        data[33 + (i >> 3)] = (index >> (24 - i)) & 0xff;\n    }\n    const I = getBytes(computeHmac('sha512', chainCode, data));\n    return { IL: I.slice(0, 32), IR: I.slice(32) };\n}\nfunction derivePath(node, path) {\n    const components = path.split('/');\n    assertArgument(components.length > 0, 'invalid path', 'path', path);\n    if (components[0] === 'm') {\n        assertArgument(node.depth === 0, `cannot derive root path (i.e. path starting with \"m/\") for a node at non-zero depth ${node.depth}`, 'path', path);\n        components.shift();\n    }\n    let result = node;\n    for (let i = 0; i < components.length; i++) {\n        const component = components[i];\n        if (component.match(/^[0-9]+'$/)) {\n            const index = parseInt(component.substring(0, component.length - 1));\n            assertArgument(index < HardenedBit, 'invalid path index', `path[${i}]`, component);\n            result = result.deriveChild(HardenedBit + index);\n        }\n        else if (component.match(/^[0-9]+$/)) {\n            const index = parseInt(component);\n            assertArgument(index < HardenedBit, 'invalid path index', `path[${i}]`, component);\n            result = result.deriveChild(index);\n        }\n        else {\n            assertArgument(false, 'invalid path component', `path[${i}]`, component);\n        }\n    }\n    return result;\n}\n/**\n * An **HDNodeWallet** is a [[Signer]] backed by the private key derived from an HD Node using the [[link-bip-32]]\n * standard.\n *\n * An HD Node forms a hierarchical structure with each HD Node having a private key and the ability to derive child HD\n * Nodes, defined by a path indicating the index of each child.\n */\nexport class HDNodeWallet extends BaseWallet {\n    /**\n     * The compressed public key.\n     *\n     * @type {string}\n     */\n    publicKey;\n    /**\n     * The fingerprint.\n     *\n     * A fingerprint allows a quick way to detect parent and child nodes, but developers should be prepared to deal with\n     * collisions as it is only 4 bytes.\n     *\n     * @type {string}\n     */\n    fingerprint;\n    /**\n     * The parent fingerprint.\n     *\n     * @type {string}\n     */\n    parentFingerprint;\n    /**\n     * The mnemonic used to create this HD Node, if available.\n     *\n     * Sources such as extended keys do not encode the mnemonic, in which case this will be `null`.\n     *\n     * @type {null | Mnemonic}\n     */\n    mnemonic;\n    /**\n     * The chaincode, which is effectively a public key used to derive children.\n     *\n     * @type {string}\n     */\n    chainCode;\n    /**\n     * The derivation path of this wallet.\n     *\n     * Since extended keys do not provide full path details, this may be `null`, if instantiated from a source that does\n     * not encode it.\n     *\n     * @type {null | string}\n     */\n    path;\n    /**\n     * The child index of this wallet. Values over `2 ** 31` indicate the node is hardened.\n     *\n     * @type {number}\n     */\n    index;\n    /**\n     * The depth of this wallet, which is the number of components in its path.\n     *\n     * @type {number}\n     */\n    depth;\n    /**\n     * @ignore\n     * @param {any} guard\n     * @param {SigningKey} signingKey\n     * @param {string} parentFingerprint\n     * @param {string} chainCode\n     * @param {null | string} path\n     * @param {number} index\n     * @param {number} depth\n     * @param {null | Mnemonic} mnemonic\n     * @param {null | Provider} provider\n     */\n    constructor(guard, signingKey, parentFingerprint, chainCode, path, index, depth, mnemonic, provider) {\n        super(signingKey, provider);\n        assertPrivate(guard, _guard, 'HDNodeWallet');\n        defineProperties(this, { publicKey: signingKey.compressedPublicKey });\n        const fingerprint = dataSlice(ripemd160(sha256(this.publicKey)), 0, 4);\n        defineProperties(this, {\n            parentFingerprint,\n            fingerprint,\n            chainCode,\n            path,\n            index,\n            depth,\n        });\n        defineProperties(this, { mnemonic });\n    }\n    /**\n     * Connects the wallet to a provider.\n     *\n     * @param {null | Provider} provider\n     * @returns {HDNodeWallet}\n     */\n    connect(provider) {\n        return new HDNodeWallet(_guard, this.signingKey, this.parentFingerprint, this.chainCode, this.path, this.index, this.depth, this.mnemonic, provider);\n    }\n    /**\n     * @ignore\n     * @returns {KeystoreAccount}\n     */\n    #account() {\n        const account = { address: this.address, privateKey: this.privateKey };\n        const m = this.mnemonic;\n        if (this.path && m && m.wordlist.locale === 'en' && m.password === '') {\n            account.mnemonic = {\n                path: this.path,\n                locale: 'en',\n                entropy: m.entropy,\n            };\n        }\n        return account;\n    }\n    /**\n     * Resolves to a [JSON Keystore Wallet](json-wallets) encrypted with `password`.\n     *\n     * If `progressCallback` is specified, it will receive periodic updates as the encryption process progresses.\n     *\n     * @param {Uint8Array | string} password\n     * @param {ProgressCallback} [progressCallback]\n     * @returns {Promise<string>}\n     */\n    async encrypt(password, progressCallback) {\n        return await encryptKeystoreJson(this.#account(), password, { progressCallback });\n    }\n    /**\n     * Returns a [JSON Keystore Wallet](json-wallets) encrypted with `password`.\n     *\n     * It is preferred to use the [async version](encrypt) instead, which allows a `ProgressCallback` to keep the user\n     * informed.\n     *\n     * This method will block the event loop (freezing all UI) until it is complete, which may be a non-trivial\n     * duration.\n     *\n     * @param {Uint8Array | string} password\n     * @returns {string}\n     */\n    encryptSync(password) {\n        return encryptKeystoreJsonSync(this.#account(), password);\n    }\n    /**\n     * The extended key.\n     *\n     * This key will begin with the prefix `xpriv` and can be used to reconstruct this HD Node to derive its children.\n     *\n     * @returns {string}\n     */\n    get extendedKey() {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n        assert(this.depth < 256, 'Depth too deep', 'UNSUPPORTED_OPERATION', {\n            operation: 'extendedKey',\n        });\n        return encodeBase58Check(concat([\n            '0x0488ADE4',\n            zpad(this.depth, 1),\n            this.parentFingerprint,\n            zpad(this.index, 4),\n            this.chainCode,\n            concat(['0x00', this.privateKey]),\n        ]));\n    }\n    /**\n     * Returns true if this wallet has a path, providing a Type Guard that the path is non-null.\n     *\n     * @returns {boolean}\n     */\n    hasPath() {\n        return this.path != null;\n    }\n    /**\n     * Returns a neutered HD Node, which removes the private details of an HD Node.\n     *\n     * A neutered node has no private key, but can be used to derive child addresses and other public data about the HD\n     * Node.\n     *\n     * @returns {HDNodeVoidWallet}\n     */\n    neuter() {\n        return new HDNodeVoidWallet(_guard, this.address, this.publicKey, this.parentFingerprint, this.chainCode, this.path, this.index, this.depth, this.provider);\n    }\n    /**\n     * Return the child for `index`.\n     *\n     * @param {Numeric} _index\n     * @returns {HDNodeWallet}\n     */\n    deriveChild(_index) {\n        const index = getNumber(_index, 'index');\n        assertArgument(index <= 0xffffffff, 'invalid index', 'index', index);\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += '/' + (index & ~HardenedBit);\n            if (index & HardenedBit) {\n                path += \"'\";\n            }\n        }\n        const { IR, IL } = ser_I(index, this.chainCode, this.publicKey, this.privateKey);\n        const ki = new SigningKey(toBeHex((toBigInt(IL) + BigInt(this.privateKey)) % N, 32));\n        return new HDNodeWallet(_guard, ki, this.fingerprint, hexlify(IR), path, index, this.depth + 1, this.mnemonic, this.provider);\n    }\n    /**\n     * Return the HDNode for `path` from this node.\n     *\n     * @param {string} path\n     * @returns {HDNodeWallet}\n     */\n    derivePath(path) {\n        return derivePath(this, path);\n    }\n    /**\n     * @ignore\n     * @param {BytesLike} _seed\n     * @param {null | Mnemonic} mnemonic\n     * @returns {HDNodeWallet}\n     */\n    static #fromSeed(_seed, mnemonic) {\n        assertArgument(isBytesLike(_seed), 'invalid seed', 'seed', '[REDACTED]');\n        const seed = getBytes(_seed, 'seed');\n        assertArgument(seed.length >= 16 && seed.length <= 64, 'invalid seed', 'seed', '[REDACTED]');\n        const I = getBytes(computeHmac('sha512', MasterSecret, seed));\n        const signingKey = new SigningKey(hexlify(I.slice(0, 32)));\n        return new HDNodeWallet(_guard, signingKey, '0x00000000', hexlify(I.slice(32)), 'm', 0, 0, mnemonic, null);\n    }\n    /**\n     * Creates a new HD Node from `extendedKey`.\n     *\n     * If the `extendedKey` will either have a prefix or `xpub` or `xpriv`, returning a neutered HD Node\n     * ([[HDNodeVoidWallet]]) or full HD Node ([[HDNodeWallet]]) respectively.\n     *\n     * @param {string} extendedKey\n     * @returns {HDNodeWallet | HDNodeVoidWallet}\n     */\n    static fromExtendedKey(extendedKey) {\n        const bytes = toBeArray(decodeBase58(extendedKey)); // @TODO: redact\n        assertArgument(bytes.length === 82 || encodeBase58Check(bytes.slice(0, 78)) === extendedKey, 'invalid extended key', 'extendedKey', '[ REDACTED ]');\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case '0x0488b21e':\n            case '0x043587cf': {\n                const publicKey = hexlify(key);\n                return new HDNodeVoidWallet(_guard, computeAddress(publicKey), publicKey, parentFingerprint, chainCode, null, index, depth, null);\n            }\n            // Private Key\n            case '0x0488ade4':\n            case '0x04358394 ':\n                if (key[0] !== 0) {\n                    break;\n                }\n                return new HDNodeWallet(_guard, new SigningKey(key.slice(1)), parentFingerprint, chainCode, null, index, depth, null, null);\n        }\n        assertArgument(false, 'invalid extended key prefix', 'extendedKey', '[ REDACTED ]');\n    }\n    /**\n     * Creates a new random HDNode.\n     *\n     * @param {string} path\n     * @param {string} [password]\n     * @param {Wordlist} [wordlist]\n     * @returns {HDNodeWallet}\n     */\n    static createRandom(path, password, wordlist) {\n        if (password == null) {\n            password = '';\n        }\n        if (wordlist == null) {\n            wordlist = LangEn.wordlist();\n        }\n        const mnemonic = Mnemonic.fromEntropy(randomBytes(16), password, wordlist);\n        return HDNodeWallet.#fromSeed(mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n    /**\n     * Create an HD Node from `mnemonic`.\n     *\n     * @param {Mnemonic} mnemonic\n     * @param {string} path\n     * @returns {HDNodeWallet}\n     */\n    static fromMnemonic(mnemonic, path) {\n        return HDNodeWallet.#fromSeed(mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n    /**\n     * Creates an HD Node from a mnemonic `phrase`.\n     *\n     * @param {string} phrase\n     * @param {string} path\n     * @param {string} [password]\n     * @param {Wordlist} [wordlist]\n     * @returns {HDNodeWallet}\n     */\n    static fromPhrase(phrase, path, password, wordlist) {\n        if (password == null) {\n            password = '';\n        }\n        if (wordlist == null) {\n            wordlist = LangEn.wordlist();\n        }\n        const mnemonic = Mnemonic.fromPhrase(phrase, password, wordlist);\n        return HDNodeWallet.#fromSeed(mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n    /**\n     * Creates an HD Node from a `seed`.\n     *\n     * @param {BytesLike} seed\n     * @returns {HDNodeWallet}\n     */\n    static fromSeed(seed) {\n        return HDNodeWallet.#fromSeed(seed, null);\n    }\n}\n/**\n * A **HDNodeVoidWallet** cannot sign, but provides access to the children nodes of a [[link-bip-32]] HD wallet\n * addresses.\n *\n * They can be created by using an extended `xpub` key to [[HDNodeWallet_fromExtendedKey]] or by\n * [neutering](HDNodeWallet-neuter) a [[HDNodeWallet]].\n */\nexport class HDNodeVoidWallet extends VoidSigner {\n    /**\n     * The compressed public key.\n     *\n     * @type {string}\n     */\n    publicKey;\n    /**\n     * The fingerprint.\n     *\n     * A fingerprint allows a quick way to detect parent and child nodes, but developers should be prepared to deal with\n     * collisions as it is only 4 bytes.\n     *\n     * @type {string}\n     */\n    fingerprint;\n    /**\n     * The parent node fingerprint.\n     *\n     * @type {string}\n     */\n    parentFingerprint;\n    /**\n     * The chaincode, which is effectively a public key used to derive children.\n     *\n     * @type {string}\n     */\n    chainCode;\n    /**\n     * The derivation path of this wallet.\n     *\n     * Since extended keys do not provide full path details, this may be `null`, if instantiated from a source that does\n     * not encode it.\n     *\n     * @type {null | string}\n     */\n    path;\n    /**\n     * The child index of this wallet. Values over `2 ** 31` indicate the node is hardened.\n     *\n     * @type {number}\n     */\n    index;\n    /**\n     * The depth of this wallet, which is the number of components in its path.\n     *\n     * @type {number}\n     */\n    depth;\n    /**\n     * @ignore\n     * @param {any} guard\n     * @param {string} address\n     * @param {string} publicKey\n     * @param {string} parentFingerprint\n     * @param {string} chainCode\n     * @param {null | string} path\n     * @param {number} index\n     * @param {number} depth\n     * @param {null | Provider} provider\n     */\n    constructor(guard, address, publicKey, parentFingerprint, chainCode, path, index, depth, provider) {\n        super(address, provider);\n        assertPrivate(guard, _guard, 'HDNodeVoidWallet');\n        defineProperties(this, { publicKey });\n        const fingerprint = dataSlice(ripemd160(sha256(publicKey)), 0, 4);\n        defineProperties(this, {\n            publicKey,\n            fingerprint,\n            parentFingerprint,\n            chainCode,\n            path,\n            index,\n            depth,\n        });\n    }\n    /**\n     * Connects the wallet to a provider.\n     *\n     * @param {null | Provider} provider\n     * @returns {HDNodeVoidWallet}\n     */\n    connect(provider) {\n        return new HDNodeVoidWallet(_guard, this.address, this.publicKey, this.parentFingerprint, this.chainCode, this.path, this.index, this.depth, provider);\n    }\n    /**\n     * The extended key.\n     *\n     * This key will begin with the prefix `xpub` and can be used to reconstruct this neutered key to derive its\n     * children addresses.\n     *\n     * @returns {string}\n     */\n    get extendedKey() {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n        assert(this.depth < 256, 'Depth too deep', 'UNSUPPORTED_OPERATION', { operation: 'extendedKey' });\n        return encodeBase58Check(concat([\n            '0x0488B21E',\n            zpad(this.depth, 1),\n            this.parentFingerprint,\n            zpad(this.index, 4),\n            this.chainCode,\n            this.publicKey,\n        ]));\n    }\n    /**\n     * Returns true if this wallet has a path, providing a Type Guard that the path is non-null.\n     *\n     * @returns {boolean}\n     */\n    hasPath() {\n        return this.path != null;\n    }\n    /**\n     * Return the child for `index`.\n     *\n     * @param {Numeric} _index\n     * @returns {HDNodeVoidWallet}\n     */\n    deriveChild(_index) {\n        const index = getNumber(_index, 'index');\n        assertArgument(index <= 0xffffffff, 'invalid index', 'index', index);\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += '/' + (index & ~HardenedBit);\n            if (index & HardenedBit) {\n                path += \"'\";\n            }\n        }\n        const { IR, IL } = ser_I(index, this.chainCode, this.publicKey, null);\n        const Ki = SigningKey.addPoints(IL, this.publicKey, true);\n        const address = computeAddress(Ki);\n        return new HDNodeVoidWallet(_guard, address, Ki, this.fingerprint, hexlify(IR), path, index, this.depth + 1, this.provider);\n    }\n    /**\n     * Return the signer for `path` from this node.\n     *\n     * @param {string} path\n     * @returns {HDNodeVoidWallet}\n     */\n    derivePath(path) {\n        return derivePath(this, path);\n    }\n}\n/**\n * Returns the [[link-bip-32]] path for the account at `index`.\n *\n * This is the pattern used by wallets like Ledger.\n *\n * There is also an [alternate pattern](getIndexedAccountPath) used by some software.\n *\n * @param {Numeric} _index\n * @returns {string}\n */\nexport function getAccountPath(_index) {\n    const index = getNumber(_index, 'index');\n    assertArgument(index >= 0 && index < HardenedBit, 'invalid account index', 'index', index);\n    return `m/44'/60'/${index}'/0/0`;\n}\n/**\n * Returns the path using an alternative pattern for deriving accounts, at `index`.\n *\n * This derivation path uses the `index` component rather than the `account` component to derive sequential accounts.\n *\n * This is the pattern used by wallets like MetaMask.\n *\n * @param {Numeric} _index\n * @returns {string}\n */\nexport function getIndexedAccountPath(_index) {\n    const index = getNumber(_index, 'index');\n    assertArgument(index >= 0 && index < HardenedBit, 'invalid account index', 'index', index);\n    return `m/44'/60'/0'/0/${index}`;\n}\n//# sourceMappingURL=hdnodewallet.js.map","import { HDNodeWallet } from './hdnodewallet.js';\nimport { Mnemonic } from './mnemonic.js';\nimport { LangEn } from '../wordlists/lang-en.js';\nimport { randomBytes } from '../crypto/index.js';\nimport { getZoneForAddress, assertPrivate } from '../utils/index.js';\nimport { isQiAddress } from '../address/index.js';\nimport { Zone } from '../constants/index.js';\n/**\n * Constant to represent the maximum attempt to derive an address.\n */\nexport const MAX_ADDRESS_DERIVATION_ATTEMPTS = 10000000;\nexport const _guard = {};\n/**\n * Abstract class representing a Hierarchical Deterministic (HD) wallet.\n */\nclass AbstractHDWallet {\n    static _version = 1;\n    static _coinType;\n    // Map of addresses to address info\n    _addresses = new Map();\n    /**\n     * Root node of the HD wallet.\n     */\n    _root;\n    provider;\n    /**\n     * @param {HDNodeWallet} root - The root node of the HD wallet.\n     * @param {Provider} [provider] - The provider for the HD wallet.\n     */\n    constructor(guard, root, provider) {\n        assertPrivate(guard, _guard, 'AbstractHDWallet');\n        this._root = root;\n        this.provider = provider;\n    }\n    /**\n     * Returns the parent path for a given coin type.\n     *\n     * @param {number} coinType - The coin type.\n     * @returns {string} The parent path.\n     */\n    static parentPath(coinType) {\n        return `m/44'/${coinType}'`;\n    }\n    /**\n     * Returns the coin type of the wallet.\n     *\n     * @returns {AllowedCoinType} The coin type.\n     */\n    coinType() {\n        return this.constructor._coinType;\n    }\n    /**\n     * Returns the extended public key of the root node of the HD wallet.\n     *\n     * @returns {string} The extended public key.\n     */\n    get xPub() {\n        return this._root.extendedKey;\n    }\n    // helper method to check if an address is valid for a given zone\n    isValidAddressForZone(address, zone) {\n        const addressZone = getZoneForAddress(address);\n        if (!addressZone) {\n            return false;\n        }\n        const isCorrectShard = addressZone === zone;\n        const isCorrectLedger = this.coinType() === 969 ? isQiAddress(address) : !isQiAddress(address);\n        return isCorrectShard && isCorrectLedger;\n    }\n    /**\n     * Derives the next valid address node for a specified account, starting index, and zone. The method ensures the\n     * derived address belongs to the correct shard and ledger, as defined by the Quai blockchain specifications.\n     *\n     * @param {number} account - The account number from which to derive the address node.\n     * @param {number} startingIndex - The index from which to start deriving addresses.\n     * @param {Zone} zone - The zone (shard) for which the address should be valid.\n     * @param {boolean} [isChange=false] - Whether to derive a change address. Default is `false`\n     * @returns {HDNodeWallet} - The derived HD node wallet containing a valid address for the specified zone.\n     * @throws {Error} If a valid address for the specified zone cannot be derived within the allowed attempts.\n     */\n    deriveNextAddressNode(account, startingIndex, zone, isChange = false) {\n        const changeIndex = isChange ? 1 : 0;\n        const changeNode = this._root.deriveChild(account).deriveChild(changeIndex);\n        let addrIndex = startingIndex;\n        let addressNode;\n        for (let attempts = 0; attempts < MAX_ADDRESS_DERIVATION_ATTEMPTS; attempts++) {\n            addressNode = changeNode.deriveChild(addrIndex++);\n            if (this.isValidAddressForZone(addressNode.address, zone)) {\n                return addressNode;\n            }\n        }\n        throw new Error(`Failed to derive a valid address for the zone ${zone} after ${MAX_ADDRESS_DERIVATION_ATTEMPTS} attempts.`);\n    }\n    /**\n     * Adds an address to the wallet.\n     *\n     * @param {number} account - The account number.\n     * @param {number} addressIndex - The address index.\n     * @param {boolean} [isChange=false] - Whether the address is a change address. Default is `false`\n     * @returns {NeuteredAddressInfo} The added address info.\n     */\n    addAddress(account, addressIndex, isChange = false) {\n        return this._addAddress(this._addresses, account, addressIndex, isChange);\n    }\n    /**\n     * Helper method to add an address to the wallet address map.\n     *\n     * @param {Map<string, NeuteredAddressInfo>} addressMap - The address map.\n     * @param {number} account - The account number.\n     * @param {number} addressIndex - The address index.\n     * @param {boolean} [isChange=false] - Whether the address is a change address. Default is `false`\n     * @returns {NeuteredAddressInfo} The added address info.\n     * @throws {Error} If the address for the index already exists.\n     */\n    _addAddress(addressMap, account, addressIndex, isChange = false) {\n        // check if address already exists for the index\n        this._addresses.forEach((addressInfo) => {\n            if (addressInfo.index === addressIndex) {\n                throw new Error(`Address for index ${addressIndex} already exists`);\n            }\n        });\n        // derive the address node and validate the zone\n        const changeIndex = isChange ? 1 : 0;\n        const addressNode = this._root.deriveChild(account).deriveChild(changeIndex).deriveChild(addressIndex);\n        const zone = getZoneForAddress(addressNode.address);\n        if (!zone) {\n            throw new Error(`Failed to derive a valid address zone for the index ${addressIndex}`);\n        }\n        return this.createAndStoreAddressInfo(addressNode, account, zone, isChange, addressMap);\n    }\n    /**\n     * Promise that resolves to the next address for the specified account and zone.\n     *\n     * @param {number} account - The index of the account for which to retrieve the next address.\n     * @param {Zone} zone - The zone in which to retrieve the next address.\n     * @returns {Promise<NeuteredAddressInfo>} The next neutered address information.\n     */\n    async getNextAddress(account, zone) {\n        return Promise.resolve(this._getNextAddress(account, zone, false, this._addresses));\n    }\n    /**\n     * Synchronously retrieves the next address for the specified account and zone.\n     *\n     * @param {number} account - The index of the account for which to retrieve the next address.\n     * @param {Zone} zone - The zone in which to retrieve the next address.\n     * @returns {NeuteredAddressInfo} The next neutered address information.\n     */\n    getNextAddressSync(account, zone) {\n        return this._getNextAddress(account, zone, false, this._addresses);\n    }\n    /**\n     * Derives and returns the next address information for the specified account and zone.\n     *\n     * @param {number} accountIndex - The index of the account for which the address is being generated.\n     * @param {Zone} zone - The zone in which the address is to be used.\n     * @param {boolean} isChange - A flag indicating whether the address is a change address.\n     * @param {Map<string, NeuteredAddressInfo>} addressMap - A map storing the neutered address information.\n     * @returns {NeuteredAddressInfo} The derived neutered address information.\n     * @throws {Error} If the zone is invalid.\n     */\n    _getNextAddress(accountIndex, zone, isChange, addressMap) {\n        this.validateZone(zone);\n        const lastIndex = this.getLastAddressIndex(addressMap, zone, accountIndex, isChange);\n        const addressNode = this.deriveNextAddressNode(accountIndex, lastIndex + 1, zone, isChange);\n        return this.createAndStoreAddressInfo(addressNode, accountIndex, zone, isChange, addressMap);\n    }\n    /**\n     * Gets the address info for a given address.\n     *\n     * @param {string} address - The address.\n     * @returns {NeuteredAddressInfo | null} The address info or null if not found.\n     */\n    getAddressInfo(address) {\n        const addressInfo = this._addresses.get(address);\n        if (!addressInfo) {\n            return null;\n        }\n        return addressInfo;\n    }\n    /**\n     * Returns the private key for a given address. This method should be used with caution as it exposes the private\n     * key to the user.\n     *\n     * @param {string} address - The address associated with the desired private key.\n     * @returns {string} The private key.\n     */\n    getPrivateKey(address) {\n        const hdNode = this._getHDNodeForAddress(address);\n        return hdNode.privateKey;\n    }\n    /**\n     * Gets the addresses for a given account.\n     *\n     * @param {number} account - The account number.\n     * @returns {NeuteredAddressInfo[]} The addresses for the account.\n     */\n    getAddressesForAccount(account) {\n        const addresses = this._addresses.values();\n        return Array.from(addresses).filter((addressInfo) => addressInfo.account === account);\n    }\n    /**\n     * Gets the addresses for a given zone.\n     *\n     * @param {Zone} zone - The zone.\n     * @returns {NeuteredAddressInfo[]} The addresses for the zone.\n     */\n    getAddressesForZone(zone) {\n        this.validateZone(zone);\n        const addresses = this._addresses.values();\n        return Array.from(addresses).filter((addressInfo) => addressInfo.zone === zone);\n    }\n    /**\n     * Creates an instance of the HD wallet.\n     *\n     * @param {new (root: HDNodeWallet) => T} this - The constructor of the HD wallet.\n     * @param {Mnemonic} mnemonic - The mnemonic.\n     * @returns {T} The created instance.\n     */\n    static createInstance(mnemonic) {\n        const coinType = this._coinType;\n        const root = HDNodeWallet.fromMnemonic(mnemonic, this.parentPath(coinType));\n        return new this(_guard, root);\n    }\n    /**\n     * Creates an HD wallet from a mnemonic.\n     *\n     * @param {new (root: HDNodeWallet) => T} this - The constructor of the HD wallet.\n     * @param {Mnemonic} mnemonic - The mnemonic.\n     * @returns {T} The created instance.\n     */\n    static fromMnemonic(mnemonic) {\n        return this.createInstance(mnemonic);\n    }\n    /**\n     * Creates a random HD wallet.\n     *\n     * @param {new (root: HDNodeWallet) => T} this - The constructor of the HD wallet.\n     * @param {string} [password] - The password.\n     * @param {Wordlist} [wordlist] - The wordlist.\n     * @returns {T} The created instance.\n     */\n    static createRandom(password, wordlist) {\n        if (password == null) {\n            password = '';\n        }\n        if (wordlist == null) {\n            wordlist = LangEn.wordlist();\n        }\n        const mnemonic = Mnemonic.fromEntropy(randomBytes(16), password, wordlist);\n        return this.createInstance(mnemonic);\n    }\n    /**\n     * Creates an HD wallet from a phrase.\n     *\n     * @param {new (root: HDNodeWallet) => T} this - The constructor of the HD wallet.\n     * @param {string} phrase - The phrase.\n     * @param {string} [password] - The password.\n     * @param {Wordlist} [wordlist] - The wordlist.\n     * @returns {T} The created instance.\n     */\n    static fromPhrase(phrase, password, wordlist) {\n        if (password == null) {\n            password = '';\n        }\n        if (wordlist == null) {\n            wordlist = LangEn.wordlist();\n        }\n        const mnemonic = Mnemonic.fromPhrase(phrase, password, wordlist);\n        return this.createInstance(mnemonic);\n    }\n    // /**\n    //  * Abstract method to send a transaction.\n    //  *\n    //  * @param {TransactionRequest} tx - The transaction request.\n    //  * @returns {Promise<TransactionResponse>} A promise that resolves to the transaction response.\n    //  */\n    // abstract sendTransaction(tx: TransactionRequest): Promise<TransactionResponse>;\n    /**\n     * Connects the wallet to a provider.\n     *\n     * @param {Provider} provider - The provider.\n     */\n    connect(provider) {\n        this.provider = provider;\n    }\n    /**\n     * Validates the zone.\n     *\n     * @param {Zone} zone - The zone.\n     * @throws {Error} If the zone is invalid.\n     */\n    validateZone(zone) {\n        if (!Object.values(Zone).includes(zone)) {\n            throw new Error(`Invalid zone: ${zone}`);\n        }\n    }\n    /**\n     * Derives and returns the Hierarchical Deterministic (HD) node wallet associated with a given address.\n     *\n     * This method fetches the account and address information from the wallet's internal storage, derives the\n     * appropriate change node based on whether the address is a change address, and further derives the final HD node\n     * using the address index.\n     *\n     * @param {string} addr - The address for which to derive the HD node.\n     * @returns {HDNodeWallet} The derived HD node wallet corresponding to the given address.\n     * @throws {Error} If the given address is not known to the wallet.\n     * @throws {Error} If the account associated with the address is not found.\n     */\n    _getHDNodeForAddress(addr) {\n        const addressInfo = this._addresses.get(addr);\n        if (!addressInfo) {\n            throw new Error(`Address ${addr} is not known to this wallet`);\n        }\n        const changeIndex = addressInfo.change ? 1 : 0;\n        return this._root.deriveChild(addressInfo.account).deriveChild(changeIndex).deriveChild(addressInfo.index);\n    }\n    /**\n     * Serializes the HD wallet state into a format suitable for storage or transmission.\n     *\n     * @returns {SerializedHDWallet} An object representing the serialized state of the HD wallet, including version,\n     *   mnemonic phrase, coin type, and addresses.\n     */\n    serialize() {\n        const addresses = Array.from(this._addresses.values());\n        return {\n            version: this.constructor._version,\n            phrase: this._root.mnemonic.phrase,\n            coinType: this.coinType(),\n            addresses: addresses,\n        };\n    }\n    /**\n     * Deserializes a serialized HD wallet object and reconstructs the wallet instance. This method must be implemented\n     * in the subclass.\n     *\n     * @param {SerializedHDWallet} _serialized - The serialized object representing the state of an HD wallet.\n     * @returns {AbstractHDWallet} An instance of AbstractHDWallet.\n     * @throws {Error} This method must be implemented in the subclass.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static async deserialize(_serialized) {\n        throw new Error('deserialize method must be implemented in the subclass');\n    }\n    /**\n     * Validates the version and coinType of the serialized wallet.\n     *\n     * @param {SerializedHDWallet} serialized - The serialized wallet data to be validated.\n     * @throws {Error} If the version or coinType of the serialized wallet does not match the expected values.\n     * @protected\n     * @static\n     */\n    static validateSerializedWallet(serialized) {\n        if (serialized.version !== this._version) {\n            throw new Error(`Invalid version ${serialized.version} for wallet (expected ${this._version})`);\n        }\n        if (serialized.coinType !== this._coinType) {\n            throw new Error(`Invalid coinType ${serialized.coinType} for wallet (expected ${this._coinType})`);\n        }\n    }\n    /**\n     * Imports addresses from a serialized wallet into the addresses map. Before adding the addresses, a validation is\n     * performed to ensure the address, public key, and zone match the expected values.\n     *\n     * @param {Map<string, NeuteredAddressInfo>} addressMap - The map where the addresses will be imported.\n     * @param {NeuteredAddressInfo[]} addresses - The array of addresses to be imported, each containing account, index,\n     *   change, address, pubKey, and zone information.\n     * @throws {Error} If there is a mismatch between the expected and actual address, public key, or zone.\n     * @protected\n     */\n    importSerializedAddresses(addressMap, addresses) {\n        for (const addressInfo of addresses) {\n            const newAddressInfo = this._addAddress(addressMap, addressInfo.account, addressInfo.index, addressInfo.change);\n            // validate the address info\n            if (addressInfo.address !== newAddressInfo.address) {\n                throw new Error(`Address mismatch: ${addressInfo.address} != ${newAddressInfo.address}`);\n            }\n            if (addressInfo.pubKey !== newAddressInfo.pubKey) {\n                throw new Error(`Public key mismatch: ${addressInfo.pubKey} != ${newAddressInfo.pubKey}`);\n            }\n            if (addressInfo.zone !== newAddressInfo.zone) {\n                throw new Error(`Zone mismatch: ${addressInfo.zone} != ${newAddressInfo.zone}`);\n            }\n        }\n    }\n    /**\n     * Retrieves the highest address index from the given address map for a specified zone, account, and change type.\n     *\n     * This method filters the address map based on the provided zone, account, and change type, then determines the\n     * maximum address index from the filtered addresses.\n     *\n     * @param {Map<string, NeuteredAddressInfo>} addressMap - The map containing address information, where the key is\n     *   an address string and the value is a NeuteredAddressInfo object.\n     * @param {Zone} zone - The specific zone to filter the addresses by.\n     * @param {number} account - The account number to filter the addresses by.\n     * @param {boolean} isChange - A boolean indicating whether to filter for change addresses (true) or receiving\n     *   addresses (false).\n     * @returns {number} - The highest address index for the specified criteria, or -1 if no addresses match.\n     * @protected\n     */\n    getLastAddressIndex(addressMap, zone, account, isChange) {\n        const addresses = Array.from(addressMap.values()).filter((addressInfo) => addressInfo.account === account && addressInfo.zone === zone && addressInfo.change === isChange);\n        return addresses.reduce((maxIndex, addressInfo) => Math.max(maxIndex, addressInfo.index), -1);\n    }\n    /**\n     * Creates and stores address information in the address map for a specified account, zone, and change type.\n     *\n     * This method constructs a NeuteredAddressInfo object using the provided HDNodeWallet and other parameters, then\n     * stores this information in the provided address map.\n     *\n     * @param {HDNodeWallet} addressNode - The HDNodeWallet object containing the address and public key information.\n     * @param {number} account - The account number to associate with the address.\n     * @param {Zone} zone - The specific zone to associate with the address.\n     * @param {boolean} isChange - A boolean indicating whether the address is a change address (true) or a receiving\n     *   address (false).\n     * @param {Map<string, NeuteredAddressInfo>} addressMap - The map to store the created NeuteredAddressInfo, with the\n     *   address as the key.\n     * @returns {NeuteredAddressInfo} - The created NeuteredAddressInfo object.\n     * @protected\n     */\n    createAndStoreAddressInfo(addressNode, account, zone, isChange, addressMap) {\n        const neuteredAddressInfo = {\n            pubKey: addressNode.publicKey,\n            address: addressNode.address,\n            account,\n            index: addressNode.index,\n            change: isChange,\n            zone,\n        };\n        addressMap.set(neuteredAddressInfo.address, neuteredAddressInfo);\n        return neuteredAddressInfo;\n    }\n}\nexport { AbstractHDWallet };\n//# sourceMappingURL=hdwallet.js.map","import { AbstractHDWallet, _guard } from './hdwallet.js';\nimport { HDNodeWallet } from './hdnodewallet.js';\nimport { resolveAddress } from '../address/index.js';\nimport { Mnemonic } from './mnemonic.js';\n/**\n * The Quai HD wallet is a BIP44-compliant hierarchical deterministic wallet used for managing a set of addresses in the\n * Quai ledger. This is the easiest way to manage the interaction of managing accounts and addresses on the Quai\n * network, however, if your use case requires a single address Quai address, you can use the {@link Wallet} class.\n *\n * The Quai HD wallet supports:\n *\n * - Adding accounts to the wallet heierchy\n * - Generating addresses for a specific account in any {@link Zone}\n * - Signing and sending transactions for any address in the wallet\n * - Signing and verifying EIP1193 typed data for any address in the wallet.\n * - Serializing the wallet to JSON and deserializing it back to a wallet instance.\n *\n * @category Wallet\n * @example\n *\n * ```ts\n * import { QuaiHDWallet, Zone } from 'quais';\n *\n * const wallet = new QuaiHDWallet();\n * const cyrpus1Address = await wallet.getNextAddress(0, Zone.Cyrpus1); // get the first address in the Cyrpus1 zone\n * await wallet.sendTransaction({ from: address, to: '0x...', value: 100 }); // send a transaction\n * const serializedWallet = wallet.serialize(); // serialize current (account/address) state of the wallet\n * .\n * .\n * .\n * const deserializedWallet = QuaiHDWallet.deserialize(serializedWallet); // create a new wallet instance from the serialized data\n * ```\n */\nclass QuaiHDWallet extends AbstractHDWallet {\n    /**\n     * The version of the wallet.\n     *\n     * @type {number}\n     * @static\n     */\n    static _version = 1;\n    /**\n     * The coin type for the wallet.\n     *\n     * @type {AllowedCoinType}\n     * @static\n     */\n    static _coinType = 994;\n    /**\n     * Create a QuaiHDWallet instance.\n     *\n     * @param {HDNodeWallet} root - The root HD node wallet.\n     * @param {Provider} [provider] - The provider.\n     */\n    constructor(guard, root, provider) {\n        super(guard, root, provider);\n    }\n    /**\n     * Sign a transaction.\n     *\n     * @param {QuaiTransactionRequest} tx - The transaction request.\n     * @returns {Promise<string>} A promise that resolves to the signed transaction.\n     */\n    async signTransaction(tx) {\n        const from = await resolveAddress(tx.from);\n        const fromNode = this._getHDNodeForAddress(from);\n        const signedTx = await fromNode.signTransaction(tx);\n        return signedTx;\n    }\n    /**\n     * Send a transaction.\n     *\n     * @param {QuaiTransactionRequest} tx - The transaction request.\n     * @returns {Promise<TransactionResponse>} A promise that resolves to the transaction response.\n     * @throws {Error} If the provider is not set.\n     */\n    async sendTransaction(tx) {\n        if (!this.provider) {\n            throw new Error('Provider is not set');\n        }\n        const from = await resolveAddress(tx.from);\n        const fromNode = this._getHDNodeForAddress(from);\n        const fromNodeConnected = fromNode.connect(this.provider);\n        return await fromNodeConnected.sendTransaction(tx);\n    }\n    /**\n     * Sign a message.\n     *\n     * @param {string} address - The address.\n     * @param {string | Uint8Array} message - The message to sign.\n     * @returns {Promise<string>} A promise that resolves to the signed message.\n     */\n    async signMessage(address, message) {\n        const addrNode = this._getHDNodeForAddress(address);\n        return await addrNode.signMessage(message);\n    }\n    /**\n     * Deserializes the given serialized HD wallet data into an instance of QuaiHDWallet.\n     *\n     * @async\n     * @param {SerializedHDWallet} serialized - The serialized wallet data to be deserialized.\n     * @returns {Promise<QuaiHDWallet>} A promise that resolves to an instance of QuaiHDWallet.\n     * @throws {Error} If validation of the serialized wallet data fails or if deserialization fails.\n     * @public\n     * @static\n     */\n    static async deserialize(serialized) {\n        super.validateSerializedWallet(serialized);\n        // create the wallet instance\n        const mnemonic = Mnemonic.fromPhrase(serialized.phrase);\n        const path = this.parentPath(serialized.coinType);\n        const root = HDNodeWallet.fromMnemonic(mnemonic, path);\n        const wallet = new this(_guard, root);\n        // import the addresses\n        wallet.importSerializedAddresses(wallet._addresses, serialized.addresses);\n        return wallet;\n    }\n    /**\n     * Signs typed data using the private key associated with the given address.\n     *\n     * @param {string} address - The address for which the typed data is to be signed.\n     * @param {TypedDataDomain} domain - The domain information of the typed data, defining the scope of the signature.\n     * @param {Record<string, TypedDataField[]>} types - The types of the data to be signed, mapping each data type name\n     *   to its fields.\n     * @param {Record<string, unknown>} value - The actual data to be signed.\n     * @returns {Promise<string>} A promise that resolves to the signed data in string format.\n     * @throws {Error} If the address does not correspond to a valid HD node or if signing fails.\n     */\n    async signTypedData(address, domain, types, value) {\n        const addrNode = this._getHDNodeForAddress(address);\n        return addrNode.signTypedData(domain, types, value);\n    }\n}\nexport { QuaiHDWallet };\n//# sourceMappingURL=quai-hdwallet.js.map","import { SigningKey } from '../crypto/index.js';\nimport { assertArgument } from '../utils/index.js';\nimport { BaseWallet } from './base-wallet.js';\nimport { decryptKeystoreJson, decryptKeystoreJsonSync, encryptKeystoreJson, encryptKeystoreJsonSync, isKeystoreJson, } from './json-keystore.js';\n/**\n * A **Wallet** manages a single private key which is used to sign transactions, messages and other common payloads.\n *\n * This class is generally the main entry point for developers that wish to use a private key directly, as it can create\n * instances from a large variety of common sources, including raw private key,\n * [BIP-39](https://en.bitcoin.it/wiki/BIP_0039) mnemonics and encrypted JSON wallets.\n *\n * @category Wallet\n */\nexport class Wallet extends BaseWallet {\n    /**\n     * Create a new wallet for the private `key`, optionally connected to `provider`.\n     *\n     * @param {string | SigningKey} key - The private key.\n     * @param {null | Provider} [provider] - The provider to connect to.\n     */\n    constructor(key, provider) {\n        if (typeof key === 'string' && !key.startsWith('0x')) {\n            key = '0x' + key;\n        }\n        const signingKey = typeof key === 'string' ? new SigningKey(key) : key;\n        super(signingKey, provider);\n    }\n    /**\n     * Connects the wallet to a provider.\n     *\n     * @param {null | Provider} provider - The provider to connect to.\n     * @returns {Wallet} The connected wallet.\n     */\n    connect(provider) {\n        return new Wallet(this.signingKey, provider);\n    }\n    /**\n     * Resolves to a [JSON Keystore Wallet](json-wallets) encrypted with `password`.\n     *\n     * If `progressCallback` is specified, it will receive periodic updates as the encryption process progresses.\n     *\n     * @param {Uint8Array | string} password - The password to encrypt the wallet with.\n     * @param {ProgressCallback} [progressCallback] - An optional callback to keep the user informed.\n     * @returns {Promise<string>} The encrypted JSON wallet.\n     */\n    async encrypt(password, progressCallback) {\n        const account = { address: this.address, privateKey: this.privateKey };\n        return await encryptKeystoreJson(account, password, { progressCallback });\n    }\n    /**\n     * Returns a [JSON Keystore Wallet](json-wallets) encrypted with `password`.\n     *\n     * It is preferred to use the [async version](encrypt) instead, which allows a\n     * {@link ProgressCallback | **ProgressCallback**} to keep the user informed.\n     *\n     * This method will block the event loop (freezing all UI) until it is complete, which may be a non-trivial\n     * duration.\n     *\n     * @param {Uint8Array | string} password - The password to encrypt the wallet with.\n     * @returns {string} The encrypted JSON wallet.\n     */\n    encryptSync(password) {\n        const account = { address: this.address, privateKey: this.privateKey };\n        return encryptKeystoreJsonSync(account, password);\n    }\n    /**\n     * Creates a wallet from a keystore account.\n     *\n     * @ignore\n     * @param {KeystoreAccount} account - The keystore account.\n     * @returns {Wallet} The wallet instance.\n     */\n    static #fromAccount(account) {\n        assertArgument(account, 'invalid JSON wallet', 'json', '[ REDACTED ]');\n        const wallet = new Wallet(account.privateKey);\n        assertArgument(wallet.address === account.address, 'address/privateKey mismatch', 'json', '[ REDACTED ]');\n        return wallet;\n    }\n    /**\n     * Creates (asynchronously) a **Wallet** by decrypting the `json` with `password`.\n     *\n     * If `progress` is provided, it is called periodically during decryption so that any UI can be updated.\n     *\n     * @param {string} json - The JSON data to decrypt.\n     * @param {Uint8Array | string} password - The password to decrypt the JSON data.\n     * @param {ProgressCallback} [progress] - An optional callback to keep the user informed.\n     * @returns {Promise<QuaiHDWallet | Wallet>} The decrypted wallet.\n     */\n    static async fromEncryptedJson(json, password, progress) {\n        let account;\n        if (isKeystoreJson(json)) {\n            account = await decryptKeystoreJson(json, password, progress);\n            return Wallet.#fromAccount(account);\n        }\n        throw new Error('invalid JSON wallet');\n    }\n    /**\n     * Creates a **Wallet** by decrypting the `json` with `password`.\n     *\n     * The {@link Wallet.fromEncryptedJson | **fromEncryptedJson**} method is preferred, as this method will lock up and\n     * freeze the UI during decryption, which may take some time.\n     *\n     * @param {string} json - The JSON data to decrypt.\n     * @param {Uint8Array | string} password - The password to decrypt the JSON data.\n     * @returns {QuaiHDWallet | Wallet} The decrypted wallet.\n     */\n    static fromEncryptedJsonSync(json, password) {\n        let account = null;\n        if (isKeystoreJson(json)) {\n            account = decryptKeystoreJsonSync(json, password);\n        }\n        else {\n            assertArgument(false, 'invalid JSON wallet', 'json', '[ REDACTED ]');\n        }\n        return Wallet.#fromAccount(account);\n    }\n}\n//# sourceMappingURL=wallet.js.map","/*! musig-js - MIT License (c) 2022 Brandon Black */\nconst TAGS = {\n  challenge: 'BIP0340/challenge',\n  keyagg_list: 'KeyAgg list',\n  keyagg_coef: 'KeyAgg coefficient',\n  musig_aux: 'MuSig/aux',\n  musig_nonce: 'MuSig/nonce',\n  musig_deterministic_nonce: 'MuSig/deterministic/nonce',\n  musig_noncecoef: 'MuSig/noncecoef',\n};\nfunction compare32b(a, b) {\n  if (a.length !== 32 || b.length !== 32) throw new Error('Invalid array');\n  const aD = new DataView(a.buffer, a.byteOffset, a.length);\n  const bD = new DataView(b.buffer, b.byteOffset, b.length);\n  for (let i = 0; i < 8; i++) {\n    const cmp = aD.getUint32(i * 4) - bD.getUint32(i * 4);\n    if (cmp !== 0) return cmp;\n  }\n  return 0;\n}\nfunction compare33b(a, b) {\n  if (a.length !== 33 || b.length !== 33) throw new Error('Invalid array');\n  const cmp = a[0] - b[0];\n  if (cmp !== 0) return cmp;\n  return compare32b(a.subarray(1), b.subarray(1));\n}\nconst makeSessionId =\n  typeof self === 'object' && (self.crypto || self.msCrypto)\n    ? () => (self.crypto || self.msCrypto).getRandomValues(new Uint8Array(32))\n    : () => require('crypto').randomBytes(32);\nconst _keyAggCache = new WeakMap();\nconst _coefCache = new WeakMap();\nconst _nonceCache = new WeakMap();\nconst _sessionCache = new WeakMap();\nexport function MuSigFactory(ecc) {\n  const CPOINT_INF = new Uint8Array(33);\n  const SCALAR_0 = new Uint8Array(32);\n  const SCALAR_1 = new Uint8Array(32);\n  SCALAR_1[31] = 1;\n  const SCALAR_MINUS_1 = ecc.scalarNegate(SCALAR_1);\n  function keyAggCoeff(publicKeys, publicKey) {\n    let coefCache = _coefCache.get(publicKeys);\n    if (coefCache === undefined) {\n      coefCache = new Map();\n      _coefCache.set(publicKeys, coefCache);\n    }\n    let coefficient = coefCache.get(publicKey);\n    if (coefficient) return coefficient;\n    coefficient = SCALAR_1;\n    let secondPublicKey;\n    let publicKeyHash;\n    let keyAggCache = _keyAggCache.get(publicKeys);\n    if (keyAggCache === undefined) {\n      const pkIdx2 = publicKeys.findIndex((pk) => compare33b(pk, publicKeys[0]) !== 0);\n      secondPublicKey = publicKeys[pkIdx2];\n      publicKeyHash = ecc.taggedHash(TAGS.keyagg_list, ...publicKeys);\n      keyAggCache = { publicKeyHash, secondPublicKey };\n      _keyAggCache.set(publicKeys, keyAggCache);\n    } else {\n      ({ publicKeyHash, secondPublicKey } = keyAggCache);\n    }\n    if (secondPublicKey === undefined || compare33b(publicKey, secondPublicKey) !== 0)\n      coefficient = ecc.taggedHash(TAGS.keyagg_coef, publicKeyHash, publicKey);\n    coefCache.set(publicKey, coefficient);\n    return coefficient;\n  }\n  function addTweak(ctx, t) {\n    const tweak = 'tweak' in t ? t : { tweak: t };\n    if (!ecc.isScalar(tweak.tweak))\n      throw new TypeError('Expected tweak to be a valid scalar with curve order');\n    let { gacc, tacc } = ctx;\n    let aggPublicKey = ctx.aggPublicKey;\n    if (!ecc.hasEvenY(aggPublicKey) && tweak.xOnly) {\n      gacc = ecc.scalarNegate(gacc);\n      tacc = ecc.scalarNegate(tacc);\n      aggPublicKey = ecc.pointNegate(aggPublicKey);\n    }\n    aggPublicKey = ecc.pointAddTweak(aggPublicKey, tweak.tweak, false);\n    if (aggPublicKey === null) throw new Error('Unexpected point at infinity during tweaking');\n    tacc = ecc.scalarAdd(tweak.tweak, tacc);\n    return { aggPublicKey, gacc, tacc };\n  }\n  function keyAgg(publicKeys, ...tweaks) {\n    checkArgs({ publicKeys });\n    const multipliedPublicKeys = publicKeys.map((publicKey) => {\n      const coefficient = keyAggCoeff(publicKeys, publicKey);\n      let multipliedPublicKey;\n      if (compare32b(coefficient, SCALAR_1) === 0) {\n        multipliedPublicKey = publicKey;\n      } else {\n        multipliedPublicKey = ecc.pointMultiplyUnsafe(publicKey, coefficient, false);\n      }\n      if (multipliedPublicKey === null) throw new Error('Point at infinity during aggregation');\n      return multipliedPublicKey;\n    });\n    const aggPublicKey = multipliedPublicKeys.reduce((a, b) => {\n      const next = ecc.pointAdd(a, b, false);\n      if (next === null) throw new Error('Point at infinity during aggregation');\n      return next;\n    });\n    return tweaks.reduce((ctx, tweak) => addTweak(ctx, tweak), {\n      aggPublicKey,\n      gacc: SCALAR_1,\n      tacc: SCALAR_0,\n    });\n  }\n  function getSessionValues(sessionKey) {\n    const sessionValues = _sessionCache.get(sessionKey);\n    if (!sessionValues) throw new Error('Invalid session key, please call `startSigningSession`');\n    return sessionValues;\n  }\n  function nonceAgg(publicNonces) {\n    checkArgs({ publicNonces });\n    const aggNonces = [publicNonces[0].subarray(0, 33), publicNonces[0].subarray(33)];\n    for (let i = 1; i < publicNonces.length; i++) {\n      if (aggNonces[0] !== null)\n        aggNonces[0] = ecc.pointAdd(aggNonces[0], publicNonces[i].subarray(0, 33), false);\n      if (aggNonces[1] !== null)\n        aggNonces[1] = ecc.pointAdd(aggNonces[1], publicNonces[i].subarray(33), false);\n    }\n    const aggNonce = new Uint8Array(66);\n    if (aggNonces[0] !== null) aggNonce.set(ecc.pointCompress(aggNonces[0]), 0);\n    if (aggNonces[1] !== null) aggNonce.set(ecc.pointCompress(aggNonces[1]), 33);\n    return aggNonce;\n  }\n  function startSigningSessionInner(aggNonce, msg, publicKeys, ctx) {\n    const pubKeyX = ecc.pointX(ctx.aggPublicKey);\n    const coefficient = ecc.taggedHash(TAGS.musig_noncecoef, aggNonce, pubKeyX, msg);\n    const aggNonces = [aggNonce.subarray(0, 33), aggNonce.subarray(33)];\n    let r = null;\n    if (compare33b(aggNonces[1], CPOINT_INF) !== 0 && compare33b(aggNonces[0], CPOINT_INF) !== 0) {\n      r = ecc.pointMultiplyAndAddUnsafe(aggNonces[1], coefficient, aggNonces[0], false);\n    } else if (compare33b(aggNonces[0], CPOINT_INF) !== 0) {\n      r = ecc.pointCompress(aggNonces[0], false);\n    } else if (compare33b(aggNonces[1], CPOINT_INF) !== 0) {\n      r = ecc.pointMultiplyUnsafe(aggNonces[1], coefficient, false);\n    }\n    if (r === null) r = ecc.getPublicKey(SCALAR_1, false);\n    if (r === null) throw new Error('Failed to get G');\n    const challenge = ecc.scalarMod(ecc.taggedHash(TAGS.challenge, ecc.pointX(r), pubKeyX, msg));\n    const key = { publicKey: ctx.aggPublicKey, aggNonce, msg };\n    _sessionCache.set(key, { ...ctx, coefficient, challenge, finalNonce: r, publicKeys });\n    return key;\n  }\n  function partialVerifyInner({ sig, publicKey, publicNonces, sessionKey }) {\n    const { msg } = sessionKey;\n    const { aggPublicKey, gacc, challenge, coefficient, finalNonce, publicKeys } =\n      getSessionValues(sessionKey);\n    const rePrime = ecc.pointMultiplyAndAddUnsafe(\n      publicNonces[1],\n      coefficient,\n      publicNonces[0],\n      false\n    );\n    if (rePrime === null) throw new Error('Unexpected public nonce at infinity');\n    const re = ecc.hasEvenY(finalNonce) ? rePrime : ecc.pointNegate(rePrime);\n    const a = keyAggCoeff(publicKeys, publicKey);\n    const g = ecc.hasEvenY(aggPublicKey) ? gacc : ecc.scalarNegate(gacc);\n    const ea = ecc.scalarMultiply(challenge, a);\n    const eag = ecc.scalarMultiply(ea, g);\n    const ver = ecc.pointMultiplyAndAddUnsafe(publicKey, eag, re, true);\n    if (ver === null) throw new Error('Unexpected verification point at infinity');\n    const sG = ecc.getPublicKey(sig, true);\n    if (sG === null) throw new Error('Unexpected signature point at infinity');\n    return compare33b(ver, sG) === 0;\n  }\n  function partialSignInner({ secretKey, publicKey, secretNonces, sessionKey }) {\n    const { msg } = sessionKey;\n    const { aggPublicKey, gacc, challenge, coefficient, finalNonce, publicKeys } =\n      getSessionValues(sessionKey);\n    const [k1, k2] = secretNonces.map((k) => (ecc.hasEvenY(finalNonce) ? k : ecc.scalarNegate(k)));\n    const a = keyAggCoeff(publicKeys, publicKey);\n    const g = ecc.hasEvenY(aggPublicKey) ? gacc : ecc.scalarNegate(gacc);\n    const d = ecc.scalarMultiply(g, secretKey);\n    const bk2 = ecc.scalarMultiply(coefficient, k2);\n    const k1bk2 = ecc.scalarAdd(k1, bk2);\n    const ea = ecc.scalarMultiply(challenge, a);\n    const ead = ecc.scalarMultiply(ea, d);\n    const sig = ecc.scalarAdd(k1bk2, ead);\n    return sig;\n  }\n  function partialSign({ secretKey, publicNonce, sessionKey, verify = true }) {\n    checkArgs({ publicNonce, secretKey });\n    const secretNonce = _nonceCache.get(publicNonce);\n    if (secretNonce === undefined)\n      throw new Error('No secret nonce found for specified public nonce');\n    _nonceCache.delete(publicNonce);\n    const publicKey = ecc.getPublicKey(secretKey, true);\n    if (publicKey === null) throw new Error('Invalid secret key, no corresponding public key');\n    if (compare33b(publicKey, secretNonce.subarray(64)) !== 0)\n      throw new Error('Secret nonce pubkey mismatch');\n    const secretNonces = [secretNonce.subarray(0, 32), secretNonce.subarray(32, 64)];\n    const sig = partialSignInner({\n      secretKey,\n      publicKey,\n      secretNonces,\n      sessionKey,\n    });\n    if (verify) {\n      const publicNonces = [publicNonce.subarray(0, 33), publicNonce.subarray(33)];\n      const valid = partialVerifyInner({\n        sig,\n        publicKey,\n        publicNonces,\n        sessionKey,\n      });\n      if (!valid) throw new Error('Partial signature failed verification');\n    }\n    return sig;\n  }\n  function deterministicSign({\n    secretKey,\n    aggOtherNonce,\n    publicKeys,\n    tweaks = [],\n    msg,\n    rand,\n    verify = true,\n    nonceOnly = false,\n  }) {\n    checkArgs({ rand, secretKey, aggOtherNonce });\n    const publicKey = ecc.getPublicKey(secretKey, true);\n    if (publicKey === null) throw new Error('Secret key has no corresponding public key');\n    let secretKeyPrime;\n    if (rand !== undefined) {\n      secretKeyPrime = ecc.taggedHash(TAGS.musig_aux, rand);\n      for (let i = 0; i < 32; i++) {\n        secretKeyPrime[i] = secretKeyPrime[i] ^ secretKey[i];\n      }\n    } else {\n      secretKeyPrime = secretKey;\n    }\n    const ctx = keyAgg(publicKeys, ...tweaks);\n    const aggPublicKey = ecc.pointX(ctx.aggPublicKey);\n    const mLength = new Uint8Array(8);\n    new DataView(mLength.buffer).setBigUint64(0, BigInt(msg.length));\n    const secretNonce = new Uint8Array(97);\n    const publicNonce = new Uint8Array(66);\n    for (let i = 0; i < 2; i++) {\n      const kH = ecc.taggedHash(\n        TAGS.musig_deterministic_nonce,\n        ...[secretKeyPrime, aggOtherNonce, aggPublicKey, mLength, msg, Uint8Array.of(i)]\n      );\n      const k = ecc.scalarMod(kH);\n      if (compare32b(SCALAR_0, k) === 0) throw new Error('0 secret nonce');\n      const pub = ecc.getPublicKey(k, true);\n      if (pub === null) throw new Error('Secret nonce has no corresponding public nonce');\n      secretNonce.set(k, i * 32);\n      publicNonce.set(pub, i * 33);\n    }\n    secretNonce.set(publicKey, 64);\n    if (nonceOnly) return { publicNonce };\n    _nonceCache.set(publicNonce, secretNonce);\n    const aggNonce = nonceAgg([aggOtherNonce, publicNonce]);\n    const sessionKey = startSigningSessionInner(aggNonce, msg, publicKeys, ctx);\n    const sig = partialSign({\n      secretKey,\n      publicNonce,\n      sessionKey,\n      verify,\n    });\n    return { sig, sessionKey, publicNonce };\n  }\n  const pubKeyArgs = ['publicKey', 'publicKeys'];\n  const scalarArgs = ['tweak', 'sig', 'sigs', 'tacc', 'gacc'];\n  const otherArgs32b = ['xOnlyPublicKey', 'rand', 'sessionId'];\n  const args32b = ['secretKey', ...scalarArgs, ...otherArgs32b];\n  const pubNonceArgs = ['publicNonce', 'publicNonces', 'aggNonce', 'aggOtherNonce', 'finalNonce'];\n  const otherArgs = ['aggPublicKey', 'secretNonce'];\n  const argLengths = new Map();\n  args32b.forEach((a) => argLengths.set(a, 32));\n  pubKeyArgs.forEach((a) => argLengths.set(a, 33));\n  pubNonceArgs.forEach((a) => argLengths.set(a, 66));\n  argLengths.set('secretNonce', 97);\n  argLengths.set('aggPublicKey', 65);\n  const scalarNames = new Set();\n  scalarArgs.forEach((n) => scalarNames.add(n));\n  function checkArgs(args) {\n    for (let [name, values] of Object.entries(args)) {\n      if (values === undefined) continue;\n      values = Array.isArray(values) ? values : [values];\n      if (values.length === 0) throw new TypeError(`0-length ${name}s not supported`);\n      for (const value of values) {\n        if (argLengths.get(name) !== value.length)\n          throw new TypeError(`Invalid ${name} length (${value.length})`);\n        if (name === 'secretKey') {\n          if (!ecc.isSecret(value)) throw new TypeError(`Invalid secretKey`);\n        } else if (name === 'secretNonce') {\n          for (let i = 0; i < 64; i += 32)\n            if (!ecc.isSecret(value.subarray(i, i + 32)))\n              throw new TypeError(`Invalid secretNonce`);\n        } else if (scalarNames.has(name)) {\n          for (let i = 0; i < value.length; i += 32)\n            if (!ecc.isScalar(value.subarray(i, i + 32))) throw new TypeError(`Invalid ${name}`);\n        }\n      }\n    }\n  }\n  return {\n    getXOnlyPubkey: (ctx) => {\n      if ('aggPublicKey' in ctx) return ecc.pointX(ctx.aggPublicKey);\n      return ecc.pointX(getSessionValues(ctx).aggPublicKey);\n    },\n    getPlainPubkey: (ctx) => {\n      if ('aggPublicKey' in ctx) return ecc.pointCompress(ctx.aggPublicKey);\n      return ecc.pointCompress(getSessionValues(ctx).aggPublicKey);\n    },\n    keySort: (publicKeys) => {\n      checkArgs({ publicKeys });\n      return [...publicKeys].sort((a, b) => compare33b(a, b));\n    },\n    keyAgg,\n    addTweaks: (ctx, ...tweaks) => {\n      checkArgs(ctx);\n      return tweaks.reduce((c, tweak) => addTweak(c, tweak), ctx);\n    },\n    nonceGen: ({\n      sessionId = makeSessionId(),\n      secretKey,\n      publicKey,\n      xOnlyPublicKey,\n      msg,\n      extraInput,\n    }) => {\n      if (extraInput !== undefined && extraInput.length > Math.pow(2, 32) - 1)\n        throw new TypeError('extraInput is limited to 2^32-1 bytes');\n      checkArgs({ sessionId, secretKey, publicKey, xOnlyPublicKey });\n      let rand;\n      if (secretKey !== undefined) {\n        rand = ecc.taggedHash(TAGS.musig_aux, sessionId);\n        for (let i = 0; i < 32; i++) {\n          rand[i] = rand[i] ^ secretKey[i];\n        }\n      } else {\n        rand = sessionId;\n      }\n      if (xOnlyPublicKey === undefined) xOnlyPublicKey = new Uint8Array();\n      const mPrefixed = [Uint8Array.of(0)];\n      if (msg !== undefined) {\n        mPrefixed[0][0] = 1;\n        mPrefixed.push(new Uint8Array(8));\n        new DataView(mPrefixed[1].buffer).setBigUint64(0, BigInt(msg.length));\n        mPrefixed.push(msg);\n      }\n      if (extraInput === undefined) extraInput = new Uint8Array();\n      const eLength = new Uint8Array(4);\n      new DataView(eLength.buffer).setUint32(0, extraInput.length);\n      const secretNonce = new Uint8Array(97);\n      const publicNonce = new Uint8Array(66);\n      for (let i = 0; i < 2; i++) {\n        const kH = ecc.taggedHash(\n          TAGS.musig_nonce,\n          rand,\n          Uint8Array.of(publicKey.length),\n          publicKey,\n          Uint8Array.of(xOnlyPublicKey.length),\n          xOnlyPublicKey,\n          ...mPrefixed,\n          eLength,\n          extraInput,\n          Uint8Array.of(i)\n        );\n        const k = ecc.scalarMod(kH);\n        if (compare32b(SCALAR_0, k) === 0) throw new Error('0 secret nonce');\n        const pub = ecc.getPublicKey(k, true);\n        if (pub === null) throw new Error('Secret nonce has no corresponding public nonce');\n        secretNonce.set(k, i * 32);\n        publicNonce.set(pub, i * 33);\n      }\n      secretNonce.set(publicKey, 64);\n      _nonceCache.set(publicNonce, secretNonce);\n      return publicNonce;\n    },\n    addExternalNonce: (publicNonce, secretNonce) => {\n      checkArgs({ publicNonce, secretNonce });\n      _nonceCache.set(publicNonce, secretNonce);\n    },\n    deterministicNonceGen: (args) => deterministicSign({ ...args, nonceOnly: true }),\n    deterministicSign,\n    nonceAgg,\n    startSigningSession: (aggNonce, msg, publicKeys, ...tweaks) => {\n      checkArgs({ aggNonce });\n      const ctx = keyAgg(publicKeys, ...tweaks);\n      return startSigningSessionInner(aggNonce, msg, publicKeys, ctx);\n    },\n    partialSign,\n    partialVerify: ({ sig, publicKey, publicNonce, sessionKey }) => {\n      checkArgs({ sig, publicKey, publicNonce });\n      const publicNonces = [publicNonce.subarray(0, 33), publicNonce.subarray(33)];\n      const valid = partialVerifyInner({\n        sig,\n        publicKey,\n        publicNonces,\n        sessionKey,\n      });\n      return valid;\n    },\n    signAgg: (sigs, sessionKey) => {\n      checkArgs({ sigs });\n      const { aggPublicKey, tacc, challenge, finalNonce } = getSessionValues(sessionKey);\n      let sPart = ecc.scalarMultiply(challenge, tacc);\n      if (!ecc.hasEvenY(aggPublicKey)) {\n        sPart = ecc.scalarNegate(sPart);\n      }\n      const aggS = sigs.reduce((a, b) => ecc.scalarAdd(a, b), sPart);\n      const sig = new Uint8Array(64);\n      sig.set(ecc.pointX(finalNonce), 0);\n      sig.set(aggS, 32);\n      return sig;\n    },\n  };\n}\n","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities\n/**\n * @__NO_SIDE_EFFECTS__\n */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction chain(...args) {\n    const id = (a) => a;\n    // Wrap call in closure so JIT can inline calls\n    const wrap = (a, b) => (c) => a(b(c));\n    // Construct chain of args[-1].encode(args[-2].encode([...]))\n    const encode = args.map((x) => x.encode).reduceRight(wrap, id);\n    // Construct chain of args[0].decode(args[1].decode(...))\n    const decode = args.map((x) => x.decode).reduce(wrap, id);\n    return { encode, decode };\n}\n/**\n * Encodes integer radix representation to array of strings using alphabet and back\n * @__NO_SIDE_EFFECTS__\n */\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\n/**\n * Pad strings array so it has integer number of bits\n * @__NO_SIDE_EFFECTS__\n */\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\n/**\n * Slow: O(n^2) time complexity\n * @__NO_SIDE_EFFECTS__\n */\nfunction convertRadix(data, from, to) {\n    // base 1 is impossible\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            const rounded = Math.floor(digitBase / to);\n            digits[i] = rounded;\n            if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!rounded)\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = /* @__NO_SIDE_EFFECTS__ */ (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = /*@__NO_SIDE_EFFECTS__ */ (from, to) => from + (to - gcd(from, to));\n/**\n * Implemented with numbers, because BigInt is 5x slower\n * @__NO_SIDE_EFFECTS__\n */\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0; // bitwise position in current element\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1; // clean carry, otherwise it will cause overflow\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of numbers');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\n/**\n * If both bases are power of same number (like `2**8 <-> 2**64`),\n * there is a linear algorithm. For now we have implementation for power-of-two bases only.\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of numbers');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\n// prettier-ignore\nexport const utils = {\n    alphabet, chain, checksum, convertRadix, convertRadix2, radix, radix2, join, padding,\n};\n// RFC 4648 aka RFC 3548\n// ---------------------\nexport const base16 = /* @__PURE__ */ chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = /* @__PURE__ */ chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32nopad = /* @__PURE__ */ chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), join(''));\nexport const base32hex = /* @__PURE__ */ chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32hexnopad = /* @__PURE__ */ chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), join(''));\nexport const base32crockford = /* @__PURE__ */ chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = /* @__PURE__ */ chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64nopad = /* @__PURE__ */ chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), join(''));\nexport const base64url = /* @__PURE__ */ chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nexport const base64urlnopad = /* @__PURE__ */ chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), join(''));\n// base58 code\n// -----------\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = /* @__PURE__ */ genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = /* @__PURE__ */ genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = /* @__PURE__ */ genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\n// xmr ver is done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.\n// Block encoding significantly reduces quadratic complexity of base58.\n// Data len (index) -> encoded block len\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const createBase58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\n// legacy export, bad name\nexport const base58check = createBase58check;\nconst BECH_ALPHABET = /* @__PURE__ */ chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (words instanceof Uint8Array)\n            words = Array.from(words);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        if (prefix.length === 0)\n            throw new TypeError(`Invalid prefix length ${prefix.length}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        const lowered = prefix.toLowerCase();\n        const sum = bechChecksum(lowered, words, ENCODING_CONST);\n        return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        const sepIndex = lowered.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = lowered.slice(0, sepIndex);\n        const data = lowered.slice(sepIndex + 1);\n        if (data.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(data).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!data.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    function encodeFromBytes(prefix, bytes) {\n        return encode(prefix, toWords(bytes));\n    }\n    return {\n        encode,\n        decode,\n        encodeFromBytes,\n        decodeToBytes,\n        decodeUnsafe,\n        fromWords,\n        fromWordsUnsafe,\n        toWords,\n    };\n}\nexport const bech32 = /* @__PURE__ */ genBech32('bech32');\nexport const bech32m = /* @__PURE__ */ genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = /* @__PURE__ */ chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\n// prettier-ignore\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = 'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!isBytes(bytes))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString; // as in python, but for bytes only\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n//# sourceMappingURL=index.js.map","import { hmac } from '@noble/hashes/hmac';\nimport { ripemd160 } from '@noble/hashes/ripemd160';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { base58check } from '@scure/base';\nexport const bs58check = base58check(sha256);\nexport function hash160(buffer) {\n    return ripemd160(sha256(buffer));\n}\nexport function hmacSHA512(key, data) {\n    return hmac(sha512, key, data);\n}\n//# sourceMappingURL=crypto.js.map","import { sha256 } from '@noble/hashes/sha256';\nimport { keccak256 } from '../crypto/index.js';\nimport { getBytes, hexlify } from '../utils/data.js';\nimport { getAddress } from '../address/address.js';\nimport { bs58check } from './bip32/crypto.js';\nimport { secp256k1 } from '@noble/curves/secp256k1';\nexport const PC_VERSION = 0x47;\nexport class PaymentCodePublic {\n    ecc;\n    bip32;\n    buf;\n    root;\n    hasPrivKeys;\n    /**\n     * Constructor for the PaymentCode class.\n     *\n     * @param {TinySecp256k1Interface} ecc - Implementation of secp256k1 elliptic curve\n     * @param {BIP32API} bip32 - Bip32 instance\n     * @param {Uint8Array} buf - The buffer representing the payment code.\n     * @throws {Error} Invalid buffer length - If the length of the buffer is not 80.\n     * @throws {Error} Only payment codes version 1 are supported - If the version of the payment code is not 1.\n     */\n    constructor(ecc, bip32, buf) {\n        this.ecc = ecc;\n        this.bip32 = bip32;\n        this.hasPrivKeys = false;\n        if (buf.length !== 80)\n            throw new Error('Invalid buffer length');\n        if (buf[0] !== 1)\n            throw new Error('Only payment codes version 1 are supported');\n        this.buf = buf;\n        this.root = bip32.fromPublicKey(this.pubKey, this.chainCode);\n    }\n    /**\n     * Get the features of PaymentCode.\n     *\n     * @returns {Uint8Array} The features as a Uint8Array object.\n     */\n    get features() {\n        return this.buf.subarray(1, 2);\n    }\n    /**\n     * Returns the public key.\n     *\n     * @returns {Uint8Array} The public key as a Uint8Array.\n     */\n    get pubKey() {\n        return this.buf.subarray(2, 2 + 33);\n    }\n    /**\n     * Retrieves the chain code of the payment code.\n     *\n     * @returns {Uint8Array} - The extracted chain code as a Uint8Array.\n     */\n    get chainCode() {\n        return this.buf.subarray(35, 35 + 32);\n    }\n    /**\n     * Retrieves the payment code buffer.\n     *\n     * @returns {Uint8Array} The payment code buffer.\n     */\n    get paymentCode() {\n        return this.buf;\n    }\n    /**\n     * Creates a base58 representation of the payment code.\n     *\n     * @returns {string} - The Base58 representation of PaymentCode.\n     */\n    async toBase58() {\n        const version = new Uint8Array([PC_VERSION]);\n        const buf = new Uint8Array(version.length + this.buf.length);\n        buf.set(version);\n        buf.set(this.buf, version.length);\n        // const { bs58check } = await import('@samouraiwallet/bip32/crypto');\n        return bs58check.encode(buf);\n    }\n    /**\n     * Derives a child from the root BIP32 node at the specified index.\n     *\n     * @param {number} index - The index of the child BIP32Interface object to be derived.\n     * @returns {BIP32Interface} - The derived child BIP32Interface object.\n     */\n    derive(index) {\n        return this.root.derive(index);\n    }\n    /**\n     * Retrieves the public key for notification.\n     *\n     * @returns {Uint8Array} The public key for notification.\n     */\n    getNotificationPublicKey() {\n        return getBytes(this.derive(0).publicKey);\n    }\n    /**\n     * Derives a public key from the shared secret.\n     *\n     * @param {Uint8Array} B - Public key\n     * @param {Uint8Array} S - Shared secret point\n     * @returns {Uint8Array} The derived public key.\n     * @throws {Error} If the shared secret is invalid or unable to derive the public key.\n     */\n    derivePublicKeyFromSharedSecret(B, S) {\n        const Sx = S.subarray(1, 33);\n        const s = sha256(Sx);\n        if (!this.ecc.isPrivate(s))\n            throw new Error('Invalid shared secret');\n        const P = this.ecc.pointAddScalar(B, s, true);\n        if (!P)\n            throw new Error('Unable to derive public key');\n        return P;\n    }\n    /**\n     * Derives a payment public key based on the given public payment code.\n     *\n     * @param {PaymentCodePublic} paymentCode - The public payment code to derive the payment public key from.\n     * @param {number} idx - The index used for derivation.\n     * @returns {Uint8Array} The derived payment public key.\n     * @throws {Error} If the payment code does not contain a valid public key, or if any step in the derivation process\n     *   fails.\n     */\n    derivePaymentPublicKey(paymentCode, idx) {\n        const a = paymentCode.getNotificationPrivateKey();\n        if (!this.ecc.isPrivate(a))\n            throw new Error('Received invalid private key');\n        const B = this.derive(idx).publicKey;\n        const S = this.ecc.pointMultiply(B, a);\n        if (!S)\n            throw new Error('Unable to compute secret point');\n        return this.derivePublicKeyFromSharedSecret(B, S);\n    }\n    /**\n     * Retrieves the address from a given public key.\n     *\n     * @param {Uint8Array} pubKey - The public key.\n     * @returns {string} The generated address.\n     * @throws {Error} - When unsupported address type is passed\n     * @protected\n     */\n    getAddressFromPubkey(pubKey) {\n        return getAddress(keccak256('0x' + hexlify(pubKey).substring(4)).substring(26));\n    }\n    /**\n     * Retrieves a payment address based on the provided parameters.\n     *\n     * @param {PaymentCodePublic} paymentCode - The public payment code to derive the payment address from.\n     * @param {number} idx - The index used in the derivation process.\n     * @returns {string} - The generated payment address.\n     * @throws {Error} - If unable to derive public key or if an unknown address type is specified.\n     */\n    getPaymentAddress(paymentCode, idx) {\n        const pubkey = hexlify(this.derivePaymentPublicKey(paymentCode, idx));\n        return getAddress(keccak256('0x' + pubkey.substring(4)).substring(26));\n    }\n}\nexport class PaymentCodePrivate extends PaymentCodePublic {\n    /**\n     * Constructor for the PaymentCodePrivate class.\n     *\n     * @param {HDNodeBIP32Adapter} root - The root HDNodeWallet as a HDNodeBIP32Adapter.\n     * @param {TinySecp256k1Interface} ecc - Implementation of secp256k1 elliptic curve.\n     * @param {BIP32API} bip32 - An instance implementing the bip32 API methods.\n     * @param {Uint8Array} buf - The buffer representing the payment code.\n     */\n    constructor(root, ecc, bip32, buf) {\n        super(ecc, bip32, buf);\n        this.root = root;\n        this.hasPrivKeys = true;\n    }\n    /**\n     * Derives a payment public key based on the given public payment code.\n     *\n     * @param {PaymentCodePublic} paymentCode - The public payment code to derive the payment public key from.\n     * @param {number} idx - The index used for derivation.\n     * @returns {Uint8Array} The derived payment public key.\n     * @throws {Error} If the payment code does not contain a valid public key or unable to derive the node with private\n     *   key.\n     */\n    derivePaymentPublicKey(paymentCode, idx) {\n        const A = paymentCode.getNotificationPublicKey();\n        if (!this.ecc.isPoint(A))\n            throw new Error('Received invalid public key');\n        const b_node = this.derive(idx);\n        if (!b_node.privateKey)\n            throw new Error('Unable to derive node with private key');\n        const b = getBytes(b_node.privateKey);\n        const B = getBytes(b_node.publicKey);\n        const S = this.ecc.pointMultiply(A, b);\n        if (!S)\n            throw new Error('Unable to compute resulting point');\n        return this.derivePublicKeyFromSharedSecret(B, S);\n    }\n    /**\n     * Retrieves a payment address based on the provided parameters.\n     *\n     * @param {PaymentCodePublic} paymentCode - The public payment code to derive the payment address from.\n     * @param {number} idx - The index used in the derivation process.\n     * @returns {string} - The generated payment address.\n     * @throws {Error} - If unable to derive public key or if an unknown address type is specified.\n     */\n    getPaymentAddress(paymentCode, idx) {\n        const pubKey = this.derivePaymentPublicKey(paymentCode, idx);\n        return this.getAddressFromPubkey(pubKey);\n    }\n    /**\n     * Derives a payment private key based on the given public payment code.\n     *\n     * @param {PaymentCodePublic} paymentCodePublic - The public payment code to derive the payment private key from.\n     * @param {number} idx - The index used for derivation.\n     * @returns {Uint8Array} The derived payment private key.\n     * @throws {Error} If the payment code does not contain a valid public key, unable to derive the node without\n     *   private key, unable to compute the resulting point, or invalid shared secret.\n     */\n    derivePaymentPrivateKey(paymentCodePublic, idx) {\n        const A = paymentCodePublic.getNotificationPublicKey();\n        if (!this.ecc.isPoint(A))\n            throw new Error('Argument is not a valid public key');\n        const b_node = this.derive(idx);\n        if (!b_node.privateKey)\n            throw new Error('Unable to derive node without private key');\n        const b = getBytes(b_node.privateKey);\n        const S = this.ecc.pointMultiply(A, b);\n        if (!S)\n            throw new Error('Unable to compute resulting point');\n        const Sx = S.subarray(1, 33);\n        const s = sha256(Sx);\n        if (!this.ecc.isPrivate(s))\n            throw new Error('Invalid shared secret');\n        const paymentPrivateKey = this.ecc.privateAdd(b, s);\n        if (!paymentPrivateKey)\n            throw new Error('Unable to compute payment private key');\n        return paymentPrivateKey;\n    }\n    /**\n     * Retrieves the notification private key.\n     *\n     * @returns {Uint8Array} The notification private key.\n     */\n    getNotificationPrivateKey() {\n        const child = this.derive(0);\n        return child.privateKey;\n    }\n}\n/**\n * Validates a payment code base58 encoded string.\n *\n * @param {string} paymentCode - The payment code to validate.\n * @throws {Error} If the payment code is invalid.\n */\nexport function validatePaymentCode(paymentCode) {\n    const VERSION_BYTE = 0x47;\n    const FEATURE_BYTE = 0x00;\n    try {\n        const decoded = bs58check.decode(paymentCode);\n        if (decoded.length !== 81) {\n            return false;\n        }\n        if (decoded[0] !== VERSION_BYTE) {\n            return false;\n        }\n        const paymentCodeBytes = decoded.slice(1);\n        if (paymentCodeBytes[0] !== 0x01) {\n            return false;\n        }\n        // Check if the second byte is 0 (features byte)\n        if (paymentCodeBytes[1] !== FEATURE_BYTE) {\n            return false;\n        }\n        // Check if the public key starts with 0x02 or 0x03\n        if (paymentCodeBytes[2] !== 0x02 && paymentCodeBytes[2] !== 0x03) {\n            return false;\n        }\n        const pubKey = paymentCodeBytes.slice(2, 35);\n        try {\n            secp256k1.ProjectivePoint.fromHex(Buffer.from(pubKey).toString('hex')).assertValidity();\n        }\n        catch (error) {\n            return false;\n        }\n        if (!paymentCodeBytes.slice(67).every((byte) => byte === 0)) {\n            return false;\n        }\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\n//# sourceMappingURL=payment-codes.js.map","/**\n * Uint8Array comparison\n */\nexport function areUint8ArraysEqual(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let index = 0; index < a.length; index++) {\n        if (a[index] !== b[index]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=uint8array-utils.js.map","import { hexToBytes } from '@noble/hashes/utils';\nimport { areUint8ArraysEqual } from './uint8array-utils.js';\nconst h = (hex) => hexToBytes(hex);\nexport function testEcc(ecc) {\n    assert(ecc.isPoint(h('0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798')));\n    assert(!ecc.isPoint(h('030000000000000000000000000000000000000000000000000000000000000005')));\n    assert(ecc.isPrivate(h('79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798')));\n    // order - 1\n    assert(ecc.isPrivate(h('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140')));\n    // 0\n    assert(!ecc.isPrivate(h('0000000000000000000000000000000000000000000000000000000000000000')));\n    // order\n    assert(!ecc.isPrivate(h('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141')));\n    // order + 1\n    assert(!ecc.isPrivate(h('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364142')));\n    assert(areUint8ArraysEqual(ecc.pointFromScalar(h('b1121e4088a66a28f5b6b0f5844943ecd9f610196d7bb83b25214b60452c09af')), h('02b07ba9dca9523b7ef4bd97703d43d20399eb698e194704791a25ce77a400df99')));\n    if (ecc.xOnlyPointAddTweak) {\n        assert(ecc.xOnlyPointAddTweak(h('79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'), h('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140')) === null);\n        let xOnlyRes = ecc.xOnlyPointAddTweak(h('1617d38ed8d8657da4d4761e8057bc396ea9e4b9d29776d4be096016dbd2509b'), h('a8397a935f0dfceba6ba9618f6451ef4d80637abf4e6af2669fbc9de6a8fd2ac'));\n        assert(areUint8ArraysEqual(xOnlyRes.xOnlyPubkey, h('e478f99dab91052ab39a33ea35fd5e6e4933f4d28023cd597c9a1f6760346adf')) && xOnlyRes.parity === 1);\n        xOnlyRes = ecc.xOnlyPointAddTweak(h('2c0b7cf95324a07d05398b240174dc0c2be444d96b159aa6c7f7b1e668680991'), h('823c3cd2142744b075a87eade7e1b8678ba308d566226a0056ca2b7a76f86b47'));\n    }\n    assert(areUint8ArraysEqual(ecc.pointAddScalar(h('0379be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'), h('0000000000000000000000000000000000000000000000000000000000000003')), h('02c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee5')));\n    assert(areUint8ArraysEqual(ecc.privateAdd(h('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036413e'), h('0000000000000000000000000000000000000000000000000000000000000002')), h('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140')));\n    if (ecc.privateNegate) {\n        assert(areUint8ArraysEqual(ecc.privateNegate(h('0000000000000000000000000000000000000000000000000000000000000001')), h('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140')));\n        assert(areUint8ArraysEqual(ecc.privateNegate(h('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036413e')), h('0000000000000000000000000000000000000000000000000000000000000003')));\n        assert(areUint8ArraysEqual(ecc.privateNegate(h('b1121e4088a66a28f5b6b0f5844943ecd9f610196d7bb83b25214b60452c09af')), h('4eede1bf775995d70a494f0a7bb6bc11e0b8cccd41cce8009ab1132c8b0a3792')));\n    }\n    assert(areUint8ArraysEqual(ecc.sign(h('5e9f0a0d593efdcf78ac923bc3313e4e7d408d574354ee2b3288c0da9fbba6ed'), h('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140')), h('54c4a33c6423d689378f160a7ff8b61330444abb58fb470f96ea16d99d4a2fed07082304410efa6b2943111b6a4e0aaa7b7db55a07e9861d1fb3cb1f421044a5')));\n    assert(ecc.verify(h('5e9f0a0d593efdcf78ac923bc3313e4e7d408d574354ee2b3288c0da9fbba6ed'), h('0379be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'), h('54c4a33c6423d689378f160a7ff8b61330444abb58fb470f96ea16d99d4a2fed07082304410efa6b2943111b6a4e0aaa7b7db55a07e9861d1fb3cb1f421044a5')));\n    if (ecc.signSchnorr) {\n        assert(areUint8ArraysEqual(ecc.signSchnorr(h('7e2d58d8b3bcdf1abadec7829054f90dda9805aab56c77333024b9d0a508b75c'), h('c90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b14e5c9'), h('c87aa53824b4d7ae2eb035a2b5bbbccc080e76cdc6d1692c4b0b62d798e6d906')), h('5831aaeed7b44bb74e5eab94ba9d4294c49bcf2a60728d8b4c200f50dd313c1bab745879a5ad954a72c45a91c3a51d3c7adea98d82f8481e0e1e03674a6f3fb7')));\n    }\n    if (ecc.verifySchnorr) {\n        assert(ecc.verifySchnorr(h('7e2d58d8b3bcdf1abadec7829054f90dda9805aab56c77333024b9d0a508b75c'), h('dd308afec5777e13121fa72b9cc1b7cc0139715309b086c960e18fd969774eb8'), h('5831aaeed7b44bb74e5eab94ba9d4294c49bcf2a60728d8b4c200f50dd313c1bab745879a5ad954a72c45a91c3a51d3c7adea98d82f8481e0e1e03674a6f3fb7')));\n    }\n}\nfunction assert(bool) {\n    if (!bool)\n        throw new Error('ecc library invalid');\n}\n//# sourceMappingURL=testecc.js.map","import * as crypto from './crypto.js';\nimport { testEcc } from './testecc.js';\nexport function BIP32Factory(ecc) {\n    testEcc(ecc);\n    // const UINT256_TYPE = ow.uint8Array.length(32);\n    // const NETWORK_TYPE = ow.object.partialShape({\n    //     wif: ow.number.uint8,\n    //     bip32: ow.object.exactShape({\n    //         public: ow.number.uint32,\n    //         private: ow.number.uint32,\n    //     }),\n    // });\n    const BITCOIN = {\n        bip32: {\n            public: 0x0488b21e,\n            private: 0x0488ade4,\n        },\n        wif: 0x80,\n    };\n    const HIGHEST_BIT = 0x80000000;\n    // const UINT31_MAX = Math.pow(2, 31) - 1;\n    function toXOnly(pubKey) {\n        return pubKey.length === 32 ? pubKey : pubKey.subarray(1, 33);\n    }\n    class Bip32Signer {\n        __D;\n        __Q;\n        lowR;\n        constructor({ __D, __Q }) {\n            this.__D = __D;\n            this.__Q = __Q;\n            this.lowR = false;\n        }\n        get publicKey() {\n            if (this.__Q === undefined)\n                this.__Q = ecc.pointFromScalar(this.__D, true);\n            return this.__Q;\n        }\n        get privateKey() {\n            return this.__D;\n        }\n        sign(hash, lowR) {\n            if (!this.privateKey)\n                throw new Error('Missing private key');\n            if (lowR === undefined)\n                lowR = this.lowR;\n            if (lowR === false) {\n                return ecc.sign(hash, this.privateKey);\n            }\n            else {\n                let sig = ecc.sign(hash, this.privateKey);\n                const extraData = new Uint8Array(32);\n                const extraDataView = new DataView(extraData.buffer);\n                let counter = 0;\n                // if first try is lowR, skip the loop\n                // for second try and on, add extra entropy counting up\n                while (sig[0] > 0x7f) {\n                    counter++;\n                    extraDataView.setUint32(0, counter, true);\n                    sig = ecc.sign(hash, this.privateKey, extraData);\n                }\n                return sig;\n            }\n        }\n        signSchnorr(hash) {\n            if (!this.privateKey)\n                throw new Error('Missing private key');\n            if (!ecc.signSchnorr)\n                throw new Error('signSchnorr not supported by ecc library');\n            return ecc.signSchnorr(hash, this.privateKey);\n        }\n        verify(hash, signature) {\n            return ecc.verify(hash, this.publicKey, signature);\n        }\n        verifySchnorr(hash, signature) {\n            if (!ecc.verifySchnorr)\n                throw new Error('verifySchnorr not supported by ecc library');\n            return ecc.verifySchnorr(hash, this.publicKey.subarray(1, 33), signature);\n        }\n    }\n    class BIP32 extends Bip32Signer {\n        chainCode;\n        network;\n        __DEPTH;\n        __INDEX;\n        __PARENT_FINGERPRINT;\n        constructor({ __D, __Q, chainCode, network, __DEPTH = 0, __INDEX = 0, __PARENT_FINGERPRINT = 0x00000000, }) {\n            super({ __D, __Q });\n            this.chainCode = chainCode;\n            this.network = network;\n            this.__DEPTH = __DEPTH;\n            this.__INDEX = __INDEX;\n            this.__PARENT_FINGERPRINT = __PARENT_FINGERPRINT;\n            // ow(network, NETWORK_TYPE);\n        }\n        get depth() {\n            return this.__DEPTH;\n        }\n        get index() {\n            return this.__INDEX;\n        }\n        get parentFingerprint() {\n            return this.__PARENT_FINGERPRINT;\n        }\n        get identifier() {\n            return crypto.hash160(this.publicKey);\n        }\n        get fingerprint() {\n            return this.identifier.subarray(0, 4);\n        }\n        get compressed() {\n            return true;\n        }\n        isNeutered() {\n            return this.__D === undefined;\n        }\n        neutered() {\n            return fromPublicKeyLocal(this.publicKey, this.chainCode, this.network, this.depth, this.index, this.parentFingerprint);\n        }\n        toBase58() {\n            const network = this.network;\n            const version = !this.isNeutered() ? network.bip32.private : network.bip32.public;\n            const buffer = new Uint8Array(78);\n            const bufferView = new DataView(buffer.buffer);\n            // 4 bytes: version bytes\n            bufferView.setUint32(0, version, false);\n            // 1 byte: depth: 0x00 for master nodes, 0x01 for level-1 descendants, ....\n            bufferView.setUint8(4, this.depth);\n            // 4 bytes: the fingerprint of the parent's key (0x00000000 if master key)\n            bufferView.setUint32(5, this.parentFingerprint, false);\n            // 4 bytes: child number. This is the number i in xi = xpar/i, with xi the key being serialized.\n            // This is encoded in big endian. (0x00000000 if master key)\n            bufferView.setUint32(9, this.index, false);\n            // 32 bytes: the chain code\n            buffer.set(this.chainCode, 13);\n            // 33 bytes: the public key or private key data\n            if (!this.isNeutered()) {\n                // 0x00 + k for private keys\n                bufferView.setUint8(45, 0);\n                buffer.set(this.privateKey, 46);\n                // 33 bytes: the public key\n            }\n            else {\n                // X9.62 encoding for public keys\n                buffer.set(this.publicKey, 45);\n            }\n            return crypto.bs58check.encode(buffer);\n        }\n        derive(index) {\n            // ow(index, ow.number.message('Expected UInt32').uint32.message('Expected UInt32'));\n            const isHardened = index >= HIGHEST_BIT;\n            const data = new Uint8Array(37);\n            const dataView = new DataView(data.buffer);\n            // Hardened child\n            if (isHardened) {\n                if (this.isNeutered())\n                    throw new TypeError('Missing private key for hardened child key');\n                // data = 0x00 || ser256(kpar) || ser32(index)\n                data[0] = 0x00;\n                data.set(this.privateKey, 1);\n                dataView.setUint32(33, index, false);\n                // Normal child\n            }\n            else {\n                // data = serP(point(kpar)) || ser32(index)\n                //      = serP(Kpar) || ser32(index)\n                data.set(this.publicKey, 0);\n                dataView.setUint32(33, index, false);\n            }\n            const I = crypto.hmacSHA512(this.chainCode, data);\n            const IL = I.slice(0, 32);\n            const IR = I.slice(32);\n            // if parse256(IL) >= n, proceed with the next value for i\n            if (!ecc.isPrivate(IL))\n                return this.derive(index + 1);\n            // Private parent key -> private child key\n            let hd;\n            if (!this.isNeutered()) {\n                // ki = parse256(IL) + kpar (mod n)\n                const ki = ecc.privateAdd(this.privateKey, IL);\n                // In case ki == 0, proceed with the next value for i\n                if (ki == null)\n                    return this.derive(index + 1);\n                hd = fromPrivateKeyLocal(ki, IR, this.network, this.depth + 1, index, new DataView(this.fingerprint.buffer).getUint32(0, false));\n                // Public parent key -> public child key\n            }\n            else {\n                // Ki = point(parse256(IL)) + Kpar\n                //    = G*IL + Kpar\n                const Ki = ecc.pointAddScalar(this.publicKey, IL, true);\n                // In case Ki is the point at infinity, proceed with the next value for i\n                if (Ki === null)\n                    return this.derive(index + 1);\n                hd = fromPublicKeyLocal(Ki, IR, this.network, this.depth + 1, index, new DataView(this.fingerprint.buffer).getUint32(0, false));\n            }\n            return hd;\n        }\n        deriveHardened(index) {\n            // ow(index, ow.number\n            //     .message('Expected UInt31')\n            //     .uint32.message('Expected UInt31')\n            //     .is(value => value <= UINT31_MAX)\n            //     .message('Expected UInt31'));\n            // Only derives hardened private keys by default\n            return this.derive(index + HIGHEST_BIT);\n        }\n        derivePath(path) {\n            // ow(path, ow.string\n            //     .is(value => value.match(/^(m\\/)?(\\d+'?\\/)*\\d+'?$/) !== null)\n            //     .message(value => `Expected BIP32Path, got ${value}`));\n            let splitPath = path.split('/');\n            if (splitPath[0] === 'm') {\n                if (this.parentFingerprint)\n                    throw new TypeError('Expected master, got child');\n                splitPath = splitPath.slice(1);\n            }\n            return splitPath.reduce((prevHd, indexStr) => {\n                let index;\n                if (indexStr.slice(-1) === `'`) {\n                    index = parseInt(indexStr.slice(0, -1), 10);\n                    return prevHd.deriveHardened(index);\n                }\n                else {\n                    index = parseInt(indexStr, 10);\n                    return prevHd.derive(index);\n                }\n            }, this);\n        }\n        tweak(t) {\n            if (this.privateKey)\n                return this.tweakFromPrivateKey(t);\n            return this.tweakFromPublicKey(t);\n        }\n        tweakFromPublicKey(t) {\n            const xOnlyPubKey = toXOnly(this.publicKey);\n            if (!ecc.xOnlyPointAddTweak)\n                throw new Error('xOnlyPointAddTweak not supported by ecc library');\n            const tweakedPublicKey = ecc.xOnlyPointAddTweak(xOnlyPubKey, t);\n            if (!tweakedPublicKey || tweakedPublicKey.xOnlyPubkey === null)\n                throw new Error('Cannot tweak public key!');\n            const parityByte = Uint8Array.from([tweakedPublicKey.parity === 0 ? 0x02 : 0x03]);\n            const tweakedPublicKeyCompresed = new Uint8Array(tweakedPublicKey.xOnlyPubkey.length + 1);\n            tweakedPublicKeyCompresed.set(parityByte);\n            tweakedPublicKeyCompresed.set(tweakedPublicKey.xOnlyPubkey, 1);\n            return new Bip32Signer({ __Q: tweakedPublicKeyCompresed });\n        }\n        tweakFromPrivateKey(t) {\n            const hasOddY = this.publicKey[0] === 3 || (this.publicKey[0] === 4 && (this.publicKey[64] & 1) === 1);\n            const privateKey = (() => {\n                if (!hasOddY)\n                    return this.privateKey;\n                else if (!ecc.privateNegate)\n                    throw new Error('privateNegate not supported by ecc library');\n                else\n                    return ecc.privateNegate(this.privateKey);\n            })();\n            const tweakedPrivateKey = ecc.privateAdd(privateKey, t);\n            if (!tweakedPrivateKey)\n                throw new Error('Invalid tweaked private key!');\n            return new Bip32Signer({ __D: tweakedPrivateKey });\n        }\n    }\n    function fromBase58(inString, network) {\n        const buffer = crypto.bs58check.decode(inString);\n        const bufferView = new DataView(buffer.buffer);\n        if (buffer.length !== 78)\n            throw new TypeError('Invalid buffer length');\n        network = network || BITCOIN;\n        // 4 bytes: version bytes\n        const version = bufferView.getUint32(0, false);\n        if (version !== network.bip32.private && version !== network.bip32.public)\n            throw new TypeError('Invalid network version');\n        // 1 byte: depth: 0x00 for master nodes, 0x01 for level-1 descendants, ...\n        const depth = buffer[4];\n        // 4 bytes: the fingerprint of the parent's key (0x00000000 if master key)\n        const parentFingerprint = bufferView.getUint32(5, false);\n        if (depth === 0) {\n            if (parentFingerprint !== 0x00000000)\n                throw new TypeError('Invalid parent fingerprint');\n        }\n        // 4 bytes: child number. This is the number i in xi = xpar/i, with xi the key being serialized.\n        // This is encoded in MSB order. (0x00000000 if master key)\n        const index = bufferView.getUint32(9, false);\n        if (depth === 0 && index !== 0)\n            throw new TypeError('Invalid index');\n        // 32 bytes: the chain code\n        const chainCode = buffer.subarray(13, 45);\n        let hd;\n        // 33 bytes: private key data (0x00 + k)\n        if (version === network.bip32.private) {\n            if (bufferView.getUint8(45) !== 0x00)\n                throw new TypeError('Invalid private key');\n            const k = buffer.subarray(46, 78);\n            hd = fromPrivateKeyLocal(k, chainCode, network, depth, index, parentFingerprint);\n            // 33 bytes: public key data (0x02 + X or 0x03 + X)\n        }\n        else {\n            const X = buffer.subarray(45, 78);\n            hd = fromPublicKeyLocal(X, chainCode, network, depth, index, parentFingerprint);\n        }\n        return hd;\n    }\n    function fromPrivateKey(privateKey, chainCode, network) {\n        return fromPrivateKeyLocal(privateKey, chainCode, network || BITCOIN, 0, 0, 0);\n    }\n    function fromPrivateKeyLocal(privateKey, chainCode, network, depth, index, parentFingerprint) {\n        // ow({ privateKey, chainCode }, ow.object.exactShape({\n        //     privateKey: UINT256_TYPE,\n        //     chainCode: UINT256_TYPE,\n        // }));\n        network = network || BITCOIN;\n        if (!ecc.isPrivate(privateKey))\n            throw new TypeError('Private key not in range [1, n)');\n        return new BIP32({\n            __D: privateKey,\n            chainCode,\n            network,\n            __DEPTH: depth,\n            __INDEX: index,\n            __PARENT_FINGERPRINT: parentFingerprint,\n        });\n    }\n    function fromPublicKey(publicKey, chainCode, network) {\n        return fromPublicKeyLocal(publicKey, chainCode, network || BITCOIN, 0, 0, 0);\n    }\n    function fromPublicKeyLocal(publicKey, chainCode, network, depth, index, parentFingerprint) {\n        // ow({ publicKey, chainCode }, ow.object.exactShape({\n        //     publicKey: ow.uint8Array.length(33),\n        //     chainCode: UINT256_TYPE,\n        // }));\n        network = network || BITCOIN;\n        // verify the X coordinate is a point on the curve\n        if (!ecc.isPoint(publicKey))\n            throw new TypeError('Point is not on the curve');\n        return new BIP32({\n            __Q: publicKey,\n            chainCode,\n            network,\n            __DEPTH: depth,\n            __INDEX: index,\n            __PARENT_FINGERPRINT: parentFingerprint,\n        });\n    }\n    function fromSeed(seed, network) {\n        // ow(seed, ow.uint8Array);\n        if (seed.length < 16)\n            throw new TypeError('Seed should be at least 128 bits');\n        if (seed.length > 64)\n            throw new TypeError('Seed should be at most 512 bits');\n        network = network || BITCOIN;\n        const encoder = new TextEncoder();\n        const I = crypto.hmacSHA512(encoder.encode('Bitcoin seed'), seed);\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n        return fromPrivateKey(IL, IR, network);\n    }\n    return {\n        fromSeed,\n        fromBase58,\n        fromPublicKey,\n        fromPrivateKey,\n    };\n}\n//# sourceMappingURL=bip32.js.map","import { getBytes } from '../../utils/data.js';\nexport class HDNodeBIP32Adapter {\n    hdNodeWallet;\n    constructor(hdNodeWallet) {\n        this.hdNodeWallet = hdNodeWallet;\n    }\n    get chainCode() {\n        return getBytes(this.hdNodeWallet.chainCode);\n    }\n    get network() {\n        throw 'Not implemented';\n    }\n    get depth() {\n        return this.hdNodeWallet.depth;\n    }\n    get index() {\n        return this.hdNodeWallet.index;\n    }\n    get parentFingerprint() {\n        return parseInt(this.hdNodeWallet.parentFingerprint);\n    }\n    get privateKey() {\n        return getBytes(this.hdNodeWallet.privateKey);\n    }\n    get identifier() {\n        throw 'Not implemented';\n    }\n    get fingerprint() {\n        throw 'Not implemented';\n    }\n    isNeutered() {\n        throw 'Not implemented';\n    }\n    neutered() {\n        throw 'Not implemented';\n    }\n    toBase58() {\n        throw 'Not implemented';\n    }\n    // Map `derive` to `deriveChild`\n    derive(index) {\n        const derivedNode = this.hdNodeWallet.deriveChild(index);\n        return new HDNodeBIP32Adapter(derivedNode);\n    }\n    deriveHardened(index) {\n        throw 'Not implemented';\n    }\n    derivePath(path) {\n        const derivedNode = this.hdNodeWallet.derivePath(path);\n        return new HDNodeBIP32Adapter(derivedNode);\n    }\n    tweak(t) {\n        throw 'Not implemented';\n    }\n    get publicKey() {\n        return getBytes(this.hdNodeWallet.publicKey);\n    }\n    get lowR() {\n        throw 'Not implemented';\n    }\n    sign(hash) {\n        const sig = this.hdNodeWallet.signingKey.sign(hash);\n        return getBytes(sig.serialized);\n    }\n    verify(hash, signature) {\n        throw 'Not implemented';\n    }\n    signSchnorr(hash) {\n        throw 'Not implemented';\n    }\n    verifySchnorr(hash, signature) {\n        throw 'Not implemented';\n    }\n}\n//# sourceMappingURL=types.js.map","import { AbstractHDWallet, _guard, MAX_ADDRESS_DERIVATION_ATTEMPTS, } from './hdwallet.js';\nimport { HDNodeWallet } from './hdnodewallet.js';\nimport { computeAddress } from '../address/index.js';\nimport { getBytes, hexlify } from '../utils/index.js';\nimport { QiTransaction, FewestCoinSelector } from '../transaction/index.js';\nimport { MuSigFactory } from '@brandonblack/musig';\nimport { schnorr } from '@noble/curves/secp256k1';\nimport { keccak256, musigCrypto } from '../crypto/index.js';\nimport { UTXO, denominations } from '../transaction/utxo.js';\nimport { Zone } from '../constants/index.js';\nimport { Mnemonic } from './mnemonic.js';\nimport { PaymentCodePrivate, PaymentCodePublic, PC_VERSION, validatePaymentCode } from './payment-codes.js';\nimport { BIP32Factory } from './bip32/bip32.js';\nimport { bs58check } from './bip32/crypto.js';\nimport { HDNodeBIP32Adapter } from './bip32/types.js';\nimport ecc from '@bitcoinerlab/secp256k1';\n/**\n * Current known issues:\n *\n * - When generating send addresses we are not checking if the address has already been used before\n * - When syncing is seems like we are adding way too many change addresses\n * - Bip44 external and change address maps also have gap addresses in them\n * - It is unclear if we have checked if addresses have been used and if they are used\n * - We should always check all addresses that were previously included in a transaction to see if they have been used\n */\n/**\n * The Qi HD wallet is a BIP44-compliant hierarchical deterministic wallet used for managing a set of addresses in the\n * Qi ledger. This is wallet implementation is the primary way to interact with the Qi UTXO ledger on the Quai network.\n *\n * The Qi HD wallet supports:\n *\n * - Adding accounts to the wallet heierchy\n * - Generating addresses for a specific account in any {@link Zone}\n * - Signing and sending transactions for any address in the wallet\n * - Serializing the wallet to JSON and deserializing it back to a wallet instance.\n *\n * @category Wallet\n * @example\n *\n * ```ts\n * import { QiHDWallet, Zone } from 'quais';\n *\n * const wallet = new QiHDWallet();\n * const cyrpus1Address = await wallet.getNextAddress(0, Zone.Cyrpus1); // get the first address in the Cyrpus1 zone\n * await wallet.sendTransaction({ txInputs: [...], txOutputs: [...] }); // send a transaction\n * const serializedWallet = wallet.serialize(); // serialize current (account/address) state of the wallet\n * .\n * .\n * .\n * const deserializedWallet = QiHDWallet.deserialize(serializedWallet); // create a new wallet instance from the serialized data\n * ```\n */\nclass QiHDWallet extends AbstractHDWallet {\n    /**\n     * @ignore\n     * @type {number}\n     */\n    static _version = 1;\n    /**\n     * @ignore\n     * @type {number}\n     */\n    static _GAP_LIMIT = 5;\n    /**\n     * @ignore\n     * @type {AllowedCoinType}\n     */\n    static _coinType = 969;\n    /**\n     * Map of change addresses to address info.\n     *\n     * @ignore\n     * @type {Map<string, NeuteredAddressInfo>}\n     */\n    _changeAddresses = new Map();\n    /**\n     * Array of gap addresses.\n     *\n     * @ignore\n     * @type {NeuteredAddressInfo[]}\n     */\n    _gapChangeAddresses = [];\n    /**\n     * Array of gap change addresses.\n     *\n     * @ignore\n     * @type {NeuteredAddressInfo[]}\n     */\n    _gapAddresses = [];\n    /**\n     * This array is used to keep track of gap addresses that have been included in a transaction, but whose outpoints\n     * have not been imported into the wallet.\n     *\n     * @ignore\n     * @type {NeuteredAddressInfo[]}\n     */\n    _usedGapAddresses = [];\n    /**\n     * This array is used to keep track of gap change addresses that have been included in a transaction, but whose\n     * outpoints have not been imported into the wallet.\n     *\n     * @ignore\n     * @type {NeuteredAddressInfo[]}\n     */\n    _usedGapChangeAddresses = [];\n    /**\n     * Array of outpoint information.\n     *\n     * @ignore\n     * @type {OutpointInfo[]}\n     */\n    _availableOutpoints = [];\n    /**\n     * Map of outpoints that are pending confirmation of being spent.\n     */\n    _pendingOutpoints = [];\n    /**\n     * @ignore\n     * @type {AddressUsageCallback}\n     */\n    _addressUseChecker;\n    /**\n     * Map of paymentcodes to PaymentChannelAddressInfo for the receiver\n     */\n    _receiverPaymentCodeInfo = new Map();\n    /**\n     * Map of paymentcodes to PaymentChannelAddressInfo for the sender\n     */\n    _senderPaymentCodeInfo = new Map();\n    /**\n     * @ignore\n     * @param {HDNodeWallet} root - The root HDNodeWallet.\n     * @param {Provider} [provider] - The provider (optional).\n     */\n    constructor(guard, root, provider) {\n        super(guard, root, provider);\n    }\n    /**\n     * Sets the address use checker. The provided callback function should accept an address as input and return a\n     * boolean indicating whether the address is in use. If the callback returns true, the address is considered used\n     * and if it returns false, the address is considered unused.\n     *\n     * @param {AddressUsageCallback} checker - The address use checker.\n     */\n    setAddressUseChecker(checker) {\n        this._addressUseChecker = checker;\n    }\n    // getters for the payment code info maps\n    get receiverPaymentCodeInfo() {\n        return Object.fromEntries(this._receiverPaymentCodeInfo);\n    }\n    get senderPaymentCodeInfo() {\n        return Object.fromEntries(this._senderPaymentCodeInfo);\n    }\n    /**\n     * Promise that resolves to the next change address for the specified account and zone.\n     *\n     * @param {number} account - The index of the account for which to retrieve the next change address.\n     * @param {Zone} zone - The zone in which to retrieve the next change address.\n     * @returns {Promise<NeuteredAddressInfo>} The next change neutered address information.\n     */\n    async getNextChangeAddress(account, zone) {\n        return Promise.resolve(this._getNextAddress(account, zone, true, this._changeAddresses));\n    }\n    /**\n     * Synchronously retrieves the next change address for the specified account and zone.\n     *\n     * @param {number} account - The index of the account for which to retrieve the next change address.\n     * @param {Zone} zone - The zone in which to retrieve the next change address.\n     * @returns {NeuteredAddressInfo} The next change neutered address information.\n     */\n    getNextChangeAddressSync(account, zone) {\n        return this._getNextAddress(account, zone, true, this._changeAddresses);\n    }\n    /**\n     * Imports an array of outpoints.\n     *\n     * @param {OutpointInfo[]} outpoints - The outpoints to import.\n     */\n    importOutpoints(outpoints) {\n        this.validateOutpointInfo(outpoints);\n        this._availableOutpoints.push(...outpoints);\n    }\n    /**\n     * Gets the outpoints for the specified zone.\n     *\n     * @param {Zone} zone - The zone.\n     * @returns {OutpointInfo[]} The outpoints for the zone.\n     */\n    getOutpoints(zone) {\n        this.validateZone(zone);\n        return this._availableOutpoints.filter((outpoint) => outpoint.zone === zone);\n    }\n    /**\n     * Signs a Qi transaction and returns the serialized transaction.\n     *\n     * @param {QiTransactionRequest} tx - The transaction to sign.\n     * @returns {Promise<string>} The serialized transaction.\n     * @throws {Error} If the UTXO transaction is invalid.\n     */\n    async signTransaction(tx) {\n        const txobj = QiTransaction.from(tx);\n        if (!txobj.txInputs || txobj.txInputs.length == 0 || !txobj.txOutputs)\n            throw new Error('Invalid UTXO transaction, missing inputs or outputs');\n        const hash = getBytes(keccak256(txobj.unsignedSerialized));\n        const shouldUseSchnorrSignature = (inputs) => {\n            if (inputs.length === 1)\n                return true;\n            const firstPubKey = inputs[0].pubkey;\n            return inputs.every((input) => input.pubkey === firstPubKey);\n        };\n        let signature;\n        if (shouldUseSchnorrSignature(txobj.txInputs)) {\n            signature = this.createSchnorrSignature(txobj.txInputs[0], hash);\n        }\n        else {\n            signature = this.createMuSigSignature(txobj, hash);\n        }\n        txobj.signature = signature;\n        return txobj.serialized;\n    }\n    /**\n     * Gets the payment channel address info for a given address.\n     *\n     * @param {string} address - The address to look up.\n     * @returns {PaymentChannelAddressInfo | null} The address info or null if not found.\n     */\n    getPaymentChannelAddressInfo(address) {\n        for (const [paymentCode, pcInfoArray] of this._receiverPaymentCodeInfo.entries()) {\n            const pcInfo = pcInfoArray.find((info) => info.address === address);\n            if (pcInfo) {\n                return { ...pcInfo, counterpartyPaymentCode: paymentCode };\n            }\n        }\n        return null;\n    }\n    /**\n     * Locates the address information for the given address, searching through standard addresses, change addresses,\n     * and payment channel addresses.\n     *\n     * @param {string} address - The address to locate.\n     * @returns {NeuteredAddressInfo | PaymentChannelAddressInfo | null} The address info or null if not found.\n     */\n    locateAddressInfo(address) {\n        // First, try to get standard address info\n        let addressInfo = this.getAddressInfo(address);\n        if (addressInfo) {\n            return addressInfo;\n        }\n        // Next, try to get change address info\n        addressInfo = this.getChangeAddressInfo(address);\n        if (addressInfo) {\n            return addressInfo;\n        }\n        // Finally, try to get payment channel address info\n        const pcAddressInfo = this.getPaymentChannelAddressInfo(address);\n        if (pcAddressInfo) {\n            return pcAddressInfo;\n        }\n        // Address not found\n        return null;\n    }\n    /**\n     * Gets the balance for the specified zone.\n     *\n     * @param {Zone} zone - The zone to get the balance for.\n     * @returns {bigint} The total balance for the zone.\n     */\n    getBalanceForZone(zone) {\n        this.validateZone(zone);\n        return this._availableOutpoints\n            .filter((outpoint) => outpoint.zone === zone)\n            .reduce((total, outpoint) => {\n            const denominationValue = denominations[outpoint.outpoint.denomination];\n            return total + denominationValue;\n        }, BigInt(0));\n    }\n    /**\n     * Converts outpoints for a specific zone to UTXO format.\n     *\n     * @param {Zone} zone - The zone to filter outpoints for.\n     * @returns {UTXO[]} An array of UTXO objects.\n     */\n    outpointsToUTXOs(zone) {\n        this.validateZone(zone);\n        return this._availableOutpoints\n            .filter((outpointInfo) => outpointInfo.zone === zone)\n            .map((outpointInfo) => {\n            const utxo = new UTXO();\n            utxo.txhash = outpointInfo.outpoint.txhash;\n            utxo.index = outpointInfo.outpoint.index;\n            utxo.address = outpointInfo.address;\n            utxo.denomination = outpointInfo.outpoint.denomination;\n            return utxo;\n        });\n    }\n    /**\n     * Sends a transaction using the traditional method (compatible with AbstractHDWallet).\n     *\n     * @param tx The transaction request.\n     */\n    async sendTransaction(recipientPaymentCode, amount, originZone, destinationZone) {\n        if (!this.provider) {\n            throw new Error('Provider is not set');\n        }\n        // This is the new method call (recipientPaymentCode, amount, originZone, destinationZone)\n        if (!validatePaymentCode(recipientPaymentCode)) {\n            throw new Error('Invalid payment code');\n        }\n        if (amount <= 0) {\n            throw new Error('Amount must be greater than 0');\n        }\n        if (!Object.values(Zone).includes(originZone) || !Object.values(Zone).includes(destinationZone)) {\n            throw new Error('Invalid zone');\n        }\n        // 1. Check the wallet has enough balance in the originating zone to send the transaction\n        const balance = this.getBalanceForZone(originZone);\n        if (balance < amount) {\n            throw new Error(`Insufficient balance in the originating zone: want ${amount} Qi got ${balance} Qi`);\n        }\n        // 2. Select the UXTOs from the specified zone to use as inputs, and generate the spend and change outputs\n        const zoneUTXOs = this.outpointsToUTXOs(originZone);\n        const fewestCoinSelector = new FewestCoinSelector(zoneUTXOs);\n        const spendTarget = amount;\n        let selection = fewestCoinSelector.performSelection(spendTarget);\n        // 3. Generate as many unused addresses as required to populate the spend outputs\n        const sendAddresses = [];\n        while (sendAddresses.length < selection.spendOutputs.length) {\n            const address = this.getNextSendAddress(recipientPaymentCode, destinationZone).address;\n            const { isUsed } = await this.checkAddressUse(address);\n            if (!isUsed) {\n                sendAddresses.push(address);\n            }\n        }\n        // 4. get known change addresses, then populate with new ones as needed\n        const changeAddresses = [];\n        for (let i = 0; i < selection.changeOutputs.length; i++) {\n            if (this._gapChangeAddresses.length > 0) {\n                // 1. get next change address from gap addresses array\n                // 2. remove it from the gap change addresses array\n                // 3. add it to the change addresses array\n                // 4. add it to the used gap change addresses array\n                const nextChangeAddressInfo = this._gapChangeAddresses.shift();\n                changeAddresses.push(nextChangeAddressInfo.address);\n                this._usedGapChangeAddresses.push(nextChangeAddressInfo);\n            }\n            else {\n                changeAddresses.push((await this.getNextChangeAddress(0, originZone)).address);\n            }\n        }\n        // 5. Create the transaction and sign it using the signTransaction method\n        // 5.1 Fetch the public keys for the input addresses\n        let inputPubKeys = selection.inputs.map((input) => this.locateAddressInfo(input.address)?.pubKey);\n        if (inputPubKeys.some((pubkey) => !pubkey)) {\n            throw new Error('Missing public key for input address');\n        }\n        const chainId = (await this.provider.getNetwork()).chainId;\n        let tx = await this.prepareTransaction(selection, inputPubKeys.map((pubkey) => pubkey), sendAddresses, changeAddresses, Number(chainId));\n        const gasLimit = await this.provider.estimateGas(tx);\n        const feeData = await this.provider.getFeeData(originZone, false);\n        // 5.6 Calculate total fee for the transaction using the gasLimit, gasPrice, maxFeePerGas and maxPriorityFeePerGas\n        const totalFee = gasLimit * (feeData.gasPrice ?? 1n) + gasLimit * (feeData.minerTip ?? 0n);\n        // Get new selection with fee\n        selection = fewestCoinSelector.performSelection(spendTarget, totalFee);\n        // 5.7 Determine if new addresses are needed for the change outputs\n        const changeAddressesNeeded = selection.changeOutputs.length - changeAddresses.length;\n        if (changeAddressesNeeded > 0) {\n            for (let i = 0; i < changeAddressesNeeded; i++) {\n                changeAddresses.push((await this.getNextChangeAddress(0, originZone)).address);\n            }\n        }\n        const spendAddressesNeeded = selection.spendOutputs.length - sendAddresses.length;\n        if (spendAddressesNeeded > 0) {\n            for (let i = 0; i < spendAddressesNeeded; i++) {\n                sendAddresses.push(this.getNextSendAddress(recipientPaymentCode, destinationZone).address);\n            }\n        }\n        inputPubKeys = selection.inputs.map((input) => this.locateAddressInfo(input.address)?.pubKey);\n        tx = await this.prepareTransaction(selection, inputPubKeys.map((pubkey) => pubkey), sendAddresses, changeAddresses, Number(chainId));\n        // Move used outpoints to pendingOutpoints\n        this.moveOutpointsToPending(tx.txInputs);\n        // 5.6 Sign the transaction\n        const signedTx = await this.signTransaction(tx);\n        // 6. Broadcast the transaction to the network using the provider\n        return this.provider.broadcastTransaction(originZone, signedTx);\n    }\n    async prepareTransaction(selection, inputPubKeys, sendAddresses, changeAddresses, chainId) {\n        const tx = new QiTransaction();\n        tx.txInputs = selection.inputs.map((input, index) => ({\n            txhash: input.txhash,\n            index: input.index,\n            pubkey: inputPubKeys[index],\n        }));\n        // 5.3 Create the \"sender\" outputs\n        const senderOutputs = selection.spendOutputs.map((output, index) => ({\n            address: sendAddresses[index],\n            denomination: output.denomination,\n        }));\n        // 5.4 Create the \"change\" outputs\n        const changeOutputs = selection.changeOutputs.map((output, index) => ({\n            address: changeAddresses[index],\n            denomination: output.denomination,\n        }));\n        tx.txOutputs = [...senderOutputs, ...changeOutputs].map((output) => ({\n            address: output.address,\n            denomination: output.denomination,\n        }));\n        tx.chainId = chainId;\n        return tx;\n    }\n    /**\n     * Checks the status of pending outpoints and updates the wallet's UTXO set accordingly.\n     *\n     * @param zone The zone in which to check the pending outpoints.\n     */\n    async checkPendingOutpoints(zone) {\n        // Create a copy to iterate over, as we'll be modifying the _pendingOutpoints array\n        const pendingOutpoints = [...this._pendingOutpoints.filter((info) => info.zone === zone)];\n        const uniqueAddresses = new Set(pendingOutpoints.map((info) => info.address));\n        const outpointsByAddress = await Promise.all(Array.from(uniqueAddresses).map((address) => this.getOutpointsByAddress(address)));\n        const allOutpointsByAddress = outpointsByAddress.flat();\n        for (const outpointInfo of pendingOutpoints) {\n            const isSpent = !allOutpointsByAddress.some((outpoint) => outpoint.txhash === outpointInfo.outpoint.txhash && outpoint.index === outpointInfo.outpoint.index);\n            if (isSpent) {\n                // Outpoint has been spent; remove it from pendingOutpoints\n                this.removeOutpointFromPending(outpointInfo.outpoint);\n            }\n            else {\n                // Outpoint is still unspent; move it back to available outpoints\n                this.moveOutpointToAvailable(outpointInfo);\n            }\n        }\n    }\n    /**\n     * Moves specified inputs to pending outpoints.\n     *\n     * @param inputs List of inputs used in the transaction.\n     */\n    moveOutpointsToPending(inputs) {\n        inputs.forEach((input) => {\n            const index = this._availableOutpoints.findIndex((outpointInfo) => outpointInfo.outpoint.txhash === input.txhash && outpointInfo.outpoint.index === input.index);\n            if (index !== -1) {\n                const [outpointInfo] = this._availableOutpoints.splice(index, 1);\n                this._pendingOutpoints.push(outpointInfo);\n            }\n        });\n    }\n    /**\n     * Removes an outpoint from the pending outpoints.\n     *\n     * @param outpoint The outpoint to remove.\n     */\n    removeOutpointFromPending(outpoint) {\n        this._pendingOutpoints = this._pendingOutpoints.filter((info) => !(info.outpoint.txhash === outpoint.txhash && info.outpoint.index === outpoint.index));\n    }\n    /**\n     * Moves an outpoint from pending back to available outpoints.\n     *\n     * @param outpointInfo The outpoint info to move.\n     */\n    moveOutpointToAvailable(outpointInfo) {\n        this.removeOutpointFromPending(outpointInfo.outpoint);\n        this._availableOutpoints.push(outpointInfo);\n    }\n    /**\n     * Returns a schnorr signature for the given message and private key.\n     *\n     * @ignore\n     * @param {TxInput} input - The transaction input.\n     * @param {Uint8Array} hash - The hash of the message.\n     * @returns {string} The schnorr signature.\n     */\n    createSchnorrSignature(input, hash) {\n        const privKey = this.getPrivateKeyForTxInput(input);\n        const signature = schnorr.sign(hash, getBytes(privKey));\n        return hexlify(signature);\n    }\n    /**\n     * Returns a MuSig signature for the given message and private keys corresponding to the input addresses.\n     *\n     * @ignore\n     * @param {QiTransaction} tx - The Qi transaction.\n     * @param {Uint8Array} hash - The hash of the message.\n     * @returns {string} The MuSig signature.\n     */\n    createMuSigSignature(tx, hash) {\n        const musig = MuSigFactory(musigCrypto);\n        // Collect private keys corresponding to the pubkeys found on the inputs\n        const privKeysSet = new Set();\n        tx.txInputs.forEach((input) => {\n            const privKey = this.getPrivateKeyForTxInput(input);\n            privKeysSet.add(privKey);\n        });\n        const privKeys = Array.from(privKeysSet);\n        // Create an array of public keys corresponding to the private keys for musig aggregation\n        const pubKeys = privKeys\n            .map((privKey) => musigCrypto.getPublicKey(getBytes(privKey), true))\n            .filter((pubKey) => pubKey !== null);\n        // Generate nonces for each public key\n        const nonces = pubKeys.map((pk) => musig.nonceGen({ publicKey: getBytes(pk) }));\n        const aggNonce = musig.nonceAgg(nonces);\n        const signingSession = musig.startSigningSession(aggNonce, hash, pubKeys);\n        // Create partial signatures for each private key\n        const partialSignatures = privKeys.map((sk, index) => musig.partialSign({\n            secretKey: getBytes(sk || ''),\n            publicNonce: nonces[index],\n            sessionKey: signingSession,\n            verify: true,\n        }));\n        // Aggregate the partial signatures into a final aggregated signature\n        const finalSignature = musig.signAgg(partialSignatures, signingSession);\n        return hexlify(finalSignature);\n    }\n    /**\n     * Retrieves the private key for a given transaction input.\n     *\n     * This method derives the private key for a transaction input by locating the address info and then deriving the\n     * private key based on where the address info was found:\n     *\n     * - For BIP44 addresses (standard or change), it uses the HD wallet to derive the private key.\n     * - For payment channel addresses (BIP47), it uses PaymentCodePrivate to derive the private key.\n     *\n     * @param {TxInput} input - The transaction input containing the public key.\n     * @returns {string} The private key corresponding to the transaction input.\n     * @throws {Error} If the input does not contain a public key or if the address information cannot be found.\n     */\n    getPrivateKeyForTxInput(input) {\n        if (!input.pubkey)\n            throw new Error('Missing public key for input');\n        const address = computeAddress(input.pubkey);\n        const addressInfo = this.locateAddressInfo(address);\n        if (!addressInfo) {\n            throw new Error(`Address not found: ${address}`);\n        }\n        if ('change' in addressInfo) {\n            // NeuteredAddressInfo (BIP44 addresses)\n            const changeIndex = addressInfo.change ? 1 : 0;\n            const addressNode = this._root\n                .deriveChild(addressInfo.account)\n                .deriveChild(changeIndex)\n                .deriveChild(addressInfo.index);\n            return addressNode.privateKey;\n        }\n        else {\n            // PaymentChannelAddressInfo (BIP47 addresses)\n            const pcAddressInfo = addressInfo;\n            const account = pcAddressInfo.account;\n            const index = pcAddressInfo.index - 1;\n            const counterpartyPaymentCode = pcAddressInfo.counterpartyPaymentCode;\n            if (!counterpartyPaymentCode) {\n                throw new Error('Counterparty payment code not found for payment channel address');\n            }\n            const bip32 = BIP32Factory(ecc);\n            const buf = bs58check.decode(counterpartyPaymentCode);\n            const version = buf[0];\n            if (version !== PC_VERSION)\n                throw new Error('Invalid payment code version');\n            const counterpartyPCodePublic = new PaymentCodePublic(ecc, bip32, buf.slice(1));\n            const paymentCodePrivate = this._getPaymentCodePrivate(account);\n            const paymentPrivateKey = paymentCodePrivate.derivePaymentPrivateKey(counterpartyPCodePublic, index);\n            return hexlify(paymentPrivateKey);\n        }\n    }\n    /**\n     * Scans the specified zone for addresses with unspent outputs. Starting at index 0, it will generate new addresses\n     * until the gap limit is reached for external and change BIP44 addresses and payment channel addresses.\n     *\n     * @param {Zone} zone - The zone in which to scan for addresses.\n     * @param {number} [account=0] - The index of the account to scan. Default is `0`\n     * @returns {Promise<void>} A promise that resolves when the scan is complete.\n     * @throws {Error} If the zone is invalid.\n     */\n    async scan(zone, account = 0) {\n        this.validateZone(zone);\n        // flush the existing addresses and outpoints\n        this._addresses = new Map();\n        this._changeAddresses = new Map();\n        this._gapAddresses = [];\n        this._gapChangeAddresses = [];\n        this._availableOutpoints = [];\n        // Reset each map so that all keys have empty array values but keys are preserved\n        const resetSenderPaymentCodeInfo = new Map(Array.from(this._senderPaymentCodeInfo.keys()).map((key) => [key, []]));\n        const resetReceiverPaymentCodeInfo = new Map(Array.from(this._receiverPaymentCodeInfo.keys()).map((key) => [key, []]));\n        this._senderPaymentCodeInfo = resetSenderPaymentCodeInfo;\n        this._receiverPaymentCodeInfo = resetReceiverPaymentCodeInfo;\n        await this._scan(zone, account);\n    }\n    /**\n     * Scans the specified zone for addresses with unspent outputs. Starting at the last address index, it will generate\n     * new addresses until the gap limit is reached for external and change BIP44 addresses and payment channel\n     * addresses.\n     *\n     * @param {Zone} zone - The zone in which to sync addresses.\n     * @param {number} [account=0] - The index of the account to sync. Default is `0`\n     * @returns {Promise<void>} A promise that resolves when the sync is complete.\n     * @throws {Error} If the zone is invalid.\n     */\n    async sync(zone, account = 0) {\n        this.validateZone(zone);\n        await this._scan(zone, account);\n        await this.checkPendingOutpoints(zone);\n    }\n    /**\n     * Internal method to scan the specified zone for addresses with unspent outputs. This method handles the actual\n     * scanning logic, generating new addresses until the gap limit is reached for both gap and change addresses.\n     *\n     * @param {Zone} zone - The zone in which to scan for addresses.\n     * @param {number} [account=0] - The index of the account to scan. Default is `0`\n     * @returns {Promise<void>} A promise that resolves when the scan is complete.\n     * @throws {Error} If the provider is not set.\n     */\n    async _scan(zone, account = 0) {\n        if (!this.provider)\n            throw new Error('Provider not set');\n        // Start scanning processes for each derivation tree\n        const scans = [\n            this.scanBIP44Addresses(zone, account, false),\n            this.scanBIP44Addresses(zone, account, true), // Change addresses\n        ];\n        // Add scanning processes for each payment channel\n        for (const paymentCode of this._receiverPaymentCodeInfo.keys()) {\n            scans.push(this.scanPaymentChannel(zone, account, paymentCode));\n        }\n        // Run all scans in parallel\n        await Promise.all(scans);\n    }\n    /**\n     * Scans for the next address in the specified zone and account, checking for associated outpoints, and updates the\n     * address count and gap addresses accordingly.\n     *\n     * @param {Zone} zone - The zone in which the address is being scanned.\n     * @param {number} account - The index of the account for which the address is being scanned.\n     * @param {boolean} isChange - A flag indicating whether the address is a change address.\n     * @returns {Promise<void>} A promise that resolves when the scan is complete.\n     * @throws {Error} If an error occurs during the address scanning or outpoints retrieval process.\n     */\n    async scanBIP44Addresses(zone, account, isChange) {\n        const addressMap = isChange ? this._changeAddresses : this._addresses;\n        const gapAddresses = isChange ? this._gapChangeAddresses : this._gapAddresses;\n        const usedGapAddresses = isChange ? this._usedGapChangeAddresses : this._usedGapAddresses;\n        // First, add all used gap addresses to the address map and import their outpoints\n        for (const addressInfo of usedGapAddresses) {\n            this._addAddress(addressMap, account, addressInfo.index, isChange);\n            const outpoints = await this.getOutpointsByAddress(addressInfo.address);\n            if (outpoints.length > 0) {\n                this.importOutpoints(outpoints.map((outpoint) => ({\n                    outpoint,\n                    address: addressInfo.address,\n                    zone,\n                    account,\n                })));\n            }\n        }\n        let gapCount = 0;\n        // Second, re-examine existing gap addresses\n        const newlyUsedAddresses = [];\n        for (let i = 0; i < gapAddresses.length;) {\n            const addressInfo = gapAddresses[i];\n            const { isUsed, outpoints } = await this.checkAddressUse(addressInfo.address);\n            if (isUsed) {\n                // Address has been used since last scan\n                this._addAddress(addressMap, account, addressInfo.index, isChange);\n                if (outpoints.length > 0) {\n                    this.importOutpoints(outpoints.map((outpoint) => ({\n                        outpoint,\n                        address: addressInfo.address,\n                        zone,\n                        account,\n                    })));\n                }\n                // Remove from gap addresses\n                newlyUsedAddresses.push(addressInfo);\n                gapCount = 0;\n            }\n            else {\n                gapCount++;\n                i++;\n            }\n        }\n        // remove addresses that have been used from the gap addresses\n        const updatedGapAddresses = gapAddresses.filter((addressInfo) => !newlyUsedAddresses.some((usedAddress) => usedAddress.address === addressInfo.address));\n        // Scan for new gap addresses\n        const newGapAddresses = [];\n        while (gapCount < QiHDWallet._GAP_LIMIT) {\n            const addressInfo = this._getNextAddress(account, zone, isChange, addressMap);\n            const { isUsed, outpoints } = await this.checkAddressUse(addressInfo.address);\n            if (isUsed) {\n                if (outpoints.length > 0) {\n                    this.importOutpoints(outpoints.map((outpoint) => ({\n                        outpoint,\n                        address: addressInfo.address,\n                        zone,\n                        account,\n                    })));\n                }\n                gapCount = 0;\n            }\n            else {\n                gapCount++;\n                // check if the address is already in the updated gap addresses array\n                if (!updatedGapAddresses.some((usedAddress) => usedAddress.address === addressInfo.address)) {\n                    newGapAddresses.push(addressInfo);\n                }\n            }\n        }\n        // update the gap addresses\n        if (isChange) {\n            this._gapChangeAddresses = [...updatedGapAddresses, ...newGapAddresses];\n        }\n        else {\n            this._gapAddresses = [...updatedGapAddresses, ...newGapAddresses];\n        }\n    }\n    /**\n     * Scans the specified payment channel for addresses with unspent outputs. Starting at the last address index, it\n     * will generate new addresses until the gap limit is reached.\n     *\n     * @param {Zone} zone - The zone in which to scan for addresses.\n     * @param {number} account - The index of the account to scan.\n     * @param {string} paymentCode - The payment code to scan.\n     * @returns {Promise<void>} A promise that resolves when the scan is complete.\n     * @throws {Error} If the zone is invalid.\n     */\n    async scanPaymentChannel(zone, account, paymentCode) {\n        let gapCount = 0;\n        const paymentCodeInfoArray = this._receiverPaymentCodeInfo.get(paymentCode);\n        if (!paymentCodeInfoArray) {\n            throw new Error(`Payment code ${paymentCode} not found`);\n        }\n        // first, re-examine existing unused addresses\n        const newlyUsedAddresses = [];\n        const unusedAddresses = paymentCodeInfoArray.filter((info) => !info.isUsed);\n        for (let i = 0; i < unusedAddresses.length;) {\n            const addressInfo = unusedAddresses[i];\n            const { isUsed, outpoints } = await this.checkAddressUse(addressInfo.address);\n            if (outpoints.length > 0 || isUsed) {\n                // Address has been used since last scan\n                addressInfo.isUsed = true;\n                const pcAddressInfoIndex = paymentCodeInfoArray.findIndex((info) => info.index === addressInfo.index);\n                paymentCodeInfoArray[pcAddressInfoIndex] = addressInfo;\n                this.importOutpoints(outpoints.map((outpoint) => ({\n                    outpoint,\n                    address: addressInfo.address,\n                    zone,\n                    account,\n                })));\n                // Remove from gap addresses\n                newlyUsedAddresses.push(addressInfo);\n                gapCount = 0;\n            }\n            else {\n                // Address is still unused\n                gapCount++;\n                i++;\n            }\n        }\n        // remove the addresses that have been used from the payment code info array\n        const updatedPaymentCodeInfoArray = paymentCodeInfoArray.filter((addressInfo) => !newlyUsedAddresses.some((usedAddress) => usedAddress.index === addressInfo.index));\n        // Then, scan for new gap addresses\n        while (gapCount < QiHDWallet._GAP_LIMIT) {\n            const pcAddressInfo = this.getNextReceiveAddress(paymentCode, zone, account);\n            const outpoints = await this.getOutpointsByAddress(pcAddressInfo.address);\n            let isUsed = false;\n            if (outpoints.length > 0) {\n                isUsed = true;\n                this.importOutpoints(outpoints.map((outpoint) => ({\n                    outpoint,\n                    address: pcAddressInfo.address,\n                    zone,\n                    account,\n                })));\n                gapCount = 0;\n            }\n            else if (this._addressUseChecker !== undefined &&\n                (await this._addressUseChecker(pcAddressInfo.address))) {\n                // address checker returned true, so the address is used\n                isUsed = true;\n                gapCount = 0;\n            }\n            else {\n                gapCount++;\n            }\n            if (isUsed) {\n                // update the payment code info array if the address has been used\n                pcAddressInfo.isUsed = isUsed;\n                const pcAddressInfoIndex = updatedPaymentCodeInfoArray.findIndex((info) => info.index === pcAddressInfo.index);\n                if (pcAddressInfoIndex !== -1) {\n                    updatedPaymentCodeInfoArray[pcAddressInfoIndex] = pcAddressInfo;\n                }\n                else {\n                    updatedPaymentCodeInfoArray.push(pcAddressInfo);\n                }\n            }\n        }\n        // update the payment code info map\n        this._receiverPaymentCodeInfo.set(paymentCode, updatedPaymentCodeInfoArray);\n    }\n    /**\n     * Queries the network node for the outpoints of the specified address.\n     *\n     * @ignore\n     * @param {string} address - The address to query.\n     * @returns {Promise<Outpoint[]>} The outpoints for the address.\n     * @throws {Error} If the query fails.\n     */\n    async getOutpointsByAddress(address) {\n        try {\n            return await this.provider.getOutpointsByAddress(address);\n        }\n        catch (error) {\n            throw new Error(`Failed to get outpoints for address: ${address} - error: ${error}`);\n        }\n    }\n    async checkAddressUse(address) {\n        let isUsed = false;\n        let outpoints = [];\n        try {\n            outpoints = await this.getOutpointsByAddress(address);\n            if (outpoints.length > 0) {\n                isUsed = true;\n            }\n            else if (this._addressUseChecker !== undefined && (await this._addressUseChecker(address))) {\n                // address checker returned true, so the address is used\n                isUsed = true;\n            }\n        }\n        catch (error) {\n            throw new Error(`Failed to get outpoints for address: ${address} - error: ${error}`);\n        }\n        return { isUsed, outpoints };\n    }\n    /**\n     * Gets the change addresses for the specified zone.\n     *\n     * @param {Zone} zone - The zone.\n     * @returns {NeuteredAddressInfo[]} The change addresses for the zone.\n     */\n    getChangeAddressesForZone(zone) {\n        this.validateZone(zone);\n        const changeAddresses = this._changeAddresses.values();\n        return Array.from(changeAddresses).filter((addressInfo) => addressInfo.zone === zone);\n    }\n    /**\n     * Gets the gap addresses for the specified zone.\n     *\n     * @param {Zone} zone - The zone.\n     * @returns {NeuteredAddressInfo[]} The gap addresses for the zone.\n     */\n    getGapAddressesForZone(zone) {\n        this.validateZone(zone);\n        const gapAddresses = this._gapAddresses.filter((addressInfo) => addressInfo.zone === zone);\n        return gapAddresses;\n    }\n    /**\n     * Gets the gap change addresses for the specified zone.\n     *\n     * @param {Zone} zone - The zone.\n     * @returns {NeuteredAddressInfo[]} The gap change addresses for the zone.\n     */\n    getGapChangeAddressesForZone(zone) {\n        this.validateZone(zone);\n        const gapChangeAddresses = this._gapChangeAddresses.filter((addressInfo) => addressInfo.zone === zone);\n        return gapChangeAddresses;\n    }\n    /**\n     * Signs a message using the private key associated with the given address.\n     *\n     * @param {string} address - The address for which the message is to be signed.\n     * @param {string | Uint8Array} message - The message to be signed, either as a string or Uint8Array.\n     * @returns {Promise<string>} A promise that resolves to the signature of the message in hexadecimal string format.\n     * @throws {Error} If the address does not correspond to a valid HD node or if signing fails.\n     */\n    async signMessage(address, message) {\n        const addrNode = this._getHDNodeForAddress(address);\n        const privKey = addrNode.privateKey;\n        const digest = keccak256(message);\n        const signature = schnorr.sign(digest, getBytes(privKey));\n        return hexlify(signature);\n    }\n    /**\n     * Serializes the HD wallet state into a format suitable for storage or transmission.\n     *\n     * @returns {SerializedQiHDWallet} An object representing the serialized state of the HD wallet, including\n     *   outpoints, change addresses, gap addresses, and other inherited properties.\n     */\n    serialize() {\n        const hdwalletSerialized = super.serialize();\n        return {\n            outpoints: this._availableOutpoints,\n            pendingOutpoints: this._pendingOutpoints,\n            changeAddresses: Array.from(this._changeAddresses.values()),\n            gapAddresses: this._gapAddresses,\n            gapChangeAddresses: this._gapChangeAddresses,\n            usedGapAddresses: this._usedGapAddresses,\n            usedGapChangeAddresses: this._usedGapChangeAddresses,\n            receiverPaymentCodeInfo: Object.fromEntries(this._receiverPaymentCodeInfo),\n            senderPaymentCodeInfo: Object.fromEntries(this._senderPaymentCodeInfo),\n            ...hdwalletSerialized,\n        };\n    }\n    /**\n     * Deserializes a serialized QiHDWallet object and reconstructs the wallet instance.\n     *\n     * @param {SerializedQiHDWallet} serialized - The serialized object representing the state of a QiHDWallet.\n     * @returns {Promise<QiHDWallet>} A promise that resolves to a reconstructed QiHDWallet instance.\n     * @throws {Error} If the serialized data is invalid or if any addresses in the gap addresses or gap change\n     *   addresses do not exist in the wallet.\n     */\n    static async deserialize(serialized) {\n        super.validateSerializedWallet(serialized);\n        // create the wallet instance\n        const mnemonic = Mnemonic.fromPhrase(serialized.phrase);\n        const path = this.parentPath(serialized.coinType);\n        const root = HDNodeWallet.fromMnemonic(mnemonic, path);\n        const wallet = new this(_guard, root);\n        // import the addresses\n        wallet.importSerializedAddresses(wallet._addresses, serialized.addresses);\n        // import the change addresses\n        wallet.importSerializedAddresses(wallet._changeAddresses, serialized.changeAddresses);\n        // import the gap addresses, verifying they already exist in the wallet\n        for (const gapAddressInfo of serialized.gapAddresses) {\n            const gapAddress = gapAddressInfo.address;\n            if (!wallet._addresses.has(gapAddress)) {\n                throw new Error(`Address ${gapAddress} not found in wallet`);\n            }\n            wallet._gapAddresses.push(gapAddressInfo);\n        }\n        // import the gap change addresses, verifying they already exist in the wallet\n        for (const gapChangeAddressInfo of serialized.gapChangeAddresses) {\n            const gapChangeAddress = gapChangeAddressInfo.address;\n            if (!wallet._changeAddresses.has(gapChangeAddress)) {\n                throw new Error(`Address ${gapChangeAddress} not found in wallet`);\n            }\n            wallet._gapChangeAddresses.push(gapChangeAddressInfo);\n        }\n        // validate the used gap addresses and import them\n        for (const usedGapAddressInfo of serialized.usedGapAddresses) {\n            if (!wallet._addresses.has(usedGapAddressInfo.address)) {\n                throw new Error(`Address ${usedGapAddressInfo.address} not found in wallet`);\n            }\n            wallet._usedGapAddresses.push(usedGapAddressInfo);\n        }\n        // validate the used gap change addresses and import them\n        for (const usedGapChangeAddressInfo of serialized.usedGapChangeAddresses) {\n            if (!wallet._changeAddresses.has(usedGapChangeAddressInfo.address)) {\n                throw new Error(`Address ${usedGapChangeAddressInfo.address} not found in wallet`);\n            }\n            wallet._usedGapChangeAddresses.push(usedGapChangeAddressInfo);\n        }\n        // validate the available outpoints and import them\n        wallet.validateOutpointInfo(serialized.outpoints);\n        wallet._availableOutpoints.push(...serialized.outpoints);\n        // validate the pending outpoints and import them\n        wallet.validateOutpointInfo(serialized.pendingOutpoints);\n        wallet._pendingOutpoints.push(...serialized.pendingOutpoints);\n        // validate and import the payment code info\n        wallet.validateAndImportPaymentCodeInfo(serialized.receiverPaymentCodeInfo, 'receiver');\n        wallet.validateAndImportPaymentCodeInfo(serialized.senderPaymentCodeInfo, 'sender');\n        return wallet;\n    }\n    /**\n     * Validates and imports a map of payment code info.\n     *\n     * @param {Map<string, PaymentChannelAddressInfo[]>} paymentCodeInfoMap - The map of payment code info to validate\n     *   and import.\n     * @param {'receiver' | 'sender'} target - The target map to update ('receiver' or 'sender').\n     * @throws {Error} If any of the payment code info is invalid.\n     */\n    validateAndImportPaymentCodeInfo(paymentCodeInfoMap, target) {\n        const targetMap = target === 'receiver' ? this._receiverPaymentCodeInfo : this._senderPaymentCodeInfo;\n        for (const [paymentCode, paymentCodeInfoArray] of Object.entries(paymentCodeInfoMap)) {\n            if (!validatePaymentCode(paymentCode)) {\n                throw new Error(`Invalid payment code: ${paymentCode}`);\n            }\n            for (const pcInfo of paymentCodeInfoArray) {\n                this.validatePaymentCodeInfo(pcInfo);\n            }\n            targetMap.set(paymentCode, paymentCodeInfoArray);\n        }\n    }\n    /**\n     * Validates a payment code info object.\n     *\n     * @param {PaymentChannelAddressInfo} pcInfo - The payment code info to validate.\n     * @throws {Error} If the payment code info is invalid.\n     */\n    validatePaymentCodeInfo(pcInfo) {\n        if (!/^(0x)?[0-9a-fA-F]{40}$/.test(pcInfo.address)) {\n            throw new Error('Invalid payment code info: address must be a 40-character hexadecimal string');\n        }\n        if (!Number.isInteger(pcInfo.index) || pcInfo.index < 0) {\n            throw new Error('Invalid payment code info: index must be a non-negative integer');\n        }\n        if (typeof pcInfo.isUsed !== 'boolean') {\n            throw new Error('Invalid payment code info: isUsed must be a boolean');\n        }\n        if (!Object.values(Zone).includes(pcInfo.zone)) {\n            throw new Error(`Invalid payment code info: zone '${pcInfo.zone}' is not a valid Zone`);\n        }\n        if (!Number.isInteger(pcInfo.account) || pcInfo.account < 0) {\n            throw new Error('Invalid payment code info: account must be a non-negative integer');\n        }\n    }\n    /**\n     * Validates an array of OutpointInfo objects. This method checks the validity of each OutpointInfo object by\n     * performing the following validations:\n     *\n     * - Validates the zone using the `validateZone` method.\n     * - Checks if the address exists in the wallet.\n     * - Checks if the account (if provided) exists in the wallet.\n     * - Validates the Outpoint by ensuring that `Txhash`, `Index`, and `Denomination` are not null.\n     *\n     * @ignore\n     * @param {OutpointInfo[]} outpointInfo - An array of OutpointInfo objects to be validated.\n     * @throws {Error} If any of the validations fail, an error is thrown with a descriptive message.\n     */\n    validateOutpointInfo(outpointInfo) {\n        outpointInfo.forEach((info) => {\n            // validate zone\n            this.validateZone(info.zone);\n            // validate address and account\n            this.validateAddressAndAccount(info.address, info.account);\n            // validate Outpoint\n            if (info.outpoint.txhash == null || info.outpoint.index == null || info.outpoint.denomination == null) {\n                throw new Error(`Invalid Outpoint: ${JSON.stringify(info)} `);\n            }\n        });\n    }\n    validateAddressAndAccount(address, account) {\n        const addressInfo = this.locateAddressInfo(address);\n        if (!addressInfo) {\n            throw new Error(`Address ${address} not found in wallet`);\n        }\n        if (account && account !== addressInfo.account) {\n            throw new Error(`Address ${address} does not match account ${account}`);\n        }\n    }\n    /**\n     * Creates a new BIP47 payment code for the specified account. The payment code is derived from the account's BIP32\n     * root key.\n     *\n     * @param {number} account - The account index to derive the payment code from.\n     * @returns {Promise<string>} A promise that resolves to the Base58-encoded BIP47 payment code.\n     */\n    async getPaymentCode(account = 0) {\n        const privatePcode = await this._getPaymentCodePrivate(account);\n        return privatePcode.toBase58();\n    }\n    // helper method to get a bip32 API instance\n    _getBIP32API() {\n        return BIP32Factory(ecc);\n    }\n    // helper method to decode a base58 string into a Uint8Array\n    _decodeBase58(base58) {\n        return bs58check.decode(base58);\n    }\n    /**\n     * Generates a BIP47 private payment code for the specified account. The payment code is created by combining the\n     * account's public key and chain code.\n     *\n     * @private\n     * @param {number} account - The account index for which to generate the private payment code.\n     * @returns {Promise<PaymentCodePrivate>} A promise that resolves to the PaymentCodePrivate instance.\n     */\n    _getPaymentCodePrivate(account) {\n        const bip32 = this._getBIP32API();\n        const accountNode = this._root.deriveChild(account);\n        // payment code array\n        const pc = new Uint8Array(80);\n        // set version + options\n        pc.set([1, 0]);\n        // set the public key\n        const pubKey = accountNode.publicKey;\n        pc.set(getBytes(pubKey), 2);\n        // set the chain code\n        const chainCode = accountNode.chainCode;\n        pc.set(getBytes(chainCode), 35);\n        const adapter = new HDNodeBIP32Adapter(accountNode);\n        return new PaymentCodePrivate(adapter, ecc, bip32, pc);\n    }\n    /**\n     * Generates a payment address for sending funds to the specified receiver's BIP47 payment code. Uses Diffie-Hellman\n     * key exchange to derive the address from the receiver's public key and sender's private key.\n     *\n     * @param {string} receiverPaymentCode - The Base58-encoded BIP47 payment code of the receiver.\n     * @returns {Promise<string>} A promise that resolves to the payment address for sending funds.\n     * @throws {Error} Throws an error if the payment code version is invalid.\n     */\n    getNextSendAddress(receiverPaymentCode, zone, account = 0) {\n        const bip32 = this._getBIP32API();\n        const buf = this._decodeBase58(receiverPaymentCode);\n        const version = buf[0];\n        if (version !== PC_VERSION)\n            throw new Error('Invalid payment code version');\n        const receiverPCodePrivate = this._getPaymentCodePrivate(account);\n        const senderPCodePublic = new PaymentCodePublic(ecc, bip32, buf.slice(1));\n        const paymentCodeInfoArray = this._senderPaymentCodeInfo.get(receiverPaymentCode);\n        const lastIndex = paymentCodeInfoArray && paymentCodeInfoArray.length > 0\n            ? paymentCodeInfoArray[paymentCodeInfoArray.length - 1].index\n            : 0;\n        let addrIndex = lastIndex;\n        for (let attempts = 0; attempts < MAX_ADDRESS_DERIVATION_ATTEMPTS; attempts++) {\n            const address = senderPCodePublic.getPaymentAddress(receiverPCodePrivate, addrIndex++);\n            if (this.isValidAddressForZone(address, zone)) {\n                const pcInfo = {\n                    address,\n                    pubKey: hexlify(senderPCodePublic.pubKey),\n                    index: addrIndex,\n                    account,\n                    zone,\n                    isUsed: false,\n                };\n                if (paymentCodeInfoArray) {\n                    paymentCodeInfoArray.push(pcInfo);\n                }\n                else {\n                    this._senderPaymentCodeInfo.set(receiverPaymentCode, [pcInfo]);\n                }\n                return pcInfo;\n            }\n        }\n        throw new Error(`Failed to derive a valid address for the zone ${zone} after ${MAX_ADDRESS_DERIVATION_ATTEMPTS} attempts.`);\n    }\n    /**\n     * Generates a payment address for receiving funds from the specified sender's BIP47 payment code. Uses\n     * Diffie-Hellman key exchange to derive the address from the sender's public key and receiver's private key.\n     *\n     * @param {string} senderPaymentCode - The Base58-encoded BIP47 payment code of the sender.\n     * @returns {Promise<string>} A promise that resolves to the payment address for receiving funds.\n     * @throws {Error} Throws an error if the payment code version is invalid.\n     */\n    getNextReceiveAddress(senderPaymentCode, zone, account = 0) {\n        const bip32 = this._getBIP32API();\n        const buf = this._decodeBase58(senderPaymentCode);\n        const version = buf[0];\n        if (version !== PC_VERSION)\n            throw new Error('Invalid payment code version');\n        const senderPCodePublic = new PaymentCodePublic(ecc, bip32, buf.slice(1));\n        const receiverPCodePrivate = this._getPaymentCodePrivate(account);\n        const paymentCodeInfoArray = this._receiverPaymentCodeInfo.get(senderPaymentCode);\n        const lastIndex = paymentCodeInfoArray && paymentCodeInfoArray.length > 0\n            ? paymentCodeInfoArray[paymentCodeInfoArray.length - 1].index\n            : 0;\n        let addrIndex = lastIndex;\n        for (let attempts = 0; attempts < MAX_ADDRESS_DERIVATION_ATTEMPTS; attempts++) {\n            const address = receiverPCodePrivate.getPaymentAddress(senderPCodePublic, addrIndex++);\n            if (this.isValidAddressForZone(address, zone)) {\n                const pcInfo = {\n                    address,\n                    pubKey: hexlify(receiverPCodePrivate.pubKey),\n                    index: addrIndex,\n                    account,\n                    zone,\n                    isUsed: false,\n                };\n                if (paymentCodeInfoArray) {\n                    paymentCodeInfoArray.push(pcInfo);\n                }\n                else {\n                    this._receiverPaymentCodeInfo.set(senderPaymentCode, [pcInfo]);\n                }\n                return pcInfo;\n            }\n        }\n        throw new Error(`Failed to derive a valid address for the zone ${zone} after ${MAX_ADDRESS_DERIVATION_ATTEMPTS} attempts.`);\n    }\n    /**\n     * Receives a payment code and stores it in the wallet for future use. If the payment code is already in the wallet,\n     * it will be ignored.\n     *\n     * @param {string} paymentCode - The payment code to store.\n     * @param {'receiver' | 'sender'} type - The type of payment code ('receiver' or 'sender').\n     */\n    openChannel(paymentCode, type) {\n        if (!validatePaymentCode(paymentCode)) {\n            throw new Error(`Invalid payment code: ${paymentCode}`);\n        }\n        if (type === 'receiver') {\n            if (!this._receiverPaymentCodeInfo.has(paymentCode)) {\n                this._receiverPaymentCodeInfo.set(paymentCode, []);\n            }\n        }\n        else {\n            if (!this._senderPaymentCodeInfo.has(paymentCode)) {\n                this._senderPaymentCodeInfo.set(paymentCode, []);\n            }\n        }\n    }\n    /**\n     * Gets the address info for a given address.\n     *\n     * @param {string} address - The address.\n     * @returns {NeuteredAddressInfo | null} The address info or null if not found.\n     */\n    getChangeAddressInfo(address) {\n        const changeAddressInfo = this._changeAddresses.get(address);\n        if (!changeAddressInfo) {\n            return null;\n        }\n        return changeAddressInfo;\n    }\n}\nexport { QiHDWallet };\n//# sourceMappingURL=qi-hdwallet.js.map","/**\n * A **Network** encapsulates the various properties required to interact with a specific chain.\n *\n * @category Providers\n */\nimport { getBigInt, assertArgument } from '../utils/index.js';\nconst Networks = new Map();\n/**\n * A **Network** provides access to a chain's properties and allows for plug-ins to extend functionality.\n *\n * @category Providers\n */\nexport class Network {\n    #name;\n    #chainId;\n    /**\n     * Creates a new **Network** for `name` and `chainId`.\n     *\n     * @param {string} name - The network name.\n     * @param {BigNumberish} chainId - The network chain ID.\n     */\n    constructor(name, chainId) {\n        this.#name = name;\n        this.#chainId = getBigInt(chainId);\n    }\n    /**\n     * Returns a JSON-compatible representation of a Network.\n     *\n     * @returns {Object} The JSON representation of the network.\n     */\n    toJSON() {\n        return { name: this.name, chainId: String(this.chainId) };\n    }\n    /**\n     * The network common name.\n     *\n     * This is the canonical name, as networks might have multiple names.\n     *\n     * @returns {string} The network name.\n     */\n    get name() {\n        return this.#name;\n    }\n    /**\n     * Sets the network name.\n     *\n     * @param {string} value - The new network name.\n     */\n    set name(value) {\n        this.#name = value;\n    }\n    /**\n     * The network chain ID.\n     *\n     * @returns {bigint} The network chain ID.\n     */\n    get chainId() {\n        return this.#chainId;\n    }\n    /**\n     * Sets the network chain ID.\n     *\n     * @param {BigNumberish} value - The new network chain ID.\n     */\n    set chainId(value) {\n        this.#chainId = getBigInt(value, 'chainId');\n    }\n    /**\n     * Returns true if `other` matches this network. Any chain ID must match, and if no chain ID is present, the name\n     * must match.\n     *\n     * This method does not currently check for additional properties, such as plug-in compatibility.\n     *\n     * @ignore\n     * @param {Networkish} other - The network to compare.\n     * @returns {boolean} True if the networks match.\n     */\n    matches(other) {\n        if (other == null) {\n            return false;\n        }\n        if (typeof other === 'string') {\n            try {\n                return this.chainId === getBigInt(other);\n                // eslint-disable-next-line no-empty\n            }\n            catch (error) { }\n            return this.name === other;\n        }\n        if (typeof other === 'number' || typeof other === 'bigint') {\n            try {\n                return this.chainId === getBigInt(other);\n                // eslint-disable-next-line no-empty\n            }\n            catch (error) { }\n            return false;\n        }\n        if (typeof other === 'object') {\n            if (other.chainId != null) {\n                try {\n                    return this.chainId === getBigInt(other.chainId);\n                    // eslint-disable-next-line no-empty\n                }\n                catch (error) { }\n                return false;\n            }\n            if (other.name != null) {\n                return this.name === other.name;\n            }\n            return false;\n        }\n        return false;\n    }\n    /**\n     * Create a copy of this Network.\n     *\n     * @returns {Network} A new Network instance.\n     */\n    clone() {\n        const clone = new Network(this.name, this.chainId);\n        return clone;\n    }\n    /**\n     * Returns a new Network for the `network` name or chainId.\n     *\n     * @param {Networkish} [network] - The network to get.\n     * @returns {Network} The Network instance.\n     * @throws {Error} If the network is invalid.\n     */\n    static from(network) {\n        // Default network\n        if (network == null) {\n            return Network.from('mainnet');\n        }\n        // Canonical name or chain ID\n        if (typeof network === 'number') {\n            network = BigInt(network);\n        }\n        if (typeof network === 'string' || typeof network === 'bigint') {\n            const networkFunc = Networks.get(network);\n            if (networkFunc) {\n                return networkFunc();\n            }\n            if (typeof network === 'bigint') {\n                return new Network('unknown', network);\n            }\n            assertArgument(false, 'unknown network', 'network', network);\n        }\n        // Clonable with network-like abilities\n        if (typeof network.clone === 'function') {\n            const clone = network.clone();\n            return clone;\n        }\n        // Networkish\n        if (typeof network === 'object') {\n            assertArgument(typeof network.name === 'string' && typeof network.chainId === 'number', 'invalid network object name or chainId', 'network', network);\n            const custom = new Network(network.name, network.chainId);\n            return custom;\n        }\n        assertArgument(false, 'invalid network', 'network', network);\n    }\n    /**\n     * Register `nameOrChainId` with a function which returns an instance of a Network representing that chain.\n     *\n     * @param {string | number | bigint} nameOrChainId - The name or chain ID to register.\n     * @param {() => Network} networkFunc - The function to create the Network.\n     * @throws {Error} If a network is already registered for `nameOrChainId`.\n     */\n    static register(nameOrChainId, networkFunc) {\n        if (typeof nameOrChainId === 'number') {\n            nameOrChainId = BigInt(nameOrChainId);\n        }\n        const existing = Networks.get(nameOrChainId);\n        if (existing) {\n            assertArgument(false, `conflicting network for ${JSON.stringify(existing.name)}`, 'nameOrChainId', nameOrChainId);\n        }\n        Networks.set(nameOrChainId, networkFunc);\n    }\n}\n//# sourceMappingURL=network.js.map","import { toZone } from '../constants/index.js';\nimport { toShard } from '../constants/shards.js';\nimport { assert, isHexString } from '../utils/index.js';\nimport { getZoneFromNodeLocation } from '../utils/shards.js';\nimport { getZoneFromEventFilter } from './provider.js';\n/**\n * Deep copies an object.\n *\n * @param {any} obj - The object to copy.\n * @returns {any} The copied object.\n */\nfunction copy(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\n/**\n * Return the polling subscriber for common events.\n *\n * @category Providers\n * @param {AbstractProvider} provider - The provider to attach the subscriber to.\n * @param {ProviderEvent} event - The event to subscribe to.\n * @returns {Subscriber} The polling subscriber.\n * @throws {Error} If the event is unsupported.\n */\nexport function getPollingSubscriber(provider, event, zone) {\n    if (event === 'block') {\n        return new PollingBlockSubscriber(provider, zone);\n    }\n    if (isHexString(event, 32)) {\n        return new PollingTransactionSubscriber(provider, event, zone);\n    }\n    assert(false, 'unsupported polling event', 'UNSUPPORTED_OPERATION', {\n        operation: 'getPollingSubscriber',\n        info: { event },\n    });\n}\n/**\n * A **PollingBlockSubscriber** polls at a regular interval for a change in the block number.\n *\n * @category Providers\n */\nexport class PollingBlockSubscriber {\n    #provider;\n    #poller;\n    #interval;\n    #zone;\n    // The most recent block we have scanned for events. The value -2\n    // indicates we still need to fetch an initial block number\n    #blockNumber;\n    /**\n     * Create a new **PollingBlockSubscriber** attached to `provider`.\n     *\n     * @ignore\n     */\n    constructor(provider, zone) {\n        this.#provider = provider;\n        this.#zone = zone;\n        this.#poller = null;\n        this.#interval = 4000;\n        this.#blockNumber = -2;\n    }\n    /**\n     * The polling interval.\n     *\n     * @returns {number} The current polling interval.\n     */\n    get pollingInterval() {\n        return this.#interval;\n    }\n    /**\n     * Sets the polling interval.\n     *\n     * @param {number} value - The new polling interval.\n     */\n    set pollingInterval(value) {\n        this.#interval = value;\n    }\n    /**\n     * Polls for new blocks.\n     *\n     * @ignore\n     * @returns {Promise<void>} A promise that resolves when polling is complete.\n     */\n    async #poll() {\n        try {\n            const blockNumber = await this.#provider.getBlockNumber(toShard(this.#zone));\n            // Bootstrap poll to setup our initial block number\n            if (this.#blockNumber === -2) {\n                this.#blockNumber = blockNumber;\n                return;\n            }\n            // @TODO: Put a cap on the maximum number of events per loop?\n            if (blockNumber !== this.#blockNumber) {\n                for (let b = this.#blockNumber + 1; b <= blockNumber; b++) {\n                    // We have been stopped\n                    if (this.#poller == null) {\n                        return;\n                    }\n                    await this.#provider.emit('block', this.#zone, b);\n                }\n                this.#blockNumber = blockNumber;\n            }\n        }\n        catch (error) {\n            // @TODO: Minor bump, add an \"error\" event to let subscribers\n            //        know things went awry.\n        }\n        // We have been stopped\n        if (this.#poller == null) {\n            return;\n        }\n        this.#poller = this.#provider._setTimeout(this.#poll.bind(this), this.#interval);\n    }\n    /**\n     * Starts the polling process.\n     */\n    start() {\n        if (this.#poller) {\n            return;\n        }\n        this.#poller = this.#provider._setTimeout(this.#poll.bind(this), this.#interval);\n        this.#poll();\n    }\n    /**\n     * Stops the polling process.\n     */\n    stop() {\n        if (!this.#poller) {\n            return;\n        }\n        this.#provider._clearTimeout(this.#poller);\n        this.#poller = null;\n    }\n    /**\n     * Pauses the polling process.\n     *\n     * @param {boolean} [dropWhilePaused] - Whether to drop the block number while paused.\n     */\n    pause(dropWhilePaused) {\n        this.stop();\n        if (dropWhilePaused) {\n            this.#blockNumber = -2;\n        }\n    }\n    /**\n     * Resumes the polling process.\n     */\n    resume() {\n        this.start();\n    }\n}\n/**\n * An **OnBlockSubscriber** can be sub-classed, with a {@link OnBlockSubscriber._poll | **_poll**} implementation which\n * will be called on every new block.\n *\n * @category Providers\n */\nexport class OnBlockSubscriber {\n    #provider;\n    #poll;\n    #running;\n    #zone;\n    /**\n     * Create a new **OnBlockSubscriber** attached to `provider`.\n     *\n     * @ignore\n     */\n    constructor(provider, zone) {\n        this.#provider = provider;\n        this.#zone = zone;\n        this.#running = false;\n        this.#poll = (blockNumber) => {\n            this._poll(blockNumber, this.#provider);\n        };\n    }\n    /**\n     * Called on every new block.\n     *\n     * @ignore\n     * @param {number} blockNumber - The block number.\n     * @param {AbstractProvider} provider - The provider.\n     * @returns {Promise<void>} A promise that resolves when the poll is complete.\n     * @throws {Error} If the method is not overridden by a subclass.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async _poll(blockNumber, provider) {\n        throw new Error('sub-classes must override this');\n    }\n    /**\n     * Starts the subscriber.\n     */\n    start() {\n        if (this.#running) {\n            return;\n        }\n        this.#running = true;\n        this.#poll(-2);\n        this.#provider.on('block', this.#poll, this.#zone);\n    }\n    /**\n     * Stops the subscriber.\n     */\n    stop() {\n        if (!this.#running) {\n            return;\n        }\n        this.#running = false;\n        this.#provider.off('block', this.#poll, this.#zone);\n    }\n    /**\n     * Pauses the subscriber.\n     *\n     * @param {boolean} [dropWhilePaused] - Whether to drop the block number while paused.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    pause(dropWhilePaused) {\n        this.stop();\n    }\n    /**\n     * Resumes the subscriber.\n     */\n    resume() {\n        this.start();\n    }\n}\n/**\n * @ignore\n */\nexport class PollingOrphanSubscriber extends OnBlockSubscriber {\n    #filter;\n    /**\n     * Create a new **PollingOrphanSubscriber** attached to `provider`, listening for `filter`.\n     *\n     * @ignore\n     */\n    constructor(provider, filter, zone) {\n        super(provider, zone);\n        this.#filter = copy(filter);\n    }\n    /**\n     * Polls for orphaned blocks.\n     *\n     * @ignore\n     * @param {number} blockNumber - The block number.\n     * @param {AbstractProvider} provider - The provider.\n     * @returns {Promise<void>} A promise that resolves when the poll is complete.\n     * @throws {Error} If the method is not implemented.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async _poll(blockNumber, provider) {\n        throw new Error('@TODO');\n        console.log(this.#filter);\n    }\n}\n/**\n * A **PollingTransactionSubscriber** will poll for a given transaction hash for its receipt.\n *\n * @category Providers\n */\nexport class PollingTransactionSubscriber extends OnBlockSubscriber {\n    #hash;\n    /**\n     * Create a new **PollingTransactionSubscriber** attached to `provider`, listening for `hash`.\n     *\n     * @ignore\n     */\n    constructor(provider, hash, zone) {\n        super(provider, zone);\n        this.#hash = hash;\n    }\n    /**\n     * Polls for the transaction receipt.\n     *\n     * @ignore\n     * @param {number} blockNumber - The block number.\n     * @param {AbstractProvider} provider - The provider.\n     * @returns {Promise<void>} A promise that resolves when the poll is complete.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async _poll(blockNumber, provider) {\n        const tx = await provider.getTransactionReceipt(this.#hash);\n        if (tx) {\n            provider.emit(this.#hash, toZone(this.#hash.slice(0, 4)), tx);\n        }\n    }\n}\n/**\n * A **PollingEventSubscriber** will poll for a given filter for its logs.\n *\n * @category Providers\n */\nexport class PollingEventSubscriber {\n    #provider;\n    #filter;\n    #poller;\n    #running;\n    #blockNumber;\n    #zone;\n    /**\n     * Create a new **PollingEventSubscriber** attached to `provider`, listening for `filter`.\n     *\n     * @ignore\n     */\n    constructor(provider, filter) {\n        this.#provider = provider;\n        this.#filter = copy(filter);\n        this.#poller = this.#poll.bind(this);\n        this.#running = false;\n        this.#blockNumber = -2;\n        const zone = getZoneFromEventFilter(this.#filter);\n        if (zone) {\n            this.#zone = zone;\n        }\n        else {\n            throw new Error('Unable to determine zone for event filter');\n        }\n    }\n    /**\n     * Polls for logs based on the filter.\n     *\n     * @ignore\n     * @param {number} blockNumber - The block number.\n     * @returns {Promise<void>} A promise that resolves when the poll is complete.\n     */\n    async #poll(blockNumber) {\n        // The initial block hasn't been determined yet\n        if (this.#blockNumber === -2) {\n            return;\n        }\n        const filter = copy(this.#filter);\n        filter.fromBlock = this.#blockNumber + 1;\n        filter.toBlock = blockNumber;\n        const logs = await this.#provider.getLogs(filter);\n        // No logs could just mean the node has not indexed them yet,\n        // so we keep a sliding window of 60 blocks to keep scanning\n        if (logs.length === 0) {\n            if (this.#blockNumber < blockNumber - 60) {\n                this.#blockNumber = blockNumber - 60;\n            }\n            return;\n        }\n        for (const log of logs) {\n            this.#provider.emit(this.#filter, getZoneFromNodeLocation(this.#filter.nodeLocation), log);\n            // Only advance the block number when logs were found to\n            // account for networks (like BNB and Polygon) which may\n            // sacrifice event consistency for block event speed\n            this.#blockNumber = log.blockNumber;\n        }\n    }\n    /**\n     * Starts the subscriber.\n     */\n    start() {\n        if (this.#running) {\n            return;\n        }\n        this.#running = true;\n        if (this.#blockNumber === -2) {\n            this.#provider.getBlockNumber(toShard(this.#zone)).then((blockNumber) => {\n                this.#blockNumber = blockNumber;\n            });\n        }\n        this.#provider.on('block', this.#poller, this.#zone);\n    }\n    /**\n     * Stops the subscriber.\n     */\n    stop() {\n        if (!this.#running) {\n            return;\n        }\n        this.#running = false;\n        this.#provider.off('block', this.#poller, this.#zone);\n    }\n    /**\n     * Pauses the subscriber.\n     *\n     * @param {boolean} [dropWhilePaused] - Whether to drop the block number while paused.\n     */\n    pause(dropWhilePaused) {\n        this.stop();\n        if (dropWhilePaused) {\n            this.#blockNumber = -2;\n        }\n    }\n    /**\n     * Resumes the subscriber.\n     */\n    resume() {\n        this.start();\n    }\n}\n//# sourceMappingURL=subscriber-polling.js.map","/**\n * The available providers should suffice for most developers purposes, but the\n * {@link AbstractProvider | **AbstractProvider**} class has many features which enable sub-classing it for specific\n * purposes.\n */\n/**\n * Event coalescence When we register an event with an async value (e.g. address is a Signer), we need to add it\n * immediately for the Event API, but also need time to resolve the address. Upon resolving the address, we need to\n * migrate the listener to the static event. We also need to maintain a map of Signer to address so we can sync respond\n * to listenerCount.\n */\nimport { computeAddress, resolveAddress, formatMixedCaseChecksumAddress } from '../address/index.js';\nimport { Shard, toShard, toZone } from '../constants/index.js';\nimport { hexlify, isHexString, getBigInt, getBytes, getNumber, makeError, assert, assertArgument, FetchRequest, toQuantity, defineProperties, EventPayload, resolveProperties, } from '../utils/index.js';\nimport { decodeProtoTransaction } from '../encoding/index.js';\nimport { formatBlock, formatLog, formatTransactionReceipt, formatTransactionResponse } from './format.js';\nimport { Network } from './network.js';\nimport { copyRequest, Block, FeeData, Log, TransactionReceipt, addressFromTransactionRequest, QuaiTransactionResponse, QiTransactionResponse, } from './provider.js';\nimport { QiTransaction, QuaiTransaction } from '../transaction/index.js';\nimport { PollingBlockSubscriber, PollingEventSubscriber, PollingOrphanSubscriber, PollingTransactionSubscriber, } from './subscriber-polling.js';\nimport { getNodeLocationFromZone, getZoneFromNodeLocation } from '../utils/shards.js';\nimport { fromShard } from '../constants/shards.js';\n/**\n * Check if a value is a Promise.\n *\n * @param {any} value - The value to check.\n * @returns {boolean} True if the value is a Promise, false otherwise.\n */\nfunction isPromise(value) {\n    return value && typeof value.then === 'function';\n}\n/**\n * Get a tag string based on a prefix and value.\n *\n * @param {string} prefix - The prefix for the tag.\n * @param {any} value - The value to include in the tag.\n * @returns {string} The generated tag.\n */\nfunction getTag(prefix, value) {\n    return (prefix +\n        ':' +\n        JSON.stringify(value, (k, v) => {\n            if (v == null) {\n                return 'null';\n            }\n            if (typeof v === 'bigint') {\n                return `bigint:${v.toString()}`;\n            }\n            if (typeof v === 'string') {\n                return v.toLowerCase();\n            }\n            // Sort object keys\n            if (typeof v === 'object' && !Array.isArray(v)) {\n                const keys = Object.keys(v);\n                keys.sort();\n                return keys.reduce((accum, key) => {\n                    accum[key] = v[key];\n                    return accum;\n                }, {});\n            }\n            return v;\n        }));\n}\n/**\n * An **UnmanagedSubscriber** is useful for events which do not require any additional management, such as `\"debug\"`\n * which only requires emit in synchronous event loop triggered calls.\n *\n * @category Providers\n */\nexport class UnmanagedSubscriber {\n    /**\n     * The name of the event.\n     */\n    name;\n    /**\n     * Create a new UnmanagedSubscriber with `name`.\n     *\n     * @param {string} name - The name of the event.\n     */\n    constructor(name) {\n        defineProperties(this, { name });\n    }\n    start() { }\n    stop() { }\n    // todo `dropWhilePaused` is not used, remove or re-write\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    pause(dropWhilePaused) { }\n    resume() { }\n}\n/**\n * Create a deep copy of a value.\n *\n * @param {T} value - The value to copy.\n * @returns {T} The copied value.\n */\nfunction copy(value) {\n    return JSON.parse(JSON.stringify(value));\n}\n/**\n * Remove duplicates and sort an array of strings.\n *\n * @param {string[]} items - The array of strings.\n * @returns {string[]} The concisified array.\n */\nfunction concisify(items) {\n    items = Array.from(new Set(items).values());\n    items.sort();\n    return items;\n}\n// todo `provider` is not used, remove or re-write\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nasync function getSubscription(_event, zone) {\n    if (_event == null) {\n        throw new Error('invalid event');\n    }\n    // Normalize topic array info an EventFilter\n    if (Array.isArray(_event)) {\n        _event = { topics: _event };\n    }\n    if (typeof _event === 'string') {\n        if (_event === 'debug') {\n            return { type: _event, tag: _event };\n        }\n        switch (_event) {\n            case 'block':\n            case 'pending':\n                if (!zone) {\n                    throw new Error('zone is required for block and pending events');\n                }\n                return { type: 'block', tag: _event, zone };\n            case 'error':\n            case 'finalized':\n            case 'network':\n            case 'safe': {\n                return { type: _event, tag: _event };\n            }\n        }\n    }\n    if (isHexString(_event, 32)) {\n        const hash = _event.toLowerCase();\n        zone = toZone(hash.slice(0, 4));\n        return { type: 'transaction', tag: getTag('tx', { hash }), hash, zone };\n    }\n    if (_event.orphan) {\n        const event = _event;\n        if (!zone) {\n            const hash = event.hash ||\n                event.tx.hash ||\n                event.other?.hash ||\n                event.log.transactionHash ||\n                null;\n            if (hash == null) {\n                throw new Error('orphan event must specify a hash');\n            }\n            zone = toZone(hash.slice(0, 4));\n        }\n        // @todo Should lowercase and whatnot things here instead of copy...\n        return { type: 'orphan', tag: getTag('orphan', event), filter: copy(event), zone };\n    }\n    if (_event.address || _event.topics) {\n        const event = _event;\n        const filter = {\n            topics: (event.topics || []).map((t) => {\n                if (t == null) {\n                    return null;\n                }\n                if (Array.isArray(t)) {\n                    return concisify(t.map((t) => t.toLowerCase()));\n                }\n                return t.toLowerCase();\n            }),\n        };\n        if (event.nodeLocation) {\n            filter.nodeLocation = event.nodeLocation;\n        }\n        if (event.address) {\n            const addresses = [];\n            const promises = [];\n            const addAddress = (addr) => {\n                if (isHexString(addr)) {\n                    addresses.push(formatMixedCaseChecksumAddress(addr));\n                }\n                else {\n                    promises.push((async () => {\n                        addresses.push(formatMixedCaseChecksumAddress(await resolveAddress(addr)));\n                    })());\n                }\n            };\n            if (Array.isArray(event.address)) {\n                event.address.forEach(addAddress);\n            }\n            else {\n                addAddress(event.address);\n            }\n            if (promises.length) {\n                await Promise.all(promises);\n            }\n            if (!zone) {\n                zone = toZone(addresses[0].slice(0, 4));\n            }\n            filter.address = concisify(addresses.map((a) => a.toLowerCase()));\n            if (!filter.nodeLocation) {\n                filter.nodeLocation = getNodeLocationFromZone(zone);\n            }\n        }\n        else {\n            if (!zone) {\n                throw new Error('zone is required for event');\n            }\n        }\n        return { filter, tag: getTag('event', filter), type: 'event', zone };\n    }\n    assertArgument(false, 'unknown ProviderEvent', 'event', _event);\n}\n/**\n * Get the current time in milliseconds.\n *\n * @returns {number} The current time in milliseconds.\n */\nfunction getTime() {\n    return new Date().getTime();\n}\nconst defaultOptions = {\n    cacheTimeout: 250,\n    pollingInterval: 4000,\n    usePathing: false,\n};\n/**\n * An **AbstractProvider** provides a base class for other sub-classes to implement the {@link Provider | **Provider**}\n * API by normalizing input arguments and formatting output results as well as tracking events for consistent behaviour\n * on an eventually-consistent network.\n *\n * @category Providers\n */\nexport class AbstractProvider {\n    /**\n     * @ignore\n     */\n    _urlMap;\n    #connect;\n    #subs;\n    // null=unpaused, true=paused+dropWhilePaused, false=paused\n    #pausedState;\n    #destroyed;\n    #networkPromise;\n    #anyNetwork;\n    #performCache;\n    // The most recent block number if running an event or -1 if no \"block\" event\n    #lastBlockNumber;\n    #nextTimer;\n    #timers;\n    #options;\n    _initFailed;\n    initResolvePromise;\n    initRejectPromise;\n    initPromise;\n    /**\n     * Create a new **AbstractProvider** connected to `network`, or use the various network detection capabilities to\n     * discover the {@link Network | **Network**} if necessary.\n     *\n     * @param _network - The network to connect to, or `\"any\"` to\n     * @param options - The options to configure the provider.\n     */\n    constructor(_network, options) {\n        this._initFailed = false;\n        this.#options = Object.assign({}, defaultOptions, options || {});\n        if (_network === 'any') {\n            this.#anyNetwork = true;\n            this.#networkPromise = null;\n        }\n        else if (_network) {\n            const network = Network.from(_network);\n            this.#anyNetwork = false;\n            this.#networkPromise = Promise.resolve(network);\n            setTimeout(() => {\n                this.emit('network', undefined, network, null);\n            }, 0);\n        }\n        else {\n            this.#anyNetwork = false;\n            this.#networkPromise = null;\n        }\n        this.#lastBlockNumber = -1;\n        this.#performCache = new Map();\n        this.#subs = new Map();\n        this.#pausedState = null;\n        this.#destroyed = false;\n        this.#nextTimer = 1;\n        this.#timers = new Map();\n        this.#connect = [];\n        this._urlMap = new Map();\n        this.initResolvePromise = null;\n        this.initRejectPromise = null;\n        this.initPromise = new Promise((resolve, reject) => {\n            this.initResolvePromise = resolve;\n            this.initRejectPromise = reject;\n        });\n    }\n    /**\n     * Initialize the URL map with the provided URLs.\n     *\n     * @param {U} urls - The URLs to initialize the map with.\n     * @returns {Promise<void>} A promise that resolves when the map is initialized.\n     */\n    async initialize(urls) {\n        try {\n            const primeSuffix = this.#options.usePathing ? `/${fromShard(Shard.Prime, 'nickname')}` : ':9001';\n            if (urls instanceof FetchRequest) {\n                urls.url = urls.url.split(':')[0] + ':' + urls.url.split(':')[1] + primeSuffix;\n                this._urlMap.set(Shard.Prime, urls);\n                this.#connect.push(urls);\n                const shards = await this.getRunningLocations();\n                shards.forEach((shard) => {\n                    const port = 9200 + 20 * shard[0] + shard[1];\n                    const shardEnum = toShard(`0x${shard[0].toString(16)}${shard[1].toString(16)}`);\n                    const shardSuffix = this.#options.usePathing ? `/${fromShard(shardEnum, 'nickname')}` : `:${port}`;\n                    this._urlMap.set(shardEnum, new FetchRequest(urls.url.split(':')[0] + ':' + urls.url.split(':')[1] + shardSuffix));\n                });\n                return;\n            }\n            if (Array.isArray(urls)) {\n                for (const url of urls) {\n                    const primeUrl = url.split(':')[0] + ':' + url.split(':')[1] + primeSuffix;\n                    const primeConnect = new FetchRequest(primeUrl);\n                    this._urlMap.set(Shard.Prime, primeConnect);\n                    this.#connect.push(primeConnect);\n                    const shards = await this.getRunningLocations();\n                    shards.forEach((shard) => {\n                        const port = 9200 + 20 * shard[0] + shard[1];\n                        const shardEnum = toShard(`0x${shard[0].toString(16)}${shard[1].toString(16)}`);\n                        const shardSuffix = this.#options.usePathing\n                            ? `/${fromShard(shardEnum, 'nickname')}`\n                            : `:${port}`;\n                        this._urlMap.set(toShard(`0x${shard[0].toString(16)}${shard[1].toString(16)}`), new FetchRequest(url.split(':')[0] + ':' + url.split(':')[1] + shardSuffix));\n                    });\n                }\n            }\n            if (this.initResolvePromise)\n                this.initResolvePromise();\n        }\n        catch (error) {\n            this._initFailed = true;\n            console.log('Error initializing URL map:', error);\n            if (this.initRejectPromise)\n                this.initRejectPromise(error);\n        }\n    }\n    /**\n     * Get the list of connected FetchRequests.\n     *\n     * @returns {FetchRequest[]} The list of connected FetchRequests.\n     */\n    get connect() {\n        return this.#connect;\n    }\n    /**\n     * Get the zone from an address.\n     *\n     * @param {AddressLike} _address - The address to get the zone from.\n     * @returns {Promise<Zone>} A promise that resolves to the zone.\n     */\n    async zoneFromAddress(_address) {\n        const address = this._getAddress(_address);\n        return toZone((await address).slice(0, 4));\n    }\n    /**\n     * Get the shard from a hash.\n     *\n     * @param {string} hash - The hash to get the shard from.\n     * @returns {Shard} The shard.\n     */\n    shardFromHash(hash) {\n        return toShard(hash.slice(0, 4));\n    }\n    /**\n     * Get the zone from a hash.\n     *\n     * @param {string} hash - The hash to get the zone from.\n     * @returns {Zone} The zone.\n     */\n    zoneFromHash(hash) {\n        return toZone(hash.slice(0, 4));\n    }\n    /**\n     * Get the latest Quai rate for a zone.\n     *\n     * @param {Zone} zone - The zone to get the rate for.\n     * @param {number} [amt=1] - The amount to get the rate for. Default is `1`\n     * @returns {Promise<bigint>} A promise that resolves to the latest Quai rate.\n     */\n    async getLatestQuaiRate(zone, amt = 1) {\n        const blockNumber = await this.getBlockNumber(toShard(zone));\n        return this.getQuaiRateAtBlock(zone, blockNumber, amt);\n    }\n    /**\n     * Get the Quai rate at a specific block.\n     *\n     * @param {Zone} zone - The zone to get the rate for.\n     * @param {BlockTag} blockTag - The block tag to get the rate at.\n     * @param {number} [amt=1] - The amount to get the rate for. Default is `1`\n     * @returns {Promise<bigint>} A promise that resolves to the Quai rate at the specified block.\n     */\n    async getQuaiRateAtBlock(zone, blockTag, amt = 1) {\n        let resolvedBlockTag = this._getBlockTag(toShard(zone), blockTag);\n        if (typeof resolvedBlockTag !== 'string') {\n            resolvedBlockTag = await resolvedBlockTag;\n        }\n        return await this.#perform({\n            method: 'getQuaiRateAtBlock',\n            blockTag: resolvedBlockTag,\n            amt,\n            zone: zone,\n        });\n    }\n    /**\n     * Get the protocol expansion number.\n     *\n     * @returns {Promise<number>} A promise that resolves to the protocol expansion number.\n     */\n    async getProtocolExpansionNumber() {\n        return await this.#perform({\n            method: 'getProtocolExpansionNumber',\n        });\n    }\n    /**\n     * Get the latest Qi rate for a zone.\n     *\n     * @param {Zone} zone - The zone to get the rate for.\n     * @param {number} [amt=1] - The amount to get the rate for. Default is `1`\n     * @returns {Promise<bigint>} A promise that resolves to the latest Qi rate.\n     */\n    async getLatestQiRate(zone, amt = 1) {\n        const blockNumber = await this.getBlockNumber(toShard(zone));\n        return this.getQiRateAtBlock(zone, blockNumber, amt);\n    }\n    /**\n     * Get the Qi rate at a specific block.\n     *\n     * @param {Zone} zone - The zone to get the rate for.\n     * @param {BlockTag} blockTag - The block tag to get the rate at.\n     * @param {number} [amt=1] - The amount to get the rate for. Default is `1`\n     * @returns {Promise<bigint>} A promise that resolves to the Qi rate at the specified block.\n     */\n    async getQiRateAtBlock(zone, blockTag, amt = 1) {\n        let resolvedBlockTag = this._getBlockTag(toShard(zone), blockTag);\n        if (typeof resolvedBlockTag !== 'string') {\n            resolvedBlockTag = await resolvedBlockTag;\n        }\n        return await this.#perform({\n            method: 'getQiRateAtBlock',\n            blockTag: resolvedBlockTag,\n            amt,\n            zone: zone,\n        });\n    }\n    /**\n     * Get the polling interval.\n     *\n     * @returns {number} The polling interval.\n     */\n    get pollingInterval() {\n        return this.#options.pollingInterval;\n    }\n    /**\n     * Returns `this`, to allow an **AbstractProvider** to implement the [Contract Runner](../classes/ContractRunner)\n     * interface.\n     *\n     * @returns {this} The provider instance.\n     */\n    get provider() {\n        return this;\n    }\n    /**\n     * Shares multiple identical requests made during the same 250ms.\n     *\n     * @ignore\n     * @param {PerformActionRequest} req - The request to perform.\n     * @returns {Promise<T>} A promise that resolves to the result of the operation.\n     */\n    async #perform(req) {\n        const timeout = this.#options.cacheTimeout;\n        // Caching disabled\n        if (timeout < 0) {\n            return await this._perform(req);\n        }\n        // Create a tag\n        const tag = getTag(req.method, req);\n        let perform = this.#performCache.get(tag);\n        if (!perform || tag.includes('pending') || tag.includes('latest')) {\n            perform = this._perform(req);\n            this.#performCache.set(tag, perform);\n            setTimeout(() => {\n                if (this.#performCache.get(tag) === perform) {\n                    this.#performCache.delete(tag);\n                }\n            }, timeout);\n        }\n        return await perform;\n    }\n    /**\n     * Provides the opportunity for a sub-class to wrap a block before returning it, to add additional properties or an\n     * alternate sub-class of {@link Block | **Block**}.\n     *\n     * @ignore\n     * @param {BlockParams} value - The block to wrap.\n     * @param {Network} network - The network the block was on.\n     * @returns {Block} The wrapped block.\n     */\n    // @todo `network` is not used, remove or re-write\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _wrapBlock(value, network) {\n        // Handle known node by -> remove null values from the number array\n        value.header.number = Array.isArray(value.header.number)\n            ? value.header.number.filter((n) => n != null)\n            : value.header.number;\n        return new Block(formatBlock(value), this);\n    }\n    /**\n     * Provides the opportunity for a sub-class to wrap a log before returning it, to add additional properties or an\n     * alternate sub-class of {@link Log | **Log**}.\n     *\n     * @ignore\n     * @param {LogParams} value - The log to wrap.\n     * @param {Network} network - The network the log was on.\n     * @returns {Log} The wrapped log.\n     */\n    // @todo `network` is not used, remove or re-write\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _wrapLog(value, network) {\n        return new Log(formatLog(value), this);\n    }\n    /**\n     * Provides the opportunity for a sub-class to wrap a transaction receipt before returning it, to add additional\n     * properties or an {@link TransactionReceipt | **TransactionReceipt**}.\n     *\n     * @ignore\n     * @param {TransactionReceiptParams} value - The transaction receipt to wrap.\n     * @param {Network} network - The network the transaction was on.\n     * @returns {TransactionReceipt} The wrapped transaction receipt.\n     */\n    // @todo `network` is not used, remove or re-write\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _wrapTransactionReceipt(value, network) {\n        const formattedReceipt = formatTransactionReceipt(value);\n        return new TransactionReceipt(formattedReceipt, this);\n    }\n    /**\n     * Provides the opportunity for a sub-class to wrap a transaction response before returning it, to add additional\n     * properties or an alternate sub-class of {@link TransactionResponse | **TransactionResponse**}.\n     *\n     * @ignore\n     * @param {TransactionResponseParams} tx - The transaction response to wrap.\n     * @param {Network} network - The network the transaction was on.\n     * @returns {TransactionResponse} The wrapped transaction response.\n     */\n    // TODO: `newtork` is not used, remove or re-write\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _wrapTransactionResponse(tx, network) {\n        try {\n            if (tx.type === 0 || tx.type === 1) {\n                // For QuaiTransaction, format and wrap as before\n                const formattedTx = formatTransactionResponse(tx);\n                return new QuaiTransactionResponse(formattedTx, this);\n            }\n            else if (tx.type === 2) {\n                // For QiTransaction, use fromProto() directly\n                return new QiTransactionResponse(tx, this);\n            }\n            else {\n                throw new Error('Unknown transaction type');\n            }\n        }\n        catch (error) {\n            console.error('Error in _wrapTransactionResponse:', error);\n            throw error;\n        }\n    }\n    /**\n     * Resolves to the Network, forcing a network detection using whatever technique the sub-class requires.\n     *\n     * Sub-classes **must** override this.\n     *\n     * @ignore\n     * @param {Shard} [shard] - The shard to use for the network detection.\n     * @returns {Promise<Network>} A promise resolving to the network.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _detectNetwork() {\n        assert(false, 'sub-classes must implement this', 'UNSUPPORTED_OPERATION', {\n            operation: '_detectNetwork',\n        });\n    }\n    /**\n     * Sub-classes should use this to perform all built-in operations. All methods sanitizes and normalizes the values\n     * passed into this.\n     *\n     * Sub-classes **must** override this.\n     *\n     * @ignore\n     * @param {PerformActionRequest} req - The request to perform.\n     * @returns {Promise<T>} A promise resolving to the result of the operation.\n     */\n    async _perform(req) {\n        assert(false, `unsupported method: ${req.method}`, 'UNSUPPORTED_OPERATION', {\n            operation: req.method,\n            info: req,\n        });\n    }\n    // State\n    async getBlockNumber(shard) {\n        const blockNumber = getNumber(await this.#perform({ method: 'getBlockNumber', shard: shard }), '%response');\n        if (this.#lastBlockNumber >= 0) {\n            this.#lastBlockNumber = blockNumber;\n        }\n        return blockNumber;\n    }\n    /**\n     * Returns or resolves to the address for `address`, resolving {@link Addressable | **Addressable**} objects and\n     * returning if already an address.\n     *\n     * @ignore\n     * @param {AddressLike} address - The address to normalize.\n     * @returns {string | Promise<string>} The normalized address.\n     */\n    _getAddress(address) {\n        return resolveAddress(address);\n    }\n    /**\n     * Returns or resolves to a valid block tag for `blockTag`, resolving negative values and returning if already a\n     * valid block tag.\n     *\n     * @ignore\n     * @param {Shard} [shard] - The shard to use for the block tag.\n     * @param {BlockTag} [blockTag] - The block tag to normalize.\n     * @returns {string | Promise<string>} A promise that resolves to a valid block tag.\n     */\n    _getBlockTag(shard, blockTag) {\n        if (blockTag == null) {\n            return 'latest';\n        }\n        switch (blockTag) {\n            case 'earliest':\n                return '0x0';\n            case 'finalized':\n            case 'latest':\n            case 'pending':\n            case 'safe':\n                return blockTag;\n        }\n        if (isHexString(blockTag)) {\n            if (isHexString(blockTag, 32)) {\n                return blockTag;\n            }\n            return toQuantity(blockTag);\n        }\n        if (typeof blockTag === 'bigint') {\n            blockTag = getNumber(blockTag, 'blockTag');\n        }\n        if (typeof blockTag === 'number') {\n            if (blockTag >= 0) {\n                return toQuantity(blockTag);\n            }\n            if (this.#lastBlockNumber >= 0) {\n                return toQuantity(this.#lastBlockNumber + blockTag);\n            }\n            return this.getBlockNumber(shard).then((b) => toQuantity(b + blockTag));\n        }\n        assertArgument(false, 'invalid blockTag', 'blockTag', blockTag);\n    }\n    /**\n     * Returns or resolves to a filter for `filter`, resolving any {@link Addressable | **Addressable**} object and\n     * returning if already a valid filter.\n     *\n     * @ignore\n     * @param {Filter | FilterByBlockHash} filter - The filter to normalize.\n     * @returns {PerformActionFilter | Promise<PerformActionFilter>} A promise that resolves to a valid filter.\n     */\n    _getFilter(filter) {\n        // Create a canonical representation of the topics\n        const topics = (filter.topics || []).map((t) => {\n            if (t == null) {\n                return null;\n            }\n            if (Array.isArray(t)) {\n                return concisify(t.map((t) => t.toLowerCase()));\n            }\n            return t.toLowerCase();\n        });\n        const blockHash = 'blockHash' in filter ? filter.blockHash : undefined;\n        const resolve = (_address, fromBlock, toBlock, nodeLocation) => {\n            let address = undefined;\n            switch (_address.length) {\n                case 0:\n                    break;\n                case 1:\n                    address = _address[0];\n                    break;\n                default:\n                    _address.sort();\n                    address = _address;\n            }\n            if (blockHash) {\n                if (fromBlock != null || toBlock != null) {\n                    throw new Error('invalid filter');\n                }\n            }\n            const filter = {};\n            if (address) {\n                filter.address = address;\n            }\n            if (topics.length) {\n                filter.topics = topics;\n            }\n            if (fromBlock) {\n                filter.fromBlock = fromBlock;\n            }\n            if (toBlock) {\n                filter.toBlock = toBlock;\n            }\n            if (blockHash) {\n                filter.blockHash = blockHash;\n            }\n            if (nodeLocation) {\n                filter.nodeLocation = nodeLocation;\n            }\n            return filter;\n        };\n        // Addresses could be async (Addressables)\n        const address = [];\n        if (filter.address) {\n            if (Array.isArray(filter.address)) {\n                for (const addr of filter.address) {\n                    address.push(this._getAddress(addr));\n                }\n            }\n            else {\n                address.push(this._getAddress(filter.address));\n            }\n        }\n        const zone = getZoneFromNodeLocation(filter.nodeLocation);\n        let fromBlock = undefined;\n        if ('fromBlock' in filter) {\n            fromBlock = this._getBlockTag(toShard(zone), filter.fromBlock);\n        }\n        let toBlock = undefined;\n        if ('toBlock' in filter) {\n            toBlock = this._getBlockTag(toShard(zone), filter.toBlock);\n        }\n        let nodeLocation = undefined;\n        if (filter.nodeLocation) {\n            nodeLocation = filter.nodeLocation;\n        }\n        if (address.filter((a) => typeof a !== 'string').length ||\n            (fromBlock != null && typeof fromBlock !== 'string') ||\n            (toBlock != null && typeof toBlock !== 'string')) {\n            return Promise.all([Promise.all(address), fromBlock, toBlock, nodeLocation]).then((result) => {\n                return resolve(result[0], result[1], result[2], result[3]);\n            });\n        }\n        return resolve(address, fromBlock, toBlock, nodeLocation);\n    }\n    /**\n     * Returns or resovles to a transaction for `request`, resolving any {@link Addressable | **Addressable**} and\n     * returning if already a valid transaction.\n     *\n     * @ignore\n     * @param {PerformActionTransaction} _request - The transaction to normalize.\n     * @returns {PerformActionTransaction | Promise<PerformActionTransaction>} A promise that resolves to a valid\n     *   transaction.\n     */\n    _getTransactionRequest(_request) {\n        const request = copyRequest(_request);\n        const promises = [];\n        ['to', 'from', 'inputs', 'outputs'].forEach((key) => {\n            if (request[key] == null) {\n                return;\n            }\n            const addr = Array.isArray(request[key])\n                ? 'address' in request[key][0]\n                    ? request[key].map((it) => it.address)\n                    : request[key].map((it) => computeAddress(it.pubkey))\n                : resolveAddress(request[key]);\n            if (isPromise(addr)) {\n                if (Array.isArray(addr)) {\n                    for (let i = 0; i < addr.length; i++) {\n                        promises.push((async function () {\n                            request[key][i].address = await addr[i];\n                        })());\n                    }\n                }\n                else {\n                    promises.push((async function () {\n                        request[key] = await addr;\n                    })());\n                }\n            }\n            else {\n                request[key] = addr;\n            }\n        });\n        if (request.blockTag != null) {\n            const blockTag = this._getBlockTag(toShard(request.chainId.toString()), request.blockTag);\n            if (isPromise(blockTag)) {\n                promises.push((async function () {\n                    request.blockTag = await blockTag;\n                })());\n            }\n            else {\n                request.blockTag = blockTag;\n            }\n        }\n        if (promises.length) {\n            return (async function () {\n                await Promise.all(promises);\n                return request;\n            })();\n        }\n        return request;\n    }\n    async getNetwork() {\n        // No explicit network was set and this is our first time\n        if (this.#networkPromise == null) {\n            // Detect the current network (shared with all calls)\n            const detectNetwork = (async () => {\n                try {\n                    const network = await this._detectNetwork();\n                    this.emit('network', undefined, network, null);\n                    return network;\n                }\n                catch (error) {\n                    if (this.#networkPromise === detectNetwork) {\n                        this.#networkPromise = null;\n                    }\n                    throw error;\n                }\n            })();\n            this.#networkPromise = detectNetwork;\n            return (await detectNetwork).clone();\n        }\n        const networkPromise = this.#networkPromise;\n        const [expected, actual] = await Promise.all([\n            networkPromise,\n            this._detectNetwork(), // The actual connected network\n        ]);\n        if (expected.chainId !== actual.chainId) {\n            if (this.#anyNetwork) {\n                // The \"any\" network can change, so notify listeners\n                this.emit('network', undefined, actual, expected);\n                // Update the network if something else hasn't already changed it\n                if (this.#networkPromise === networkPromise) {\n                    this.#networkPromise = Promise.resolve(actual);\n                }\n            }\n            else {\n                // Otherwise, we do not allow changes to the underlying network\n                assert(false, `network changed: ${expected.chainId} => ${actual.chainId} `, 'NETWORK_ERROR', {\n                    event: 'changed',\n                });\n            }\n        }\n        return expected.clone();\n    }\n    async _getRunningLocations(shard, now) {\n        now = now ? now : false;\n        return await this.#perform(shard\n            ? { method: 'getRunningLocations', shard: shard, now: now }\n            : { method: 'getRunningLocations', now: now });\n    }\n    async getRunningLocations(shard) {\n        return await this._getRunningLocations(shard);\n    }\n    async getProtocolTrieExpansionCount(shard) {\n        return await this.#perform({ method: 'getProtocolTrieExpansionCount', shard: shard });\n    }\n    async getFeeData(zone, txType = true) {\n        const getFeeDataFunc = async () => {\n            const { gasPrice, minerTip } = await resolveProperties({\n                gasPrice: (async () => {\n                    try {\n                        const value = await this.#perform({ method: 'getGasPrice', txType, zone: zone });\n                        return getBigInt(value, '%response') * BigInt(Math.pow(10, 9));\n                    }\n                    catch (error) {\n                        console.log(error);\n                    }\n                    return null;\n                })(),\n                minerTip: (async () => {\n                    try {\n                        const value = txType ? await this.#perform({ method: 'getMinerTip', zone: zone }) : 0;\n                        return getBigInt(value, '%response') * BigInt(Math.pow(10, 9));\n                        // eslint-disable-next-line no-empty\n                    }\n                    catch (error) { }\n                    return null;\n                })(),\n            });\n            if (gasPrice == null) {\n                throw new Error('could not determine gasPrice');\n            }\n            let baseMinerTip = null;\n            // These are the recommended EIP-1559 heuristics for fee data\n            baseMinerTip = minerTip != null ? minerTip : BigInt('1000000000');\n            return new FeeData(gasPrice, baseMinerTip);\n        };\n        return await getFeeDataFunc();\n    }\n    async estimateGas(_tx) {\n        let tx = this._getTransactionRequest(_tx);\n        if (isPromise(tx)) {\n            tx = await tx;\n        }\n        const zone = await this.zoneFromAddress(addressFromTransactionRequest(tx));\n        return (getBigInt(await this.#perform({\n            method: 'estimateGas',\n            transaction: tx,\n            zone: zone,\n        }), '%response') * BigInt(2));\n    }\n    async createAccessList(_tx) {\n        let tx = this._getTransactionRequest(_tx);\n        if (isPromise(tx)) {\n            tx = await tx;\n        }\n        const zone = await this.zoneFromAddress(addressFromTransactionRequest(tx));\n        return (await this.#perform({\n            method: 'createAccessList',\n            transaction: tx,\n            zone: zone,\n        })).accessList;\n    }\n    // TODO: `attempt` is not used, remove or re-write\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async #call(tx, blockTag, attempt, zone) {\n        // This came in as a PerformActionTransaction, so to/from are safe; we can cast\n        const transaction = copyRequest(tx);\n        return hexlify(await this._perform({ method: 'call', transaction, blockTag, zone }));\n    }\n    // TODO: `shard` is not used, remove or re-write\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async #checkNetwork(promise, shard) {\n        const { value } = await resolveProperties({\n            network: this.getNetwork(),\n            value: promise,\n        });\n        return value;\n    }\n    async call(_tx) {\n        const zone = await this.zoneFromAddress(addressFromTransactionRequest(_tx));\n        const shard = toShard(zone);\n        const { tx, blockTag } = await resolveProperties({\n            tx: this._getTransactionRequest(_tx),\n            blockTag: this._getBlockTag(shard, _tx.blockTag),\n        });\n        tx.accessList = (await this.createAccessList(tx)).map((it) => {\n            it.address = formatMixedCaseChecksumAddress(it.address);\n            return it;\n        });\n        return await this.#checkNetwork(this.#call(tx, blockTag, -1, zone), shard);\n    }\n    // Account\n    async #getAccountValue(request, _address, _blockTag) {\n        let address = this._getAddress(_address);\n        const zone = await this.zoneFromAddress(_address);\n        const shard = toShard(zone);\n        let blockTag = this._getBlockTag(shard, _blockTag);\n        if (typeof address !== 'string' || typeof blockTag !== 'string') {\n            [address, blockTag] = await Promise.all([address, blockTag]);\n        }\n        return await this.#checkNetwork(this.#perform(Object.assign(request, { address, blockTag, zone: zone })), shard);\n    }\n    async getBalance(address, blockTag) {\n        return getBigInt(await this.#getAccountValue({ method: 'getBalance' }, address, blockTag), '%response');\n    }\n    async getOutpointsByAddress(address) {\n        const outpointsObj = await this.#getAccountValue({ method: 'getOutpointsByAddress' }, address, 'latest');\n        // Convert the object to an array of Outpoint objects\n        return Object.values(outpointsObj).map((outpoint) => ({\n            txhash: outpoint.TxHash,\n            index: outpoint.Index,\n            denomination: outpoint.Denomination,\n        }));\n    }\n    async getTransactionCount(address, blockTag) {\n        return getNumber(await this.#getAccountValue({ method: 'getTransactionCount' }, address, blockTag), '%response');\n    }\n    async getCode(address, blockTag) {\n        return hexlify(await this.#getAccountValue({ method: 'getCode' }, address, blockTag));\n    }\n    async getStorage(address, _position, blockTag) {\n        const position = getBigInt(_position, 'position');\n        return hexlify(await this.#getAccountValue({ method: 'getStorage', position }, address, blockTag));\n    }\n    async getPendingHeader() {\n        return await this.#perform({ method: 'getPendingHeader' });\n    }\n    async getTxPoolContent(zone) {\n        return await this.#perform({ method: 'getTxPoolContent', zone: zone });\n    }\n    async txPoolInspect(zone) {\n        return await this.#perform({ method: 'txPoolInspect', zone: zone });\n    }\n    // Write\n    async broadcastTransaction(zone, signedTx) {\n        const type = decodeProtoTransaction(getBytes(signedTx)).type;\n        try {\n            const { blockNumber, hash, network } = await resolveProperties({\n                blockNumber: this.getBlockNumber(toShard(zone)),\n                hash: this._perform({\n                    method: 'broadcastTransaction',\n                    signedTransaction: signedTx,\n                    zone: zone,\n                }),\n                network: this.getNetwork(),\n            });\n            const tx = type == 2 ? QiTransaction.from(signedTx) : QuaiTransaction.from(signedTx);\n            const txObj = tx.toJSON();\n            this.#validateTransactionHash(tx.hash || '', hash);\n            const wrappedTx = this._wrapTransactionResponse(txObj, network);\n            return wrappedTx.replaceableTransaction(blockNumber);\n        }\n        catch (error) {\n            console.error('Error in broadcastTransaction:', error);\n            throw error;\n        }\n    }\n    #validateTransactionHash(computedHash, nodehash) {\n        if (computedHash !== nodehash) {\n            throw new Error(`Transaction hash mismatch: ${computedHash} !== ${nodehash}`);\n        }\n    }\n    validateUrl(url) {\n        const urlPattern = /^(https?):\\/\\/[a-zA-Z0-9.-]+(:\\d+)?$/;\n        if (!urlPattern.test(url)) {\n            let errorMessage = 'Invalid URL: ';\n            if (!/^https?:\\/\\//.test(url)) {\n                errorMessage += 'URL must start with http:// or https://. ';\n            }\n            if (url.endsWith('/')) {\n                errorMessage += 'URL should not end with a /. ';\n            }\n            if (/\\/[^/]+/.test(url)) {\n                errorMessage += 'URL should not contain a path, query string, or fragment. ';\n            }\n            throw new Error(errorMessage.trim());\n        }\n    }\n    async #getBlock(shard, block, includeTransactions) {\n        if (isHexString(block, 32)) {\n            return await this.#perform({\n                method: 'getBlock',\n                blockHash: block,\n                includeTransactions,\n                shard: shard,\n            });\n        }\n        let blockTag = this._getBlockTag(shard, block);\n        if (typeof blockTag !== 'string') {\n            blockTag = await blockTag;\n        }\n        return await this.#perform({\n            method: 'getBlock',\n            blockTag,\n            includeTransactions,\n            shard: shard,\n        });\n    }\n    // Queries\n    async getBlock(shard, block, prefetchTxs) {\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#getBlock(shard, block, !!prefetchTxs),\n        });\n        if (params == null) {\n            return null;\n        }\n        return this._wrapBlock(params, network);\n    }\n    async getTransaction(hash) {\n        const zone = toZone(this.shardFromHash(hash));\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform({ method: 'getTransaction', hash, zone: zone }),\n        });\n        if (params == null) {\n            return null;\n        }\n        return this._wrapTransactionResponse(params, network);\n    }\n    async getTransactionReceipt(hash) {\n        const zone = toZone(this.shardFromHash(hash));\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform({ method: 'getTransactionReceipt', hash, zone: zone }),\n        });\n        if (params == null) {\n            return null;\n        }\n        // Some backends did not backfill the effectiveGasPrice in to old transactions\n        // in the receipt, so we look it up manually and inject it.\n        if (params.gasPrice == null && params.effectiveGasPrice == null) {\n            const tx = await this.#perform({ method: 'getTransaction', hash, zone: zone });\n            if (tx == null) {\n                throw new Error('report this; could not find tx or effectiveGasPrice');\n            }\n            params.effectiveGasPrice = tx.gasPrice;\n        }\n        return this._wrapTransactionReceipt(params, network);\n    }\n    async getTransactionResult(hash) {\n        const zone = toZone(this.shardFromHash(hash));\n        const { result } = await resolveProperties({\n            network: this.getNetwork(),\n            result: this.#perform({ method: 'getTransactionResult', hash, zone: zone }),\n        });\n        if (result == null) {\n            return null;\n        }\n        return hexlify(result);\n    }\n    // Bloom-filter Queries\n    async getLogs(_filter) {\n        let filter = this._getFilter(_filter);\n        if (isPromise(filter)) {\n            filter = await filter;\n        }\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform({\n                method: 'getLogs',\n                filter,\n                zone: getZoneFromNodeLocation(filter.nodeLocation),\n            }),\n        });\n        return params.map((p) => this._wrapLog(p, network));\n    }\n    /**\n     * @ignore\n     */\n    // TODO: unsupported, remove?\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _getProvider(chainId) {\n        assert(false, 'provider cannot connect to target network', 'UNSUPPORTED_OPERATION', {\n            operation: '_getProvider()',\n        });\n    }\n    async waitForTransaction(hash, _confirms, timeout) {\n        const zone = this.zoneFromHash(hash);\n        const confirms = _confirms != null ? _confirms : 1;\n        if (confirms === 0) {\n            return this.getTransactionReceipt(hash);\n        }\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve, reject) => {\n            let timer = null;\n            const listener = async (blockNumber) => {\n                try {\n                    const receipt = await this.getTransactionReceipt(hash);\n                    if (receipt != null) {\n                        if (blockNumber - receipt.blockNumber + 1 >= confirms) {\n                            resolve(receipt);\n                            //this.off(\"block\", listener);\n                            if (timer) {\n                                clearTimeout(timer);\n                                timer = null;\n                            }\n                            return;\n                        }\n                    }\n                }\n                catch (error) {\n                    console.log('Error occured while waiting for transaction:', error);\n                }\n                this.once('block', listener, zone);\n            };\n            if (timeout != null) {\n                timer = setTimeout(() => {\n                    if (timer == null) {\n                        return;\n                    }\n                    timer = null;\n                    this.off('block', listener, zone);\n                    reject(makeError('timeout', 'TIMEOUT', { reason: 'timeout' }));\n                }, timeout);\n            }\n            listener(await this.getBlockNumber(toShard(zone)));\n        });\n    }\n    // TODO: not implemented yet\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async waitForBlock(shard, blockTag) {\n        assert(false, 'not implemented yet', 'NOT_IMPLEMENTED', {\n            operation: 'waitForBlock',\n        });\n    }\n    /**\n     * Clear a timer created using the {@link AbstractProvider._setTimeout | **_setTimeout**} method.\n     *\n     * @param {number} timerId - The ID of the timer to clear.\n     */\n    _clearTimeout(timerId) {\n        const timer = this.#timers.get(timerId);\n        if (!timer) {\n            return;\n        }\n        if (timer.timer) {\n            clearTimeout(timer.timer);\n        }\n        this.#timers.delete(timerId);\n    }\n    /**\n     * Create a timer that will execute `func` after at least `timeout` (in ms). If `timeout` is unspecified, then\n     * `func` will execute in the next event loop.\n     *\n     * {@link AbstractProvider.pause | **Pausing**} the provider will pause any associated timers.\n     *\n     * @ignore\n     * @ignore\n     * @param {() => void} _func - The function to execute.\n     * @param {number} [timeout] - The time to wait before executing `func`.\n     * @returns {number} The ID of the timer.\n     */\n    _setTimeout(_func, timeout) {\n        if (timeout == null) {\n            timeout = 0;\n        }\n        const timerId = this.#nextTimer++;\n        const func = () => {\n            this.#timers.delete(timerId);\n            _func();\n        };\n        if (this.paused) {\n            this.#timers.set(timerId, { timer: null, func, time: timeout });\n        }\n        else {\n            const timer = setTimeout(func, timeout);\n            this.#timers.set(timerId, { timer, func, time: getTime() });\n        }\n        return timerId;\n    }\n    /**\n     * Perform `func` on each subscriber.\n     *\n     * @ignore\n     * @param {(s: Subscriber) => void} func - The function to perform.\n     */\n    _forEachSubscriber(func) {\n        for (const sub of this.#subs.values()) {\n            func(sub.subscriber);\n        }\n    }\n    /**\n     * Sub-classes may override this to customize subscription implementations.\n     *\n     * @ignore\n     * @param {Subscription} sub - The subscription to get the subscriber for.\n     */\n    _getSubscriber(sub) {\n        switch (sub.type) {\n            case 'debug':\n            case 'error':\n            case 'network':\n                return new UnmanagedSubscriber(sub.type);\n            case 'block': {\n                const subscriber = new PollingBlockSubscriber(this, sub.zone);\n                subscriber.pollingInterval = this.pollingInterval;\n                return subscriber;\n            }\n            //! TODO: implement this for quais\n            // case \"safe\": case \"finalized\":\n            //     return new PollingBlockTagSubscriber(this, sub.type);\n            case 'event':\n                return new PollingEventSubscriber(this, sub.filter);\n            case 'transaction':\n                return new PollingTransactionSubscriber(this, sub.hash, sub.zone);\n            case 'orphan':\n                return new PollingOrphanSubscriber(this, sub.filter, sub.zone);\n        }\n        throw new Error(`unsupported event: ${sub.type}`);\n    }\n    /**\n     * If a {@link Subscriber | **Subscriber**} fails and needs to replace itself, this method may be used.\n     *\n     * For example, this is used for providers when using the `quai_getFilterChanges` method, which can return null if\n     * state filters are not supported by the backend, allowing the Subscriber to swap in a `PollingEventSubscriber`.\n     *\n     * @ignore\n     * @param {Subscriber} oldSub - The subscriber to replace.\n     * @param {Subscriber} newSub - The new subscriber.\n     */\n    _recoverSubscriber(oldSub, newSub) {\n        for (const sub of this.#subs.values()) {\n            if (sub.subscriber === oldSub) {\n                if (sub.started) {\n                    sub.subscriber.stop();\n                }\n                sub.subscriber = newSub;\n                if (sub.started) {\n                    newSub.start();\n                }\n                if (this.#pausedState != null) {\n                    newSub.pause(this.#pausedState);\n                }\n                break;\n            }\n        }\n    }\n    async #hasSub(event, emitArgs, zone) {\n        let sub = await getSubscription(event, zone);\n        // This is a log that is removing an existing log; we actually want\n        // to emit an orphan event for the removed log\n        if (sub.type === 'event' && emitArgs && emitArgs.length > 0 && emitArgs[0].removed === true) {\n            sub = await getSubscription({ orphan: 'drop-log', log: emitArgs[0] }, zone);\n        }\n        return this.#subs.get(sub.tag) || null;\n    }\n    async #getSub(event, zone) {\n        const subscription = await getSubscription(event, zone);\n        // Prevent tampering with our tag in any subclass' _getSubscriber\n        const tag = subscription.tag;\n        let sub = this.#subs.get(tag);\n        if (!sub) {\n            const subscriber = this._getSubscriber(subscription);\n            const addressableMap = new WeakMap();\n            const nameMap = new Map();\n            sub = { subscriber, tag, addressableMap, nameMap, started: false, listeners: [], zone: subscription.zone };\n            this.#subs.set(tag, sub);\n        }\n        return sub;\n    }\n    async on(event, listener, zone) {\n        const sub = await this.#getSub(event, zone);\n        sub.listeners.push({ listener, once: false });\n        if (!sub.started) {\n            sub.subscriber.start();\n            sub.started = true;\n            if (this.#pausedState != null) {\n                sub.subscriber.pause(this.#pausedState);\n            }\n        }\n        return this;\n    }\n    async once(event, listener, zone) {\n        const sub = await this.#getSub(event, zone);\n        sub.listeners.push({ listener, once: true });\n        if (!sub.started) {\n            sub.subscriber.start();\n            sub.started = true;\n            if (this.#pausedState != null) {\n                sub.subscriber.pause(this.#pausedState);\n            }\n        }\n        return this;\n    }\n    async emit(event, zone, ...args) {\n        const sub = await this.#hasSub(event, args, zone);\n        // If there is not subscription or if a recent emit removed\n        // the last of them (which also deleted the sub) do nothing\n        if (!sub || sub.listeners.length === 0) {\n            return false;\n        }\n        const count = sub.listeners.length;\n        sub.listeners = sub.listeners.filter(({ listener, once }) => {\n            const payload = new EventPayload(this, once ? null : listener, event);\n            try {\n                listener.call(this, ...args, payload);\n                // eslint-disable-next-line no-empty\n            }\n            catch (error) { }\n            return !once;\n        });\n        if (sub.listeners.length === 0) {\n            if (sub.started) {\n                sub.subscriber.stop();\n            }\n            this.#subs.delete(sub.tag);\n        }\n        return count > 0;\n    }\n    async listenerCount(event) {\n        if (event) {\n            const sub = await this.#hasSub(event);\n            if (!sub) {\n                return 0;\n            }\n            return sub.listeners.length;\n        }\n        let total = 0;\n        for (const { listeners } of this.#subs.values()) {\n            total += listeners.length;\n        }\n        return total;\n    }\n    async listeners(event) {\n        if (event) {\n            const sub = await this.#hasSub(event);\n            if (!sub) {\n                return [];\n            }\n            return sub.listeners.map(({ listener }) => listener);\n        }\n        let result = [];\n        for (const { listeners } of this.#subs.values()) {\n            result = result.concat(listeners.map(({ listener }) => listener));\n        }\n        return result;\n    }\n    async off(event, listener, zone) {\n        const sub = await this.#hasSub(event, [], zone);\n        if (!sub) {\n            return this;\n        }\n        if (listener) {\n            const index = sub.listeners.map(({ listener }) => listener).indexOf(listener);\n            if (index >= 0) {\n                sub.listeners.splice(index, 1);\n            }\n        }\n        if (!listener || sub.listeners.length === 0) {\n            if (sub.started) {\n                sub.subscriber.stop();\n            }\n            this.#subs.delete(sub.tag);\n        }\n        return this;\n    }\n    async removeAllListeners(event) {\n        if (event) {\n            const { tag, started, subscriber } = await this.#getSub(event);\n            if (started) {\n                subscriber.stop();\n            }\n            this.#subs.delete(tag);\n        }\n        else {\n            for (const [tag, { started, subscriber }] of this.#subs) {\n                if (started) {\n                    subscriber.stop();\n                }\n                this.#subs.delete(tag);\n            }\n        }\n        return this;\n    }\n    // Alias for \"on\"\n    async addListener(event, listener, zone) {\n        return await this.on(event, listener, zone);\n    }\n    // Alias for \"off\"\n    async removeListener(event, listener, zone) {\n        return this.off(event, listener, zone);\n    }\n    /**\n     * If this provider has been destroyed using the {@link AbstractProvider.destroy | **destroy**} method.\n     *\n     * Once destroyed, all resources are reclaimed, internal event loops and timers are cleaned up and no further\n     * requests may be sent to the provider.\n     */\n    get destroyed() {\n        return this.#destroyed;\n    }\n    /**\n     * Sub-classes may use this to shutdown any sockets or release their resources and reject any pending requests.\n     *\n     * Sub-classes **must** call `super.destroy()`.\n     */\n    destroy() {\n        // Stop all listeners\n        this.removeAllListeners();\n        // Shut down all tiemrs\n        for (const timerId of this.#timers.keys()) {\n            this._clearTimeout(timerId);\n        }\n        this.#destroyed = true;\n    }\n    /**\n     * Whether the provider is currently paused.\n     *\n     * A paused provider will not emit any events, and generally should not make any requests to the network, but that\n     * is up to sub-classes to manage.\n     *\n     * Setting `paused = true` is identical to calling `.pause(false)`, which will buffer any events that occur while\n     * paused until the provider is unpaused.\n     *\n     * @returns {boolean} Whether the provider is paused.\n     */\n    get paused() {\n        return this.#pausedState != null;\n    }\n    set paused(pause) {\n        if (!!pause === this.paused) {\n            return;\n        }\n        if (this.paused) {\n            this.resume();\n        }\n        else {\n            this.pause(false);\n        }\n    }\n    /**\n     * Pause the provider. If `dropWhilePaused`, any events that occur while paused are dropped, otherwise all events\n     * will be emitted once the provider is unpaused.\n     *\n     * @param {boolean} [dropWhilePaused] - Whether to drop events while paused.\n     */\n    pause(dropWhilePaused) {\n        this.#lastBlockNumber = -1;\n        if (this.#pausedState != null) {\n            if (this.#pausedState == !!dropWhilePaused) {\n                return;\n            }\n            assert(false, 'cannot change pause type; resume first', 'UNSUPPORTED_OPERATION', {\n                operation: 'pause',\n            });\n        }\n        this._forEachSubscriber((s) => s.pause(dropWhilePaused));\n        this.#pausedState = !!dropWhilePaused;\n        for (const timer of this.#timers.values()) {\n            // Clear the timer\n            if (timer.timer) {\n                clearTimeout(timer.timer);\n            }\n            // Remaining time needed for when we become unpaused\n            timer.time = getTime() - timer.time;\n        }\n    }\n    /**\n     * Resume the provider.\n     */\n    resume() {\n        if (this.#pausedState == null) {\n            return;\n        }\n        this._forEachSubscriber((s) => s.resume());\n        this.#pausedState = null;\n        for (const timer of this.#timers.values()) {\n            // Remaining time when we were paused\n            let timeout = timer.time;\n            if (timeout < 0) {\n                timeout = 0;\n            }\n            // Start time (in cause paused, so we con compute remaininf time)\n            timer.time = getTime();\n            // Start the timer\n            setTimeout(timer.func, timeout);\n        }\n    }\n}\n//# sourceMappingURL=abstract-provider.js.map","import { isError } from '../utils/index.js';\nimport { PollingEventSubscriber } from './subscriber-polling.js';\nimport { getZoneFromEventFilter } from './provider.js';\n/**\n * Deep copies an object.\n *\n * @param {any} obj - The object to copy.\n * @returns {any} A deep copy of the object.\n */\nfunction copy(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\n/**\n * Some backends support subscribing to events using a Filter ID.\n *\n * When subscribing with this technique, the node issues a unique **Filter ID**. At this point the node dedicates\n * resources to the filter, so that periodic calls to follow up on the **Filter ID** will receive any events since the\n * last call.\n *\n * @category Providers\n */\nexport class FilterIdSubscriber {\n    #provider;\n    #filterIdPromise;\n    #poller;\n    #running;\n    #network;\n    #hault;\n    zone;\n    /**\n     * @ignore Creates A new **FilterIdSubscriber** which will use {@link FilterIdSubscriber._subscribe | **_subscribe**}\n     *   and {@link FilterIdSubscriber._emitResults | **_emitResults**} to setup the subscription and provide the event\n     *   to the `provider`.\n     * @param {JsonRpcApiProvider<any>} provider - The provider to use.\n     */\n    constructor(provider, zone) {\n        this.#provider = provider;\n        this.#filterIdPromise = null;\n        this.#poller = this.#poll.bind(this);\n        this.#running = false;\n        this.#network = null;\n        this.#hault = false;\n        this.zone = zone;\n    }\n    /**\n     * Sub-classes **must** override this to begin the subscription.\n     *\n     * @ignore\n     * @param {JsonRpcApiProvider} provider - The provider to use.\n     * @returns {Promise<string>} A promise that resolves to the subscription ID.\n     * @throws {Error} If the method is not overridden.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _subscribe(provider) {\n        throw new Error('subclasses must override this');\n    }\n    /**\n     * Sub-classes **must** override this to handle the events.\n     *\n     * @ignore\n     * @param {AbstractProvider} provider - The provider to use.\n     * @param {any[]} result - The results to handle.\n     * @returns {Promise<void>} A promise that resolves when the results are handled.\n     * @throws {Error} If the method is not overridden.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _emitResults(provider, result) {\n        throw new Error('subclasses must override this');\n    }\n    /**\n     * Sub-classes **must** override this to handle recovery on errors.\n     *\n     * @ignore\n     * @param {AbstractProvider} provider - The provider to use.\n     * @returns {Subscriber} The recovered subscriber.\n     * @throws {Error} If the method is not overridden.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _recover(provider) {\n        throw new Error('subclasses must override this');\n    }\n    /**\n     * Polls for new events.\n     *\n     * @ignore\n     * @param {number} blockNumber - The block number to poll from.\n     * @returns {Promise<void>} A promise that resolves when polling is complete.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async #poll(blockNumber) {\n        try {\n            // Subscribe if necessary\n            if (this.#filterIdPromise == null) {\n                this.#filterIdPromise = this._subscribe(this.#provider);\n            }\n            // Get the Filter ID\n            let filterId = null;\n            try {\n                filterId = await this.#filterIdPromise;\n            }\n            catch (error) {\n                if (!isError(error, 'UNSUPPORTED_OPERATION') || error.operation !== 'quai_newFilter') {\n                    throw error;\n                }\n            }\n            // The backend does not support Filter ID; downgrade to\n            // polling\n            if (filterId == null) {\n                this.#filterIdPromise = null;\n                this.#provider._recoverSubscriber(this, this._recover(this.#provider));\n                return;\n            }\n            const network = await this.#provider.getNetwork();\n            if (!this.#network) {\n                this.#network = network;\n            }\n            if (this.#network.chainId !== network.chainId) {\n                throw new Error('chain changed');\n            }\n            if (this.#hault) {\n                return;\n            }\n            const result = await this.#provider.send('quai_getFilterChanges', [filterId]);\n            await this._emitResults(this.#provider, result);\n        }\n        catch (error) {\n            console.log('@TODO', error);\n        }\n        this.#provider.once('block', this.#poller, this.zone);\n    }\n    /**\n     * Tears down the subscription.\n     *\n     * @ignore\n     */\n    #teardown() {\n        const filterIdPromise = this.#filterIdPromise;\n        if (filterIdPromise) {\n            this.#filterIdPromise = null;\n            filterIdPromise.then((filterId) => {\n                this.#provider.send('quai_uninstallFilter', [filterId]);\n            });\n        }\n    }\n    /**\n     * Starts the subscriber.\n     */\n    start() {\n        if (this.#running) {\n            return;\n        }\n        this.#running = true;\n        this.#poll(-2);\n    }\n    /**\n     * Stops the subscriber.\n     */\n    stop() {\n        if (!this.#running) {\n            return;\n        }\n        this.#running = false;\n        this.#hault = true;\n        this.#teardown();\n        this.#provider.off('block', this.#poller, this.zone);\n    }\n    /**\n     * Pauses the subscriber.\n     *\n     * @param {boolean} [dropWhilePaused] - Whether to drop the subscription while paused.\n     */\n    pause(dropWhilePaused) {\n        if (dropWhilePaused) {\n            this.#teardown();\n        }\n        this.#provider.off('block', this.#poller, this.zone);\n    }\n    /**\n     * Resumes the subscriber.\n     */\n    resume() {\n        this.start();\n    }\n}\n/**\n * A **FilterIdSubscriber** for receiving contract events.\n *\n * @category Providers\n */\nexport class FilterIdEventSubscriber extends FilterIdSubscriber {\n    #event;\n    /**\n     * @ignore Creates A new **FilterIdEventSubscriber** attached to `provider` listening for `filter`.\n     * @param {JsonRpcApiProvider<any>} provider - The provider to use.\n     * @param {EventFilter} filter - The event filter to use.\n     */\n    constructor(provider, filter) {\n        const zone = getZoneFromEventFilter(filter);\n        if (zone == null) {\n            throw new Error('Unable to determine zone for event filter');\n        }\n        super(provider, zone);\n        this.#event = copy(filter);\n    }\n    /**\n     * Recovers the subscriber.\n     *\n     * @ignore\n     * @param {AbstractProvider<any>} provider - The provider to use.\n     * @returns {Subscriber} The recovered subscriber.\n     */\n    _recover(provider) {\n        return new PollingEventSubscriber(provider, this.#event);\n    }\n    /**\n     * Subscribes to the event filter.\n     *\n     * @ignore\n     * @param {JsonRpcApiProvider<any>} provider - The provider to use.\n     * @returns {Promise<string>} A promise that resolves to the subscription ID.\n     */\n    async _subscribe(provider) {\n        const filterId = await provider.send('quai_newFilter', [this.#event]);\n        return filterId;\n    }\n    /**\n     * Emits the results of the event filter.\n     *\n     * @ignore\n     * @param {JsonRpcApiProvider<any>} provider - The provider to use.\n     * @param {any[]} results - The results to emit.\n     * @returns {Promise<void>} A promise that resolves when the results are emitted.\n     */\n    async _emitResults(provider, results) {\n        for (const result of results) {\n            provider.emit(this.#event, this.zone, provider._wrapLog(result, provider._network));\n        }\n    }\n}\n/**\n * A **FilterIdSubscriber** for receiving pending transactions events.\n *\n * @category Providers\n */\nexport class FilterIdPendingSubscriber extends FilterIdSubscriber {\n    /**\n     * Subscribes to the pending transactions filter.\n     *\n     * @ignore\n     * @param {JsonRpcApiProvider<any>} provider - The provider to use.\n     * @returns {Promise<string>} A promise that resolves to the subscription ID.\n     */\n    async _subscribe(provider) {\n        return await provider.send('quai_newPendingTransactionFilter', []);\n    }\n    /**\n     * Emits the results of the pending transactions filter.\n     *\n     * @ignore\n     * @param {JsonRpcApiProvider<any>} provider - The provider to use.\n     * @param {any[]} results - The results to emit.\n     * @returns {Promise<void>} A promise that resolves when the results are emitted.\n     */\n    async _emitResults(provider, results) {\n        for (const result of results) {\n            provider.emit('pending', this.zone, result);\n        }\n    }\n}\n//# sourceMappingURL=subscriber-filterid.js.map","/**\n * One of the most common ways to interact with the blockchain is by a node running a JSON-RPC interface which can be\n * connected to, based on the transport, using:\n *\n * - HTTP or HTTPS - {@link JsonRpcProvider | **JsonRpcProvider**}\n * - WebSocket - {@link WebSocketProvider | **WebSocketProvider**}\n * - IPC - {@link IpcSocketProvider | **IpcSocketProvider**}\n */\n// @TODO:\n// - Add the batching API\n// https://playground.open-rpc.org/?schemaUrl=https://raw.githubusercontent.com/ethereum/eth1.0-apis/assembled-spec/openrpc.json&uiSchema%5BappBar%5D%5Bui:splitView%5D=true&uiSchema%5BappBar%5D%5Bui:input%5D=false&uiSchema%5BappBar%5D%5Bui:examplesDropdown%5D=false\nimport { AbiCoder } from '../abi/index.js';\nimport { getAddress, resolveAddress } from '../address/index.js';\nimport { accessListify } from '../transaction/index.js';\nimport { getBigInt, hexlify, isHexString, toQuantity, makeError, assert, assertArgument, isError, FetchRequest, defineProperties, resolveProperties, } from '../utils/index.js';\nimport { AbstractProvider, UnmanagedSubscriber } from './abstract-provider.js';\nimport { Network } from './network.js';\nimport { FilterIdEventSubscriber, FilterIdPendingSubscriber } from './subscriber-filterid.js';\nimport { Shard, toShard, toZone } from '../constants/index.js';\nimport { TypedDataEncoder } from '../hash/index.js';\nimport { AbstractSigner } from '../signers/index.js';\nimport { toUtf8Bytes } from '../encoding/index.js';\nimport { addressFromTransactionRequest, zoneFromHash } from './provider.js';\nconst Primitive = 'bigint,boolean,function,number,string,symbol'.split(/,/g);\n/**\n * Deeply copies a value.\n *\n * @ignore\n * @param {T} value - The value to copy.\n * @returns {T} The copied value.\n */\nfunction deepCopy(value) {\n    if (value == null || Primitive.indexOf(typeof value) >= 0) {\n        return value;\n    }\n    // Keep any Addressable\n    if (typeof value.getAddress === 'function') {\n        return value;\n    }\n    if (Array.isArray(value)) {\n        return value.map(deepCopy);\n    }\n    if (typeof value === 'object') {\n        return Object.keys(value).reduce((accum, key) => {\n            accum[key] = value[key];\n            return accum;\n        }, {});\n    }\n    throw new Error(`should not happen: ${value} (${typeof value})`);\n}\n/**\n * Stalls execution for a specified duration.\n *\n * @ignore\n * @param {number} duration - The duration to stall in milliseconds.\n * @returns {Promise<void>} A promise that resolves after the duration.\n */\nfunction stall(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\nconst defaultOptions = {\n    staticNetwork: null,\n    batchStallTime: 10,\n    batchMaxSize: 1 << 20,\n    batchMaxCount: 100,\n    cacheTimeout: 250,\n    usePathing: false,\n};\n// @TODO: Unchecked Signers\n/**\n * A signer that uses JSON-RPC to sign transactions and messages.\n *\n * @category Providers\n */\nexport class JsonRpcSigner extends AbstractSigner {\n    address;\n    /**\n     * Creates a new JsonRpcSigner instance.\n     *\n     * @param {JsonRpcApiProvider<any>} provider - The JSON-RPC provider.\n     * @param {string} address - The address of the signer.\n     */\n    constructor(provider, address) {\n        super(provider);\n        address = getAddress(address);\n        defineProperties(this, { address });\n    }\n    /**\n     * Connects the signer to a provider.\n     *\n     * @param {null | Provider} provider - The provider to connect to.\n     * @returns {Signer} The connected signer.\n     * @throws {Error} If the signer cannot be reconnected.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    connect(provider) {\n        assert(false, 'cannot reconnect JsonRpcSigner', 'UNSUPPORTED_OPERATION', {\n            operation: 'signer.connect',\n        });\n    }\n    /**\n     * Gets the address of the signer.\n     *\n     * @returns {Promise<string>} The address of the signer.\n     */\n    async getAddress() {\n        return this.address;\n    }\n    /**\n     * Populates a Quai transaction.\n     *\n     * @ignore\n     * @param {QuaiTransactionRequest} tx - The transaction request.\n     * @returns {Promise<QuaiTransactionLike>} The populated transaction.\n     */\n    async populateQuaiTransaction(tx) {\n        return (await this.populateCall(tx));\n    }\n    /**\n     * Sends an unchecked transaction.\n     *\n     * @ignore\n     * @param {TransactionRequest} _tx - The transaction request.\n     * @returns {Promise<string>} The transaction hash.\n     */\n    async sendUncheckedTransaction(_tx) {\n        const tx = deepCopy(_tx);\n        const promises = [];\n        if ('from' in tx) {\n            // Make sure the from matches the sender\n            if (tx.from) {\n                const _from = tx.from;\n                promises.push((async () => {\n                    const from = await resolveAddress(_from);\n                    assertArgument(from != null && from.toLowerCase() === this.address.toLowerCase(), 'from address mismatch', 'transaction', _tx);\n                    tx.from = from;\n                })());\n            }\n            else {\n                tx.from = this.address;\n            }\n            // The JSON-RPC for quai_sendTransaction uses 90000 gas; if the user\n            // wishes to use this, it is easy to specify explicitly, otherwise\n            // we look it up for them.\n            if (tx.gasLimit == null) {\n                promises.push((async () => {\n                    tx.gasLimit = await this.provider.estimateGas({ ...tx, from: this.address });\n                })());\n            }\n            // The address may be an ENS name or Addressable\n            if (tx.to != null) {\n                const _to = tx.to;\n                promises.push((async () => {\n                    tx.to = await resolveAddress(_to);\n                })());\n            }\n        }\n        // Wait until all of our properties are filled in\n        if (promises.length) {\n            await Promise.all(promises);\n        }\n        const hexTx = this.provider.getRpcTransaction(tx);\n        return this.provider.send('quai_sendTransaction', [hexTx]);\n    }\n    /**\n     * Sends a transaction.\n     *\n     * @param {TransactionRequest} tx - The transaction request.\n     * @returns {Promise<TransactionResponse>} The transaction response.\n     * @throws {Error} If the transaction cannot be sent.\n     */\n    async sendTransaction(tx) {\n        const zone = await this.zoneFromAddress(addressFromTransactionRequest(tx));\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider.getBlockNumber(toShard(zone));\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(tx);\n        // Unfortunately, JSON-RPC only provides and opaque transaction hash\n        // for a response, and we need the actual transaction, so we poll\n        // for it; it should show up very quickly\n        return await new Promise((resolve, reject) => {\n            const timeouts = [1000, 100];\n            let invalids = 0;\n            const checkTx = async () => {\n                try {\n                    // Try getting the transaction\n                    const tx = await this.provider.getTransaction(hash);\n                    if (tx != null) {\n                        resolve(tx.replaceableTransaction(blockNumber));\n                        return;\n                    }\n                }\n                catch (error) {\n                    // If we were cancelled: stop polling.\n                    // If the data is bad: the node returns bad transactions\n                    // If the network changed: calling again will also fail\n                    // If unsupported: likely destroyed\n                    if (isError(error, 'CANCELLED') ||\n                        isError(error, 'BAD_DATA') ||\n                        isError(error, 'NETWORK_ERROR') ||\n                        isError(error, 'UNSUPPORTED_OPERATION')) {\n                        if (error.info == null) {\n                            error.info = {};\n                        }\n                        error.info.sendTransactionHash = hash;\n                        reject(error);\n                        return;\n                    }\n                    // Stop-gap for misbehaving backends; see #4513\n                    if (isError(error, 'INVALID_ARGUMENT')) {\n                        invalids++;\n                        if (error.info == null) {\n                            error.info = {};\n                        }\n                        error.info.sendTransactionHash = hash;\n                        if (invalids > 10) {\n                            reject(error);\n                            return;\n                        }\n                    }\n                    // Notify anyone that cares; but we will try again, since\n                    // it is likely an intermittent service error\n                    this.provider.emit('error', zoneFromHash(hash), makeError('failed to fetch transation after sending (will try again)', 'UNKNOWN_ERROR', {\n                        error,\n                    }));\n                }\n                // Wait another 4 seconds\n                this.provider._setTimeout(() => {\n                    checkTx();\n                }, timeouts.pop() || 4000);\n            };\n            checkTx();\n        });\n    }\n    /**\n     * Signs a transaction.\n     *\n     * @param {TransactionRequest} _tx - The transaction request.\n     * @returns {Promise<string>} The signed transaction.\n     * @throws {Error} If the transaction cannot be signed.\n     */\n    async signTransaction(_tx) {\n        const tx = deepCopy(_tx);\n        // QuaiTransactionRequest\n        if ('from' in tx) {\n            if (tx.from) {\n                const from = await resolveAddress(tx.from);\n                assertArgument(from != null && from.toLowerCase() === this.address.toLowerCase(), 'from address mismatch', 'transaction', _tx);\n                tx.from = from;\n            }\n            else {\n                tx.from = this.address;\n            }\n        }\n        else {\n            throw new Error('No QI signing implementation in provider-jsonrpc');\n        }\n        const hexTx = this.provider.getRpcTransaction(tx);\n        return await this.provider.send('quai_signTransaction', [hexTx]);\n    }\n    /**\n     * Signs a message.\n     *\n     * @param {string | Uint8Array} _message - The message to sign.\n     * @returns {Promise<string>} The signed message.\n     */\n    async signMessage(_message) {\n        const message = typeof _message === 'string' ? toUtf8Bytes(_message) : _message;\n        return await this.provider.send('personal_sign', [hexlify(message), this.address.toLowerCase()]);\n    }\n    /**\n     * Signs typed data.\n     *\n     * @param {TypedDataDomain} domain - The domain of the typed data.\n     * @param {Record<string, TypedDataField[]>} types - The types of the typed data.\n     * @param {Record<string, any>} _value - The value of the typed data.\n     * @returns {Promise<string>} The signed typed data.\n     */\n    async signTypedData(domain, types, _value) {\n        const value = deepCopy(_value);\n        return await this.provider.send('quai_signTypedData_v4', [\n            this.address.toLowerCase(),\n            JSON.stringify(TypedDataEncoder.getPayload(domain, types, value)),\n        ]);\n    }\n    /**\n     * Unlocks the account.\n     *\n     * @param {string} password - The password to unlock the account.\n     * @returns {Promise<boolean>} True if the account is unlocked, false otherwise.\n     */\n    async unlock(password) {\n        return this.provider.send('personal_unlockAccount', [this.address.toLowerCase(), password, null]);\n    }\n    /**\n     * Signs a message using the legacy method.\n     *\n     * @ignore\n     * @param {string | Uint8Array} _message - The message to sign.\n     * @returns {Promise<string>} The signed message.\n     */\n    async _legacySignMessage(_message) {\n        const message = typeof _message === 'string' ? toUtf8Bytes(_message) : _message;\n        return await this.provider.send('quai_sign', [this.address.toLowerCase(), hexlify(message)]);\n    }\n}\n/**\n * The JsonRpcApiProvider is an abstract class and **MUST** be sub-classed.\n *\n * It provides the base for all JSON-RPC-based Provider interaction.\n *\n * Sub-classing Notes:\n *\n * - A sub-class MUST override _send\n * - A sub-class MUST call the `_start()` method once connected\n *\n * @category Providers\n */\nexport class JsonRpcApiProvider extends AbstractProvider {\n    #options;\n    // The next ID to use for the JSON-RPC ID field\n    #nextId;\n    // Payloads are queued and triggered in batches using the drainTimer\n    #payloads;\n    #drainTimer;\n    #notReady;\n    #network;\n    #pendingDetectNetwork;\n    /**\n     * Schedules the draining of the payload queue.\n     *\n     * @ignore\n     */\n    #scheduleDrain() {\n        if (this.#drainTimer) {\n            return;\n        }\n        // If we aren't using batching, no harm in sending it immediately\n        const stallTime = this._getOption('batchMaxCount') === 1 ? 0 : this._getOption('batchStallTime');\n        this.#drainTimer = setTimeout(() => {\n            this.#drainTimer = null;\n            const payloads = this.#payloads;\n            this.#payloads = [];\n            while (payloads.length) {\n                // Create payload batches that satisfy our batch constraints\n                const batch = [payloads.shift()];\n                while (payloads.length) {\n                    if (batch.length === this.#options.batchMaxCount) {\n                        break;\n                    }\n                    batch.push(payloads.shift());\n                    const bytes = JSON.stringify(batch.map((p) => p.payload));\n                    if (bytes.length > this.#options.batchMaxSize) {\n                        payloads.unshift(batch.pop());\n                        break;\n                    }\n                }\n                // Process the result to each payload\n                (async () => {\n                    const payloadMap = new Map();\n                    const nowPayloadMap = new Map();\n                    for (let i = 0; i < batch.length; i++) {\n                        if (batch[i].now) {\n                            if (!nowPayloadMap.has(batch[i].shard)) {\n                                if (batch[i].payload != null) {\n                                    nowPayloadMap.set(batch[i].shard, [batch[i].payload]);\n                                }\n                            }\n                            else {\n                                nowPayloadMap.get(batch[i].shard)?.push(batch[i].payload);\n                            }\n                        }\n                        else {\n                            if (!payloadMap.has(batch[i].shard)) {\n                                if (batch[i].payload != null) {\n                                    payloadMap.set(batch[i].shard, [batch[i].payload]);\n                                }\n                            }\n                            else {\n                                payloadMap.get(batch[i].shard)?.push(batch[i].payload);\n                            }\n                        }\n                    }\n                    const rawResult = [];\n                    const processPayloads = async (key, value, now) => {\n                        const payload = value.length === 1 ? value[0] : value;\n                        const shard = key ? toShard(key) : Shard.Prime;\n                        const zone = shard.length < 4 ? undefined : toZone(shard);\n                        this.emit('debug', zone, { action: 'sendRpcPayload', payload });\n                        rawResult.push(await this._send(payload, shard, now));\n                        this.emit('debug', zone, { action: 'receiveRpcResult', payload });\n                    };\n                    await Promise.all(Array.from(nowPayloadMap)\n                        .map(async ([key, value]) => {\n                        await processPayloads(key, value, true);\n                    })\n                        .concat(Array.from(payloadMap).map(async ([key, value]) => {\n                        await processPayloads(key, value);\n                    })));\n                    const result = rawResult.flat();\n                    let lastZone;\n                    try {\n                        // Process results in batch order\n                        for (const { resolve, reject, payload, shard } of batch) {\n                            if (this.destroyed) {\n                                reject(makeError('provider destroyed; cancelled request', 'UNSUPPORTED_OPERATION', {\n                                    operation: payload.method,\n                                }));\n                                continue;\n                            }\n                            if (shard) {\n                                lastZone = shard.length < 4 ? undefined : toZone(shard);\n                            }\n                            else {\n                                lastZone = undefined;\n                            }\n                            // Find the matching result\n                            const resp = result.filter((r) => r.id === payload.id)[0];\n                            // No result; the node failed us in unexpected ways\n                            if (resp == null) {\n                                const error = makeError('missing response for request', 'BAD_DATA', {\n                                    value: result,\n                                    info: { payload },\n                                });\n                                this.emit('error', lastZone, error);\n                                reject(error);\n                                continue;\n                            }\n                            // The response is an error\n                            if ('error' in resp) {\n                                reject(this.getRpcError(payload, resp, shard));\n                                continue;\n                            }\n                            // All good; send the result\n                            resolve(resp.result);\n                        }\n                    }\n                    catch (error) {\n                        this.emit('debug', lastZone, { action: 'receiveRpcError', error });\n                        for (const { reject } of batch) {\n                            // @TODO: augment the error with the payload\n                            reject(error);\n                        }\n                    }\n                })();\n            }\n        }, stallTime);\n    }\n    /**\n     * Creates a new JsonRpcApiProvider instance.\n     *\n     * @param {Networkish} [network] - The network to connect to.\n     * @param {JsonRpcApiProviderOptions} [options] - The options for the provider.\n     */\n    constructor(network, options) {\n        super(network, options);\n        this.#nextId = 1;\n        this.#options = Object.assign({}, defaultOptions, options || {});\n        this.#payloads = [];\n        this.#drainTimer = null;\n        this.#network = null;\n        this.#pendingDetectNetwork = null;\n        {\n            let resolve = null;\n            const promise = new Promise((_resolve) => {\n                resolve = _resolve;\n            });\n            this.#notReady = { promise, resolve };\n        }\n        const staticNetwork = this._getOption('staticNetwork');\n        if (typeof staticNetwork === 'boolean') {\n            assertArgument(!staticNetwork || network !== 'any', \"staticNetwork cannot be used on special network 'any'\", 'options', options);\n            if (staticNetwork && network != null) {\n                this.#network = Network.from(network);\n            }\n        }\n        else if (staticNetwork) {\n            // Make sure any static network is compatbile with the provided netwrok\n            assertArgument(network == null || staticNetwork.matches(network), 'staticNetwork MUST match network object', 'options', options);\n            this.#network = staticNetwork;\n        }\n    }\n    /**\n     * Returns the value associated with the option `key`.\n     *\n     * Sub-classes can use this to inquire about configuration options.\n     *\n     * @ignore\n     * @param {keyof JsonRpcApiProviderOptions} key - The option key.\n     * @returns {JsonRpcApiProviderOptions[key]} The option value.\n     */\n    _getOption(key) {\n        return this.#options[key];\n    }\n    /**\n     * Gets the {@link Network | **Network**} this provider has committed to. On each call, the network is detected, and\n     * if it has changed, the call will reject.\n     *\n     * @ignore\n     * @returns {Network} The network.\n     * @throws {Error} If the network is not available yet.\n     */\n    get _network() {\n        assert(this.#network, 'network is not available yet', 'NETWORK_ERROR');\n        return this.#network;\n    }\n    /**\n     * Resolves to the non-normalized value by performing `req`.\n     *\n     * Sub-classes may override this to modify behavior of actions, and should generally call `super._perform` as a\n     * fallback.\n     *\n     * @ignore\n     * @param {PerformActionRequest} req - The request to perform.\n     * @returns {Promise<any>} The result of the request.\n     * @throws {Error} If the request fails.\n     */\n    async _perform(req) {\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (req.method !== 'getRunningLocations') {\n            await this.initPromise;\n        }\n        if (req.method === 'call' || req.method === 'estimateGas') {\n            const tx = req.transaction;\n            if (tx && tx.type != null && getBigInt(tx.type)) {\n                // If there are no EIP-1559 properties, it might be non-EIP-a559\n                if (tx.gasPrice == null && tx.minerTip == null) {\n                    const feeData = await this.getFeeData(req.zone, tx.type === 1);\n                    if (feeData.gasPrice == null && feeData.minerTip == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        req = Object.assign({}, req, {\n                            transaction: Object.assign({}, tx, { type: undefined }),\n                        });\n                    }\n                }\n            }\n        }\n        const request = this.getRpcRequest(req);\n        if (request != null) {\n            const shard = 'shard' in req ? req.shard : 'zone' in req ? toShard(req.zone) : undefined;\n            if (req.method === 'getRunningLocations') {\n                return await this.send(request.method, request.args, shard, req.now);\n            }\n            else {\n                return await this.send(request.method, request.args, shard);\n            }\n        }\n        return super._perform(req);\n    }\n    /**\n     * Sub-classes may override this; it detects the _actual_ network that we are **currently** connected to.\n     *\n     * Keep in mind that {@link JsonRpcApiProvider.send | **send**} may only be used once\n     * {@link JsonRpcApiProvider.ready | **ready**}, otherwise the _send primitive must be used instead.\n     *\n     * @ignore\n     * @returns {Promise<Network>} The detected network.\n     * @throws {Error} If network detection fails.\n     */\n    async _detectNetwork() {\n        const network = this._getOption('staticNetwork');\n        if (network) {\n            if (network === true) {\n                if (this.#network) {\n                    return this.#network;\n                }\n            }\n            else {\n                return network;\n            }\n        }\n        if (this.#pendingDetectNetwork) {\n            return await this.#pendingDetectNetwork;\n        }\n        // If we are ready, use `send`, which enabled requests to be batched\n        if (this.ready) {\n            this.#pendingDetectNetwork = (async () => {\n                try {\n                    const result = Network.from(getBigInt(await this.send('quai_chainId', [])));\n                    this.#pendingDetectNetwork = null;\n                    return result;\n                }\n                catch (error) {\n                    this.#pendingDetectNetwork = null;\n                    throw error;\n                }\n            })();\n            return await this.#pendingDetectNetwork;\n        }\n        // We are not ready yet; use the primitive _send\n        this.#pendingDetectNetwork = (async () => {\n            const payload = {\n                id: this.#nextId++,\n                method: 'quai_chainId',\n                params: [],\n                jsonrpc: '2.0',\n            };\n            this.emit('debug', undefined, { action: 'sendRpcPayload', payload });\n            let result;\n            try {\n                result = (await this._send(payload))[0];\n                this.#pendingDetectNetwork = null;\n            }\n            catch (error) {\n                this.#pendingDetectNetwork = null;\n                this.emit('debug', undefined, { action: 'receiveRpcError', error });\n                throw error;\n            }\n            this.emit('debug', undefined, { action: 'receiveRpcResult', result });\n            if ('result' in result) {\n                return Network.from(getBigInt(result.result));\n            }\n            throw this.getRpcError(payload, result);\n        })();\n        return await this.#pendingDetectNetwork;\n    }\n    /**\n     * Sub-classes **MUST** call this. Until {@link JsonRpcApiProvider._start | **_start**} has been called, no calls\n     * will be passed to {@link JsonRpcApiProvider._send | **_send**} from {@link JsonRpcApiProvider.send | **send**} . If\n     * it is overridden, then `super._start()` **MUST** be called.\n     *\n     * Calling it multiple times is safe and has no effect.\n     *\n     * @ignore\n     */\n    _start() {\n        if (this.#notReady == null || this.#notReady.resolve == null) {\n            return;\n        }\n        this.#notReady.resolve();\n        this.#notReady = null;\n        (async () => {\n            let retries = 0;\n            const maxRetries = 5;\n            while (this.#network == null && !this.destroyed && retries < maxRetries) {\n                try {\n                    this.#network = await this._detectNetwork();\n                }\n                catch (error) {\n                    if (this.destroyed) {\n                        break;\n                    }\n                    console.log('JsonRpcProvider failed to detect network and cannot start up; retry in 1s (perhaps the URL is wrong or the node is not started)');\n                    this.emit('error', undefined, makeError('failed to bootstrap network detection', 'NETWORK_ERROR', {\n                        event: 'initial-network-discovery',\n                        info: { error },\n                    }));\n                    await stall(1000);\n                    retries++;\n                }\n            }\n            if (retries >= maxRetries) {\n                throw new Error('Failed to detect network after maximum retries');\n            }\n            // Start dispatching requests\n            this.#scheduleDrain();\n        })();\n    }\n    /**\n     * Resolves once the {@link JsonRpcApiProvider._start | **_start**} has been called. This can be used in sub-classes\n     * to defer sending data until the connection has been established.\n     *\n     * @ignore\n     * @returns {Promise<void>} A promise that resolves once the provider is ready.\n     */\n    async _waitUntilReady() {\n        if (this._initFailed) {\n            throw new Error('Provider failed to initialize on creation. Run initialize or create a new provider.');\n        }\n        await this.initPromise;\n    }\n    /**\n     * Return a Subscriber that will manage the `sub`.\n     *\n     * Sub-classes may override this to modify the behavior of subscription management.\n     *\n     * @ignore\n     * @param {Subscription} sub - The subscription to manage.\n     * @returns {Subscriber} The subscriber that will manage the subscription.\n     */\n    _getSubscriber(sub) {\n        // Pending Filters aren't availble via polling\n        if (sub.type === 'pending') {\n            return new FilterIdPendingSubscriber(this, sub.zone);\n        }\n        if (sub.type === 'event') {\n            return new FilterIdEventSubscriber(this, sub.filter);\n        }\n        // Orphaned Logs are handled automatically, by the filter, since\n        // logs with removed are emitted by it\n        if (sub.type === 'orphan' && sub.filter.orphan === 'drop-log') {\n            return new UnmanagedSubscriber('orphan');\n        }\n        return super._getSubscriber(sub);\n    }\n    /**\n     * Returns true only if the {@link JsonRpcApiProvider._start | **_start**} has been called.\n     *\n     * @returns {boolean} True if the provider is ready.\n     */\n    get ready() {\n        return this.#notReady == null;\n    }\n    /**\n     * Returns `tx` as a normalized JSON-RPC transaction request, which has all values hexlified and any numeric values\n     * converted to Quantity values.\n     *\n     * @ignore\n     * @param {TransactionRequest} tx - The transaction to normalize.\n     * @returns {JsonRpcTransactionRequest} The normalized transaction.\n     * @throws {Error} If the transaction is invalid.\n     */\n    getRpcTransaction(tx) {\n        const result = {};\n        if ('from' in tx || ('to' in tx && 'data' in tx)) {\n            // JSON-RPC now requires numeric values to be \"quantity\" values\n            ['chainId', 'gasLimit', 'gasPrice', 'type', 'gasPrice', 'minerTip', 'nonce', 'value'].forEach((key) => {\n                if (tx[key] == null) {\n                    return;\n                }\n                let dstKey = key;\n                if (key === 'gasLimit') {\n                    dstKey = 'gas';\n                }\n                result[dstKey] = toQuantity(getBigInt(tx[key], `tx.${key}`));\n            });\n            ['from', 'to', 'data'].forEach((key) => {\n                if (tx[key] == null) {\n                    return;\n                }\n                result[key] = hexlify(tx[key]);\n            });\n            // Normalize the access list object\n            if ('accessList' in tx && tx.accessList) {\n                result['accessList'] = accessListify(tx.accessList);\n            }\n        }\n        else {\n            if (tx.txInputs != null) {\n                result['txInputs'] = tx.txInputs.map((input) => ({\n                    txhash: hexlify(input.txhash),\n                    index: toQuantity(getBigInt(input.index, `tx.txInputs.${input.index}`)),\n                    pubkey: hexlify(input.pubkey),\n                }));\n            }\n            if (tx.txOutputs != null) {\n                result['txOutputs'] = tx.txOutputs.map((output) => ({\n                    address: hexlify(output.address),\n                    denomination: toQuantity(getBigInt(output.denomination, `tx.txOutputs.${output.denomination}`)),\n                }));\n            }\n        }\n        return result;\n    }\n    /**\n     * Returns the request method and arguments required to perform `req`.\n     *\n     * @ignore\n     * @param {PerformActionRequest} req - The request to perform.\n     * @returns {null | { method: string; args: any[] }} The method and arguments to use.\n     * @throws {Error} If the request is not supported or invalid.\n     */\n    getRpcRequest(req) {\n        switch (req.method) {\n            case 'chainId':\n                return { method: 'quai_chainId', args: [] };\n            case 'getBlockNumber':\n                return { method: 'quai_blockNumber', args: [] };\n            case 'getGasPrice':\n                return {\n                    method: 'quai_gasPrice',\n                    args: [],\n                };\n            case 'getMinerTip':\n                return { method: 'quai_minerTip', args: [] };\n            case 'getPendingHeader':\n                return { method: 'quai_getPendingHeader', args: [] };\n            case 'getBalance':\n                return {\n                    method: 'quai_getBalance',\n                    args: [req.address, req.blockTag],\n                };\n            case 'getOutpointsByAddress':\n                return {\n                    method: 'quai_getOutpointsByAddress',\n                    args: [req.address],\n                };\n            case 'getTransactionCount':\n                return {\n                    method: 'quai_getTransactionCount',\n                    args: [req.address, req.blockTag],\n                };\n            case 'getCode':\n                return {\n                    method: 'quai_getCode',\n                    args: [req.address, req.blockTag],\n                };\n            case 'getStorage':\n                return {\n                    method: 'quai_getStorageAt',\n                    args: [req.address, '0x' + req.position.toString(16), req.blockTag],\n                };\n            case 'broadcastTransaction':\n                return {\n                    method: 'quai_sendRawTransaction',\n                    args: [req.signedTransaction],\n                };\n            case 'getBlock':\n                if ('blockTag' in req) {\n                    return {\n                        method: 'quai_getBlockByNumber',\n                        args: [req.blockTag, !!req.includeTransactions],\n                    };\n                }\n                else if ('blockHash' in req) {\n                    return {\n                        method: 'quai_getBlockByHash',\n                        args: [req.blockHash, !!req.includeTransactions],\n                    };\n                }\n                break;\n            case 'getTransaction':\n                return {\n                    method: 'quai_getTransactionByHash',\n                    args: [req.hash],\n                };\n            case 'getTransactionReceipt':\n                return {\n                    method: 'quai_getTransactionReceipt',\n                    args: [req.hash],\n                };\n            case 'call':\n                return {\n                    method: 'quai_call',\n                    args: [this.getRpcTransaction(req.transaction), req.blockTag],\n                };\n            case 'estimateGas': {\n                return {\n                    method: 'quai_estimateGas',\n                    args: [this.getRpcTransaction(req.transaction)],\n                };\n            }\n            case 'createAccessList': {\n                return {\n                    method: 'quai_createAccessList',\n                    args: [this.getRpcTransaction(req.transaction)],\n                };\n            }\n            case 'getRunningLocations': {\n                return {\n                    method: 'quai_listRunningChains',\n                    args: [],\n                };\n            }\n            case 'getProtocolTrieExpansionCount': {\n                return {\n                    method: 'quai_getProtocolExpansionNumber',\n                    args: [],\n                };\n            }\n            case 'getProtocolExpansionNumber': {\n                return {\n                    method: 'quai_getProtocolExpansionNumber',\n                    args: [],\n                };\n            }\n            case 'getQiRateAtBlock': {\n                return {\n                    method: 'quai_qiRateAtBlock',\n                    args: [req.blockTag, req.amt],\n                };\n            }\n            case 'getQuaiRateAtBlock': {\n                return {\n                    method: 'quai_quaiRateAtBlock',\n                    args: [req.blockTag, req.amt],\n                };\n            }\n            case 'getLogs':\n                return { method: 'quai_getLogs', args: [req.filter] };\n            case 'getTxPoolContent':\n                return { method: 'txpool_content', args: [] };\n            case 'txPoolInspect':\n                return { method: 'txpool_inspect', args: [] };\n        }\n        return null;\n    }\n    /**\n     * Returns an quais-style Error for the given JSON-RPC error `payload`, coalescing the various strings and error\n     * shapes that different nodes return, coercing them into a machine-readable standardized error.\n     *\n     * @ignore\n     * @param {JsonRpcPayload} payload - The payload that was sent.\n     * @param {JsonRpcError} _error - The error that was received.\n     * @returns {Error} The coalesced error.\n     */\n    getRpcError(payload, _error, shard) {\n        const { method } = payload;\n        const { error } = _error;\n        if (method === 'quai_estimateGas' && error.message) {\n            const msg = error.message;\n            if (!msg.match(/revert/i) && msg.match(/insufficient funds/i)) {\n                return makeError('insufficient funds', 'INSUFFICIENT_FUNDS', {\n                    transaction: payload.params[0],\n                    info: { payload, error, shard },\n                });\n            }\n        }\n        if (method === 'quai_call' || method === 'quai_estimateGas') {\n            const result = spelunkData(error);\n            const e = AbiCoder.getBuiltinCallException(method === 'quai_call' ? 'call' : 'estimateGas', payload.params[0], result ? result.data : null);\n            e.info = { error, payload, shard };\n            return e;\n        }\n        // Only estimateGas and call can return arbitrary contract-defined text, so now we\n        // we can process text safely.\n        const message = JSON.stringify(spelunkMessage(error));\n        if (method === 'quai_getTransactionByHash' && error.message && error.message.match(/transaction not found/i)) {\n            return makeError('transaction not found', 'TRANSACTION_NOT_FOUND', { info: { payload, error, shard } });\n        }\n        if (typeof error.message === 'string' && error.message.match(/user denied|quais-user-denied/i)) {\n            const actionMap = {\n                quai_sign: 'signMessage',\n                personal_sign: 'signMessage',\n                quai_signTypedData_v4: 'signTypedData',\n                quai_signTransaction: 'signTransaction',\n                quai_sendTransaction: 'sendTransaction',\n                quai_requestAccounts: 'requestAccess',\n                wallet_requestAccounts: 'requestAccess',\n            };\n            return makeError(`user rejected action`, 'ACTION_REJECTED', {\n                action: actionMap[method] || 'unknown',\n                reason: 'rejected',\n                info: { payload, error, shard },\n            });\n        }\n        if (method === 'quai_sendRawTransaction' || method === 'quai_sendTransaction') {\n            const transaction = payload.params[0];\n            if (message.match(/insufficient funds|base fee exceeds gas limit/i)) {\n                return makeError('insufficient funds for intrinsic transaction cost', 'INSUFFICIENT_FUNDS', {\n                    transaction,\n                    info: { error, shard },\n                });\n            }\n            if (message.match(/nonce/i) && message.match(/too low/i)) {\n                return makeError('nonce has already been used', 'NONCE_EXPIRED', {\n                    transaction,\n                    info: { error, shard },\n                });\n            }\n            // \"replacement transaction underpriced\"\n            if (message.match(/replacement transaction/i) && message.match(/underpriced/i)) {\n                return makeError('replacement fee too low', 'REPLACEMENT_UNDERPRICED', {\n                    transaction,\n                    info: { error, shard },\n                });\n            }\n            if (message.match(/only replay-protected/i)) {\n                return makeError('legacy pre-eip-155 transactions not supported', 'UNSUPPORTED_OPERATION', {\n                    operation: method,\n                    info: { transaction, info: { error, shard } },\n                });\n            }\n            if (message.match(/already known/i)) {\n                return makeError('transaction already known', 'TRANSACTION_ALREADY_KNOWN', { info: { error, shard } });\n            }\n        }\n        let unsupported = !!message.match(/the method .* does not exist/i);\n        if (!unsupported) {\n            if (error && error.details && error.details.startsWith('Unauthorized method:')) {\n                unsupported = true;\n            }\n        }\n        if (unsupported) {\n            return makeError('unsupported operation', 'UNSUPPORTED_OPERATION', {\n                operation: payload.method,\n                info: { error, payload, shard },\n            });\n        }\n        if (message.match('Provider failed to initialize on creation. Run initialize or create a new provider.')) {\n            return makeError('Provider failed to initialize on creation. Run initUrlMap or create a new provider.', 'PROVIDER_FAILED_TO_INITIALIZE', {\n                info: { payload, error, shard },\n            });\n        }\n        return makeError('could not coalesce error', 'UNKNOWN_ERROR', { error, payload, shard });\n    }\n    /**\n     * Requests the `method` with `params` via the JSON-RPC protocol over the underlying channel. This can be used to\n     * call methods on the backend that do not have a high-level API within the Provider API.\n     *\n     * This method queues requests according to the batch constraints in the options, assigns the request a unique ID.\n     *\n     * **Do NOT override** this method in sub-classes; instead override {@link JsonRpcApiProvider._send | **_send**} or\n     * force the options values in the call to the constructor to modify this method's behavior.\n     *\n     * @param {string} method - The method to call.\n     * @param {any[] | Record<string, any>} params - The parameters to pass to the method.\n     * @param {Shard} shard - The shard to send the request to.\n     * @param {boolean} now - If true, the request will be sent immediately.\n     * @returns {Promise<any>} A promise that resolves to the result of the method call.\n     */\n    send(method, params, shard, now) {\n        const continueSend = () => {\n            if (this.destroyed) {\n                return Promise.reject(makeError('provider destroyed; cancelled request', 'UNSUPPORTED_OPERATION', { operation: method }));\n            }\n            const id = this.#nextId++;\n            const promise = new Promise((resolve, reject) => {\n                this.#payloads.push({\n                    resolve,\n                    reject,\n                    payload: { method, params, id, jsonrpc: '2.0' },\n                    shard: shard,\n                    now: now,\n                });\n            });\n            // If there is not a pending drainTimer, set one\n            this.#scheduleDrain();\n            return promise;\n        };\n        // @TODO: cache chainId?? purge on switch_networks\n        // We have been destroyed; no operations are supported anymore\n        if (method !== 'quai_listRunningChains') {\n            return this.initPromise.then(() => {\n                return continueSend();\n            });\n        }\n        else {\n            return continueSend();\n        }\n    }\n    /**\n     * Returns a JsonRpcSigner for the given address.\n     *\n     * @param {number | string} [address] - The address or index of the account.\n     * @returns {Promise<JsonRpcSigner>} A promise that resolves to the JsonRpcSigner.\n     * @throws {Error} If the account is invalid.\n     */\n    async getSigner(address) {\n        if (address == null) {\n            address = 0;\n        }\n        const accountsPromise = this.send('quai_accounts', []);\n        // Account index\n        if (typeof address === 'number') {\n            const accounts = await accountsPromise;\n            if (address >= accounts.length) {\n                throw new Error('no such account');\n            }\n            return new JsonRpcSigner(this, accounts[address]);\n        }\n        const { accounts } = await resolveProperties({\n            network: this.getNetwork(),\n            accounts: accountsPromise,\n        });\n        // Account address\n        address = getAddress(address);\n        for (const account of accounts) {\n            if (getAddress(account) === address) {\n                return new JsonRpcSigner(this, address);\n            }\n        }\n        throw new Error('invalid account');\n    }\n    /**\n     * Returns a list of JsonRpcSigners for all accounts.\n     *\n     * @returns {Promise<JsonRpcSigner[]>} A promise that resolves to an array of JsonRpcSigners.\n     */\n    async listAccounts() {\n        const accounts = await this.send('quai_accounts', []);\n        return accounts.map((a) => new JsonRpcSigner(this, a));\n    }\n    /**\n     * Destroys the provider, stopping all processing and canceling all pending requests.\n     */\n    destroy() {\n        // Stop processing requests\n        if (this.#drainTimer) {\n            clearTimeout(this.#drainTimer);\n            this.#drainTimer = null;\n        }\n        // Cancel all pending requests\n        for (const { payload, reject } of this.#payloads) {\n            reject(makeError('provider destroyed; cancelled request', 'UNSUPPORTED_OPERATION', {\n                operation: payload.method,\n            }));\n        }\n        this.#payloads = [];\n        // Parent clean-up\n        super.destroy();\n    }\n}\n/**\n * The JsonRpcProvider is one of the most common Providers, which performs all operations over HTTP (or HTTPS) requests.\n *\n * Events are processed by polling the backend for the current block number; when it advances, all block-base events are\n * then checked for updates.\n *\n * @category Providers\n */\nexport class JsonRpcProvider extends JsonRpcApiProvider {\n    constructor(urls, network, options) {\n        if (urls == null) {\n            urls = ['http://localhost:8545'];\n        }\n        super(network, options);\n        if (Array.isArray(urls)) {\n            urls.forEach((url) => {\n                this.validateUrl(url);\n            });\n            this.initialize(urls);\n        }\n        else if (typeof urls === 'string') {\n            this.validateUrl(urls);\n            this.initialize([urls]);\n        }\n        else {\n            this.validateUrl(urls.url);\n            this.initialize(urls.clone());\n        }\n    }\n    _getSubscriber(sub) {\n        const subscriber = super._getSubscriber(sub);\n        return subscriber;\n    }\n    _getConnection(shard) {\n        if (this._initFailed) {\n            throw new Error('Provider failed to initialize on creation. Run initUrlMap or create a new provider.');\n        }\n        let connection;\n        if (shard !== undefined) {\n            connection = this._urlMap.get(shard) ?? this.connect[this.connect.length - 1].clone();\n        }\n        else {\n            connection = this.connect[this.connect.length - 1].clone();\n        }\n        return new FetchRequest(connection.url);\n    }\n    async send(method, params, shard, now) {\n        // All requests are over HTTP, so we can just start handling requests\n        // We do this here rather than the constructor so that we don't send any\n        // requests to the network (i.e. quai_chainId) until we absolutely have to.\n        await this._start();\n        return await super.send(method, params, shard, now);\n    }\n    async _send(payload, shard) {\n        // Configure a POST connection for the requested method\n        const request = this._getConnection(shard);\n        request.body = JSON.stringify(payload);\n        request.setHeader('content-type', 'application/json');\n        const response = await request.send();\n        response.assertOk();\n        let resp = response.bodyJson;\n        if (!Array.isArray(resp)) {\n            resp = [resp];\n        }\n        return resp;\n    }\n}\nfunction spelunkData(value) {\n    if (value == null) {\n        return null;\n    }\n    // These *are* the droids we're looking for.\n    if (typeof value.message === 'string' && value.message.match(/revert/i) && isHexString(value.data)) {\n        return { message: value.message, data: value.data };\n    }\n    // Spelunk further...\n    if (typeof value === 'object') {\n        for (const key in value) {\n            const result = spelunkData(value[key]);\n            if (result) {\n                return result;\n            }\n        }\n        return null;\n    }\n    // Might be a JSON string we can further descend...\n    if (typeof value === 'string') {\n        try {\n            return spelunkData(JSON.parse(value));\n            // eslint-disable-next-line no-empty\n        }\n        catch (error) { }\n    }\n    return null;\n}\nfunction _spelunkMessage(value, result) {\n    if (value == null) {\n        return;\n    }\n    // These *are* the droids we're looking for.\n    if (typeof value.message === 'string') {\n        result.push(value.message);\n    }\n    // Spelunk further...\n    if (typeof value === 'object') {\n        for (const key in value) {\n            _spelunkMessage(value[key], result);\n        }\n    }\n    // Might be a JSON string we can further descend...\n    if (typeof value === 'string') {\n        try {\n            return _spelunkMessage(JSON.parse(value), result);\n            // eslint-disable-next-line no-empty\n        }\n        catch (error) { }\n    }\n}\nfunction spelunkMessage(value) {\n    const result = [];\n    _spelunkMessage(value, result);\n    return result;\n}\n//# sourceMappingURL=provider-jsonrpc.js.map","import { Interface } from '../abi/index.js';\nimport { concat, defineProperties, getBytes, hexlify, assert, assertArgument } from '../utils/index.js';\nimport { BaseContract, copyOverrides, resolveArgs } from './contract.js';\nimport { formatMixedCaseChecksumAddress, validateAddress } from '../address/index.js';\nimport { getZoneForAddress } from '../utils/index.js';\nimport { Wallet } from '../wallet/index.js';\nimport { getContractAddress, isQiAddress } from '../address/index.js';\nimport { getStatic } from '../utils/properties.js';\nimport { JsonRpcSigner } from '../providers/provider-jsonrpc.js';\n// A = Arguments to the constructor\n// I = Interface of deployed contracts\n/**\n * A **ContractFactory** is used to deploy a Contract to the blockchain.\n *\n * @category Contract\n */\nexport class ContractFactory {\n    /**\n     * The Contract Interface.\n     */\n    interface;\n    /**\n     * The Contract deployment bytecode. Often called the initcode.\n     */\n    bytecode;\n    /**\n     * The ContractRunner to deploy the Contract as.\n     */\n    runner;\n    /**\n     * Create a new **ContractFactory** with `abi` and `bytecode`, optionally connected to `runner`.\n     *\n     * The `bytecode` may be the `bytecode` property within the standard Solidity JSON output.\n     */\n    constructor(abi, bytecode, runner) {\n        const iface = Interface.from(abi);\n        // Dereference Solidity bytecode objects and allow a missing `0x`-prefix\n        if (bytecode instanceof Uint8Array) {\n            bytecode = hexlify(getBytes(bytecode));\n        }\n        else {\n            if (typeof bytecode === 'object') {\n                bytecode = bytecode.object;\n            }\n            if (!bytecode.startsWith('0x')) {\n                bytecode = '0x' + bytecode;\n            }\n            bytecode = hexlify(getBytes(bytecode));\n        }\n        defineProperties(this, {\n            bytecode,\n            interface: iface,\n            runner: runner || null,\n        });\n    }\n    attach(target) {\n        return new BaseContract(target, this.interface, this.runner);\n    }\n    /**\n     * Resolves to the transaction to deploy the contract, passing `args` into the constructor.\n     *\n     * @param {ContractMethods<A>} args - The arguments to the constructor.\n     * @returns {Promise<ContractDeployTransaction>} A promise resolving to the deployment transaction.\n     */\n    async getDeployTransaction(...args) {\n        let overrides;\n        const fragment = this.interface.deploy;\n        if (fragment.inputs.length + 1 === args.length) {\n            overrides = await copyOverrides(args.pop());\n            const resolvedArgs = await resolveArgs(this.runner, fragment.inputs, args);\n            const data = concat([this.bytecode, this.interface.encodeDeploy(resolvedArgs)]);\n            return Object.assign({}, overrides, { data });\n        }\n        if (fragment.inputs.length !== args.length) {\n            throw new Error('incorrect number of arguments to constructor');\n        }\n        const resolvedArgs = await resolveArgs(this.runner, fragment.inputs, args);\n        const data = concat([this.bytecode, this.interface.encodeDeploy(resolvedArgs)]);\n        const from = args.pop()?.from || undefined;\n        return Object.assign({}, from, { data });\n    }\n    /**\n     * Resolves to the Contract deployed by passing `args` into the constructor.\n     *\n     * This will resovle to the Contract before it has been deployed to the network, so the\n     * [baseContract.waitForDeployment](../classes/BaseContract#waitForDeployment) should be used before sending any\n     * transactions to it.\n     *\n     * @param {ContractMethods<A>} args - The arguments to the constructor.\n     * @returns {Promise<\n     *     BaseContract & { deploymentTransaction(): ContractTransactionResponse } & Omit<I, keyof BaseContract>\n     * >}\n     *   A promise resolving to the Contract.\n     */\n    async deploy(...args) {\n        const tx = await this.getDeployTransaction(...args);\n        assert(this.runner && typeof this.runner.sendTransaction === 'function', 'factory runner does not support sending transactions', 'UNSUPPORTED_OPERATION', {\n            operation: 'sendTransaction',\n        });\n        if (this.runner instanceof Wallet || this.runner instanceof JsonRpcSigner) {\n            validateAddress(this.runner.address);\n            tx.from = this.runner.address;\n        }\n        const grindedTx = await this.grindContractAddress(tx);\n        grindedTx.accessList = (await this.runner.createAccessList?.(grindedTx))?.map((it) => {\n            it.address = formatMixedCaseChecksumAddress(it.address);\n            return it;\n        });\n        const sentTx = await this.runner.sendTransaction(grindedTx);\n        const address = getStatic(this.constructor, 'getContractAddress')?.(tx);\n        return new BaseContract(address, this.interface, this.runner, sentTx);\n    }\n    static getContractAddress(transaction) {\n        return getContractAddress(transaction.from, BigInt(transaction.nonce), // Fix: Convert BigInt to bigint\n        transaction.data);\n    }\n    async grindContractAddress(tx) {\n        if (tx.nonce == null && tx.from) {\n            tx.nonce = await this.runner?.provider?.getTransactionCount(tx.from);\n        }\n        const sender = String(tx.from);\n        const toShard = getZoneForAddress(sender);\n        let i = 0;\n        const startingData = tx.data;\n        const salt = new Uint8Array(4);\n        // initialize salt with the lower 32 bits of the nonce\n        new DataView(salt.buffer).setUint32(0, Number(tx.nonce) & 0xffffffff, false);\n        while (i < 10000) {\n            tx.data = hexlify(concat([String(startingData), salt]));\n            const contractAddress = getContractAddress(sender, BigInt(tx.nonce || 0), tx.data || '');\n            const contractShard = getZoneForAddress(contractAddress);\n            const utxo = isQiAddress(contractAddress);\n            if (contractShard === toShard && !utxo) {\n                return tx;\n            }\n            // Increment the salt\n            let saltValue = new DataView(salt.buffer).getUint32(0, false);\n            saltValue++;\n            new DataView(salt.buffer).setUint32(0, saltValue, false);\n            i++;\n        }\n        return tx;\n    }\n    /**\n     * Return a new **ContractFactory** with the same ABI and bytecode, but connected to `runner`.\n     *\n     * @param {ContractRunner} runner - The runner to connect to.\n     * @returns {ContractFactory<A, I>} A new ContractFactory.\n     */\n    connect(runner) {\n        return new ContractFactory(this.interface, this.bytecode, runner);\n    }\n    /**\n     * Create a new **ContractFactory** from the standard Solidity JSON output.\n     *\n     * @param {any} output - The Solidity JSON output.\n     * @param {ContractRunner} runner - The runner to connect to.\n     * @returns {ContractFactory<A, I>} A new ContractFactory.\n     */\n    static fromSolidity(output, runner) {\n        assertArgument(output != null, 'bad compiler output', 'output', output);\n        if (typeof output === 'string') {\n            output = JSON.parse(output);\n        }\n        const abi = output.abi;\n        let bytecode = '';\n        if (output.bytecode) {\n            bytecode = output.bytecode;\n        }\n        else if (output.evm && output.evm.bytecode) {\n            bytecode = output.evm.bytecode;\n        }\n        return new this(abi, bytecode, runner);\n    }\n}\n//# sourceMappingURL=factory.js.map","import { assertArgument } from '../utils/index.js';\nimport { JsonRpcApiProvider } from './provider-jsonrpc.js';\n/**\n * A **BrowserProvider** is intended to wrap an injected provider which adheres to the\n * [EIP-1193](https://eips.ethereum.org/EIPS/eip-1193) standard, which most (if not all) currently do.\n *\n * @category Providers\n * @class\n * @extends JsonRpcApiProvider\n */\nexport class BrowserProvider extends JsonRpcApiProvider {\n    #request;\n    /**\n     * Connect to the `ethereum` provider, optionally forcing the `network`.\n     *\n     * @class\n     * @param {Eip1193Provider} ethereum - The EIP-1193 provider.\n     * @param {Networkish} [network] - The network to connect to.\n     */\n    constructor(ethereum, network) {\n        super(network, { batchMaxCount: 1 });\n        if (this.initResolvePromise)\n            this.initResolvePromise();\n        this.#request = async (method, params, shard) => {\n            const payload = { method, params, shard };\n            this.emit('debug', undefined, { action: 'sendEip1193Request', payload });\n            try {\n                const result = await ethereum.request(payload);\n                this.emit('debug', undefined, { action: 'receiveEip1193Result', result });\n                return result;\n            }\n            catch (e) {\n                const error = new Error(e.message);\n                error.code = e.code;\n                error.data = e.data;\n                error.payload = payload;\n                this.emit('debug', undefined, { action: 'receiveEip1193Error', error });\n                throw error;\n            }\n        };\n    }\n    /**\n     * Resolves to `true` if the provider manages the `address`.\n     *\n     * @param {number | string} address - The address to check.\n     * @returns {Promise<boolean>} Resolves to `true` if the provider manages the `address`.\n     */\n    async hasSigner(address) {\n        if (address == null) {\n            address = 0;\n        }\n        const accounts = await this.send('quai_accounts', []);\n        if (typeof address === 'number') {\n            return accounts.length > address;\n        }\n        address = address.toLowerCase();\n        return accounts.filter((a) => a.toLowerCase() === address).length !== 0;\n    }\n    /**\n     * Sends a JSON-RPC request.\n     *\n     * @param {string} method - The method name.\n     * @param {any[] | Record<string, any>} params - The parameters for the method.\n     * @returns {Promise<any>} The result of the request.\n     */\n    async send(method, params, shard) {\n        await this._start();\n        return await super.send(method, params, shard);\n    }\n    /**\n     * Sends a JSON-RPC payload.\n     *\n     * @ignore\n     * @ignore\n     * @param {JsonRpcPayload | JsonRpcPayload[]} payload - The JSON-RPC payload.\n     * @returns {Promise<(JsonRpcResult | JsonRpcError)[]>} The result of the request.\n     */\n    async _send(payload, shard) {\n        assertArgument(!Array.isArray(payload), 'EIP-1193 does not support batch request', 'payload', payload);\n        try {\n            const result = await this.#request(payload.method, payload.params || [], shard);\n            return [{ id: payload.id, result }];\n        }\n        catch (e) {\n            return [\n                {\n                    id: payload.id,\n                    error: { code: e.code, data: e.data, message: e.message, shard: shard || undefined },\n                },\n            ];\n        }\n    }\n    /**\n     * Gets the RPC error.\n     *\n     * @param {JsonRpcPayload} payload - The JSON-RPC payload.\n     * @param {JsonRpcError} error - The JSON-RPC error.\n     * @returns {Error} The RPC error.\n     */\n    getRpcError(payload, error) {\n        error = JSON.parse(JSON.stringify(error));\n        // EIP-1193 gives us some machine-readable error codes, so rewrite\n        // them into\n        switch (error.error.code || -1) {\n            case 4001:\n                error.error.message = `quais-user-denied: ${error.error.message}`;\n                break;\n            case 4200:\n                error.error.message = `quais-unsupported: ${error.error.message}`;\n                break;\n        }\n        return super.getRpcError(payload, error);\n    }\n    /**\n     * Gets the signer for the given address.\n     *\n     * @param {number | string} [address] - The address to get the signer for.\n     * @returns {Promise<JsonRpcSigner>} The signer for the address.\n     */\n    async getSigner(address) {\n        if (address == null) {\n            address = 0;\n        }\n        if (!(await this.hasSigner(address))) {\n            try {\n                await this.#request('quai_requestAccounts', []);\n            }\n            catch (error) {\n                const payload = error.payload;\n                throw this.getRpcError(payload, { id: payload.id, error });\n            }\n        }\n        return await super.getSigner(address);\n    }\n}\n//# sourceMappingURL=provider-browser.js.map","import { UnmanagedSubscriber } from './abstract-provider.js';\nimport { assert, assertArgument, makeError } from '../utils/index.js';\nimport { JsonRpcApiProvider } from './provider-jsonrpc.js';\nimport { toShard } from '../constants/index.js';\n/**\n * A **SocketSubscriber** uses a socket transport to handle events and should use\n * {@link SocketSubscriber._emit | **_emit**} to manage the events.\n *\n * - A sub-class MUST call the `_start()` method once connected\n * - A sub-class MUST override the `_write(string)` method\n * - A sub-class MUST call `_processMessage(string)` for each message\n *\n * @category Providers\n */\nexport class SocketSubscriber {\n    #provider;\n    #filter;\n    /**\n     * The filter.\n     *\n     * @type {any[]}\n     */\n    get filter() {\n        return JSON.parse(this.#filter);\n    }\n    #filterId;\n    #paused;\n    #emitPromise;\n    zone;\n    shard;\n    /**\n     * Creates a new **SocketSubscriber** attached to `provider` listening to `filter`.\n     *\n     * @param {SocketProvider} provider - The socket provider.\n     * @param {any[]} filter - The filter.\n     */\n    constructor(provider, filter, zone) {\n        this.#provider = provider;\n        this.#filter = JSON.stringify(filter);\n        this.#filterId = null;\n        this.#paused = null;\n        this.#emitPromise = null;\n        this.zone = zone;\n        this.shard = toShard(zone);\n    }\n    /**\n     * Start the subscriber.\n     */\n    start() {\n        this.#filterId = this.#provider.send('quai_subscribe', this.filter, this.shard).then((filterId) => {\n            this.#provider._register(filterId, this);\n            return filterId;\n        });\n    }\n    /**\n     * Stop the subscriber.\n     */\n    stop() {\n        this.#filterId.then((filterId) => {\n            this.#provider.send('quai_unsubscribe', [filterId], this.shard);\n        });\n        this.#filterId = null;\n    }\n    /**\n     * Pause the subscriber.\n     *\n     * @param {boolean} [dropWhilePaused] - Whether to drop logs while paused.\n     */\n    pause(dropWhilePaused) {\n        assert(dropWhilePaused, 'preserve logs while paused not supported by SocketSubscriber yet', 'UNSUPPORTED_OPERATION', { operation: 'pause(false)' });\n        this.#paused = !!dropWhilePaused;\n    }\n    /**\n     * Resume the subscriber.\n     */\n    resume() {\n        this.#paused = null;\n    }\n    /**\n     * Handle incoming messages.\n     *\n     * @ignore\n     * @param {any} message - The message to handle.\n     */\n    _handleMessage(message) {\n        if (this.#filterId == null) {\n            return;\n        }\n        if (this.#paused === null) {\n            let emitPromise = this.#emitPromise;\n            if (emitPromise == null) {\n                emitPromise = this._emit(this.#provider, message);\n            }\n            else {\n                emitPromise = emitPromise.then(async () => {\n                    await this._emit(this.#provider, message);\n                });\n            }\n            this.#emitPromise = emitPromise.then(() => {\n                if (this.#emitPromise === emitPromise) {\n                    this.#emitPromise = null;\n                }\n            });\n        }\n    }\n    /**\n     * Sub-classes **must** override this to emit the events on the provider.\n     *\n     * @abstract\n     * @param {SocketProvider} provider - The socket provider.\n     * @param {any} message - The message to emit.\n     * @returns {Promise<void>}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async _emit(provider, message) {\n        throw new Error('sub-classes must implement this; _emit');\n    }\n}\n/**\n * A **SocketBlockSubscriber** listens for `newHeads` events and emits `\"block\"` events.\n *\n * @category Providers\n */\nexport class SocketBlockSubscriber extends SocketSubscriber {\n    /**\n     * Creates a new **SocketBlockSubscriber**.\n     *\n     * @ignore\n     * @param {SocketProvider} provider - The socket provider.\n     */\n    constructor(provider, zone) {\n        super(provider, ['newHeads'], zone);\n    }\n    /**\n     * Emit the block event.\n     *\n     * @ignore\n     * @param {SocketProvider} provider - The socket provider.\n     * @param {any} message - The message to emit.\n     * @returns {Promise<void>}\n     */\n    async _emit(provider, message) {\n        provider.emit('block', this.zone, parseInt(message.woHeader.number));\n    }\n}\n/**\n * A **SocketPendingSubscriber** listens for pending transactions and emits `\"pending\"` events.\n *\n * @category Providers\n */\nexport class SocketPendingSubscriber extends SocketSubscriber {\n    /**\n     * Creates a new **SocketPendingSubscriber**.\n     *\n     * @ignore\n     * @param {SocketProvider} provider - The socket provider.\n     */\n    constructor(provider, zone) {\n        super(provider, ['newPendingTransactions'], zone);\n    }\n    /**\n     * Emit the pending event.\n     *\n     * @ignore\n     * @param {SocketProvider} provider - The socket provider.\n     * @param {any} message - The message to emit.\n     * @returns {Promise<void>}\n     */\n    async _emit(provider, message) {\n        provider.emit('pending', message);\n    }\n}\n/**\n * A **SocketEventSubscriber** listens for event logs.\n *\n * @category Providers\n */\nexport class SocketEventSubscriber extends SocketSubscriber {\n    #logFilter;\n    /**\n     * The filter.\n     *\n     * @type {EventFilter}\n     */\n    get logFilter() {\n        return JSON.parse(this.#logFilter);\n    }\n    /**\n     * Creates a new **SocketEventSubscriber**.\n     *\n     * @ignore\n     * @param {SocketProvider} provider - The socket provider.\n     * @param {EventFilter} filter - The event filter.\n     */\n    constructor(provider, filter, zone) {\n        super(provider, ['logs', filter], zone);\n        this.#logFilter = JSON.stringify(filter);\n    }\n    /**\n     * Emit the event log.\n     *\n     * @ignore\n     * @param {SocketProvider} provider - The socket provider.\n     * @param {any} message - The message to emit.\n     * @returns {Promise<void>}\n     */\n    async _emit(provider, message) {\n        provider.emit(this.logFilter, this.zone, provider._wrapLog(message, provider._network));\n    }\n}\n/**\n * A **SocketProvider** is backed by a long-lived connection over a socket, which can subscribe and receive real-time\n * messages over its communication channel.\n *\n * @category Providers\n */\nexport class SocketProvider extends JsonRpcApiProvider {\n    #callbacks;\n    // Maps each filterId to its subscriber\n    #subs;\n    // If any events come in before a subscriber has finished\n    // registering, queue them\n    #pending;\n    /**\n     * Creates a new **SocketProvider** connected to `network`.\n     *\n     * If unspecified, the network will be discovered.\n     *\n     * @param {Networkish} [network] - The network to connect to.\n     * @param {JsonRpcApiProviderOptions} [_options] - The options for the provider.\n     */\n    constructor(network, _options) {\n        // Copy the options\n        const options = Object.assign({}, _options != null ? _options : {});\n        // Support for batches is generally not supported for\n        // connection-base providers; if this changes in the future\n        // the _send should be updated to reflect this\n        assertArgument(options.batchMaxCount == null || options.batchMaxCount === 1, 'sockets-based providers do not support batches', 'options.batchMaxCount', _options);\n        options.batchMaxCount = 1;\n        // Socket-based Providers (generally) cannot change their network,\n        // since they have a long-lived connection; but let people override\n        // this if they have just cause.\n        if (options.staticNetwork == null) {\n            options.staticNetwork = true;\n        }\n        super(network, options);\n        this.#callbacks = new Map();\n        this.#subs = new Map();\n        this.#pending = new Map();\n    }\n    /**\n     * Get the subscriber for a given subscription.\n     *\n     * @ignore\n     * @param {Subscription} sub - The subscription.\n     * @returns {Subscriber} The subscriber.\n     */\n    _getSubscriber(sub) {\n        switch (sub.type) {\n            case 'close':\n                return new UnmanagedSubscriber('close');\n            case 'block':\n                return new SocketBlockSubscriber(this, sub.zone);\n            case 'pending':\n                return new SocketPendingSubscriber(this, sub.zone);\n            case 'event':\n                return new SocketEventSubscriber(this, sub.filter, sub.zone);\n            case 'orphan':\n                // Handled auto-matically within AbstractProvider\n                // when the log.removed = true\n                if (sub.filter.orphan === 'drop-log') {\n                    return new UnmanagedSubscriber('drop-log');\n                }\n        }\n        return super._getSubscriber(sub);\n    }\n    /**\n     * Register a new subscriber. This is used internally by Subscribers and generally is unnecessary unless extending\n     * capabilities.\n     *\n     * @ignore\n     * @param {number | string} filterId - The filter ID.\n     * @param {SocketSubscriber} subscriber - The subscriber.\n     */\n    _register(filterId, subscriber) {\n        this.#subs.set(filterId, subscriber);\n        const pending = this.#pending.get(filterId);\n        if (pending) {\n            for (const message of pending) {\n                subscriber._handleMessage(message);\n            }\n            this.#pending.delete(filterId);\n        }\n    }\n    /**\n     * Send a JSON-RPC payload.\n     *\n     * @ignore\n     * @param {JsonRpcPayload | JsonRpcPayload[]} payload - The payload to send.\n     * @param {Shard} [shard] - The shard.\n     * @param {boolean} [now] - Whether to send immediately.\n     * @returns {Promise<(JsonRpcResult | JsonRpcError)[]>} The result or error.\n     */\n    async _send(payload, shard, now) {\n        if (this._initFailed) {\n            console.log('Provider failed to initialize on creation. Run initialize or create a new provider.');\n            return [\n                {\n                    id: Array.isArray(payload) ? payload[0].id : payload.id,\n                    error: {\n                        code: -32000,\n                        message: 'Provider failed to initialize on creation. Run initialize or create a new provider.',\n                    },\n                },\n            ];\n        }\n        // WebSocket provider doesn't accept batches\n        assertArgument(!Array.isArray(payload), 'WebSocket does not support batch send', 'payload', payload);\n        // @TODO: stringify payloads here and store to prevent mutations\n        // Prepare a promise to respond to\n        const promise = new Promise((resolve, reject) => {\n            this.#callbacks.set(payload.id, { payload, resolve, reject });\n        });\n        // Wait until the socket is connected before writing to it\n        try {\n            if (!now) {\n                await this._waitUntilReady();\n            }\n        }\n        catch (error) {\n            this.#callbacks.delete(payload.id);\n            return [\n                {\n                    id: Array.isArray(payload) ? payload[0].id : payload.id,\n                    error: {\n                        code: -32000,\n                        message: 'Provider failed to initialize on creation. Run initialize or create a new provider.',\n                    },\n                },\n            ];\n        }\n        // Write the request to the socket\n        await this._write(JSON.stringify(payload), shard);\n        return [await promise];\n    }\n    /**\n     * Sub-classes **must** call this with messages received over their transport to be processed and dispatched.\n     *\n     * @ignore\n     * @param {string} message - The message to process.\n     */\n    async _processMessage(message) {\n        const result = JSON.parse(message);\n        if (result && typeof result === 'object' && 'id' in result) {\n            const callback = this.#callbacks.get(result.id);\n            if (callback == null) {\n                this.emit('error', undefined, makeError('received result for unknown id', 'UNKNOWN_ERROR', {\n                    reasonCode: 'UNKNOWN_ID',\n                    result,\n                }));\n                return;\n            }\n            this.#callbacks.delete(result.id);\n            callback.resolve(result);\n        }\n        else if (result && result.method === 'quai_subscription') {\n            const filterId = result.params.subscription;\n            const subscriber = this.#subs.get(filterId);\n            if (subscriber) {\n                subscriber._handleMessage(result.params.result);\n            }\n            else {\n                let pending = this.#pending.get(filterId);\n                if (pending == null) {\n                    pending = [];\n                    this.#pending.set(filterId, pending);\n                }\n                pending.push(result.params.result);\n            }\n        }\n        else {\n            this.emit('error', undefined, makeError('received unexpected message', 'UNKNOWN_ERROR', {\n                reasonCode: 'UNEXPECTED_MESSAGE',\n                result,\n            }));\n            return;\n        }\n    }\n    /**\n     * Sub-classes **must** override this to send `message` over their transport.\n     *\n     * @ignore\n     * @param {string} message - The message to send.\n     * @param {Shard} [shard] - The shard.\n     * @returns {Promise<void>}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async _write(message, shard) {\n        throw new Error('sub-classes must override this');\n    }\n    validateUrl(url) {\n        const urlPattern = /^(wss?):\\/\\/[a-zA-Z0-9.-]+(:\\d+)?$/;\n        if (!urlPattern.test(url)) {\n            let errorMessage = 'Invalid URL: ';\n            if (!/^wss?:\\/\\//.test(url)) {\n                errorMessage += 'URL must start with ws:// or wss://. ';\n            }\n            if (url.endsWith('/')) {\n                errorMessage += 'URL should not end with a /. ';\n            }\n            if (/\\/[^/]+/.test(url)) {\n                errorMessage += 'URL should not contain a path, query string, or fragment. ';\n            }\n            throw new Error(errorMessage.trim());\n        }\n    }\n}\n//# sourceMappingURL=provider-socket.js.map","function getGlobal() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('unable to locate global object');\n}\nconst _WebSocket = getGlobal().WebSocket;\nexport { _WebSocket as WebSocket };\n//# sourceMappingURL=ws-browser.js.map","import { WebSocket as _WebSocket } from './ws.js'; /*-browser*/\nimport { SocketProvider } from './provider-socket.js';\nimport { Shard, toShard } from '../constants/index.js';\nimport { fromShard } from '../constants/shards.js';\n/**\n * A JSON-RPC provider which is backed by a WebSocket.\n *\n * WebSockets are often preferred because they retain a live connection to a server, which permits more instant access\n * to events.\n *\n * However, this incurs higher server infrastructure costs, so additional resources may be required to host your own\n * WebSocket nodes and many third-party services charge additional fees for WebSocket endpoints.\n *\n * @category Providers\n * @extends SocketProvider\n */\nexport class WebSocketProvider extends SocketProvider {\n    #websockets;\n    /**\n     * A map to track the readiness of each shard.\n     *\n     * @type {Map<Shard, boolean>}\n     */\n    readyMap = new Map();\n    /**\n     * Get the array of WebSocketLike objects.\n     *\n     * @returns {WebSocketLike[]} The array of WebSocketLike objects.\n     * @throws {Error} If the websocket is closed.\n     */\n    get websocket() {\n        if (this.#websockets == null) {\n            throw new Error('websocket closed');\n        }\n        return this.#websockets;\n    }\n    /**\n     * Create a new WebSocketProvider.\n     *\n     * @param {string | string[] | WebSocketLike | WebSocketCreator} url - The URL(s) or WebSocket object or creator.\n     * @param {Networkish} [network] - The network to connect to.\n     * @param {JsonRpcApiProviderOptions} [options] - The options for the JSON-RPC API provider.\n     */\n    constructor(url, network, options) {\n        super(network, options);\n        this.#websockets = [];\n        if (typeof url === 'string') {\n            this.validateUrl(url);\n        }\n        else if (Array.isArray(url)) {\n            url.forEach((it) => this.validateUrl(it));\n        }\n        else if (typeof url === 'function') {\n            this.validateUrl(url().url);\n        }\n        else {\n            this.validateUrl(url.url);\n        }\n        this.initialize(typeof url === 'string' ? [url] : url);\n    }\n    /**\n     * Initialize a WebSocket connection for a shard.\n     *\n     * @ignore\n     * @param {WebSocketLike} websocket - The WebSocket object.\n     * @param {Shard} shard - The shard identifier.\n     */\n    initWebSocket(websocket, shard) {\n        websocket.onerror = (error) => {\n            console.log('WebsocketProvider error', error);\n            websocket.close();\n        };\n        websocket.onopen = async () => {\n            try {\n                await this._start();\n                this.resume();\n                this.readyMap.set(shard, true);\n            }\n            catch (error) {\n                console.log('failed to start WebsocketProvider', error);\n                this.readyMap.set(shard, false);\n                // @TODO: now what? Attempt reconnect?\n            }\n        };\n        websocket.onmessage = (message) => {\n            this._processMessage(message.data);\n        };\n    }\n    /**\n     * Wait until the shard is ready. Max wait time is ~8 seconds.\n     *\n     * @param {Shard} shard - The shard identifier.\n     * @returns {Promise<void>} A promise that resolves when the shard is ready.\n     * @throws {Error} If the shard is not ready within the timeout period.\n     */\n    async waitShardReady(shard) {\n        let count = 0;\n        while (!this.readyMap.get(shard)) {\n            await new Promise((resolve) => setTimeout(resolve, Math.pow(2, count)));\n            if (count > 11) {\n                throw new Error('Timeout waiting for shard to be ready');\n            }\n            count++;\n        }\n    }\n    /**\n     * Initialize the URL map with WebSocket connections.\n     *\n     * @ignore\n     * @param {U} urls - The URLs or WebSocket object or creator.\n     * @returns {Promise<void>} A promise that resolves when the URL map is initialized.\n     */\n    async initialize(urls) {\n        //clear websockets\n        this.#websockets = [];\n        this._urlMap.clear();\n        try {\n            const primeSuffix = this._getOption('usePathing') ? `/${fromShard(Shard.Prime, 'nickname')}` : ':8001';\n            const createWebSocket = (baseUrl, suffix) => {\n                const tempWs = new _WebSocket(`${baseUrl}${suffix}`);\n                return tempWs;\n                // wait 2 minutes\n            };\n            const initShardWebSockets = async (baseUrl) => {\n                const shards = await this._getRunningLocations(Shard.Prime, true);\n                await Promise.all(shards.map(async (shard) => {\n                    const port = 8200 + 20 * shard[0] + shard[1];\n                    const shardEnum = toShard(`0x${shard[0].toString(16)}${shard[1].toString(16)}`);\n                    const shardSuffix = this._getOption('usePathing')\n                        ? `/${fromShard(shardEnum, 'nickname')}`\n                        : `:${port}`;\n                    const shardUrl = baseUrl.split(':').slice(0, 2).join(':');\n                    const websocket = createWebSocket(shardUrl, shardSuffix);\n                    this.initWebSocket(websocket, shardEnum);\n                    this.#websockets.push(websocket);\n                    this._urlMap.set(shardEnum, websocket);\n                    try {\n                        await this.waitShardReady(shardEnum);\n                    }\n                    catch (error) {\n                        console.log('failed to waitShardReady', error);\n                        this._initFailed = true;\n                    }\n                }));\n            };\n            if (Array.isArray(urls)) {\n                for (const url of urls) {\n                    const baseUrl = `${url.split(':')[0]}:${url.split(':')[1]}`;\n                    const primeWebsocket = createWebSocket(baseUrl, primeSuffix);\n                    this.initWebSocket(primeWebsocket, Shard.Prime);\n                    this.#websockets.push(primeWebsocket);\n                    this._urlMap.set(Shard.Prime, primeWebsocket);\n                    await this.waitShardReady(Shard.Prime);\n                    await initShardWebSockets(baseUrl);\n                }\n            }\n            else if (typeof urls === 'function') {\n                const primeWebsocket = urls();\n                this.initWebSocket(primeWebsocket, Shard.Prime);\n                this.#websockets.push(primeWebsocket);\n                this._urlMap.set(Shard.Prime, primeWebsocket);\n                await this.waitShardReady(Shard.Prime);\n                const baseUrl = this.#websockets[0].url.split(':').slice(0, 2).join(':');\n                await initShardWebSockets(baseUrl);\n            }\n            else {\n                const primeWebsocket = urls;\n                this.initWebSocket(primeWebsocket, Shard.Prime);\n                this.#websockets.push(primeWebsocket);\n                this._urlMap.set(Shard.Prime, primeWebsocket);\n                await this.waitShardReady(Shard.Prime);\n                const baseUrl = primeWebsocket.url.split(':').slice(0, 2).join(':');\n                await initShardWebSockets(baseUrl);\n            }\n            if (this.initResolvePromise)\n                this.initResolvePromise();\n        }\n        catch (error) {\n            this._initFailed = true;\n            console.log('failed to initialize', error);\n            //clear websockets\n            this.#websockets = [];\n            if (this.initRejectPromise)\n                this.initRejectPromise(error);\n            return;\n        }\n    }\n    /**\n     * Write a message to the WebSocket.\n     *\n     * @ignore\n     * @param {string} message - The message to send.\n     * @param {Shard} [shard] - The shard identifier.\n     * @returns {Promise<void>} A promise that resolves when the message is sent.\n     * @throws {Error} If the WebSocket is closed or the shard is not found.\n     */\n    async _write(message, shard) {\n        if (this.websocket.length < 1) {\n            throw new Error('Websocket closed');\n        }\n        if (shard && !this._urlMap.has(shard)) {\n            throw new Error('Shard not found');\n        }\n        const websocket = shard ? this._urlMap.get(shard) : this.websocket[this.websocket.length - 1];\n        if (!websocket) {\n            throw new Error('Websocket is undefined');\n        }\n        if (shard) {\n            await this.waitShardReady(shard);\n        }\n        websocket.send(message);\n    }\n    /**\n     * Destroy the WebSocket connections and clean up resources.\n     *\n     * @returns {Promise<void>} A promise that resolves when the WebSocket connections are closed.\n     */\n    async destroy() {\n        this.#websockets.forEach((it) => it.close());\n        this.#websockets = [];\n        super.destroy();\n    }\n}\n//# sourceMappingURL=provider-websocket.js.map","const Base64 = ')!@#$%^&*(ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_';\n/**\n * @ignore\n */\nexport function decodeBits(width, data) {\n    const maxValue = (1 << width) - 1;\n    const result = [];\n    let accum = 0, bits = 0, flood = 0;\n    for (let i = 0; i < data.length; i++) {\n        // Accumulate 6 bits of data\n        accum = (accum << 6) | Base64.indexOf(data[i]);\n        bits += 6;\n        // While we have enough for a word...\n        while (bits >= width) {\n            // ...read the word\n            const value = accum >> (bits - width);\n            accum &= (1 << (bits - width)) - 1;\n            bits -= width;\n            // A value of 0 indicates we exceeded maxValue, it\n            // floods over into the next value\n            if (value === 0) {\n                flood += maxValue;\n            }\n            else {\n                result.push(value + flood);\n                flood = 0;\n            }\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=bit-reader.js.map","import { assertArgument } from '../utils/index.js';\nimport { decodeBits } from './bit-reader.js';\nimport { decodeOwl } from './decode-owl.js';\n/**\n * @ignore\n */\nexport function decodeOwlA(data, accents) {\n    let words = decodeOwl(data).join(',');\n    // Inject the accents\n    accents.split(/,/g).forEach((accent) => {\n        const match = accent.match(/^([a-z]*)([0-9]+)([0-9])(.*)$/);\n        assertArgument(match !== null, 'internal error parsing accents', 'accents', accents);\n        let posOffset = 0;\n        const positions = decodeBits(parseInt(match[3]), match[4]);\n        const charCode = parseInt(match[2]);\n        const regex = new RegExp(`([${match[1]}])`, 'g');\n        words = words.replace(regex, (all, letter) => {\n            const rem = --positions[posOffset];\n            if (rem === 0) {\n                letter = String.fromCharCode(letter.charCodeAt(0), charCode);\n                posOffset++;\n            }\n            return letter;\n        });\n    });\n    return words.split(',');\n}\n//# sourceMappingURL=decode-owla.js.map","import { WordlistOwl } from './wordlist-owl.js';\nimport { decodeOwlA } from './decode-owla.js';\n/**\n * An OWL-A format Wordlist extends the OWL format to add an overlay onto an OWL format Wordlist to support diacritic\n * marks.\n *\n * This class is generally not useful to most developers as it is used mainly internally to keep Wordlists for languages\n * based on latin-1 small.\n *\n * If necessary, there are tools within the `generation/` folder to create the necessary data.\n *\n * @category Wordlists\n */\nexport class WordlistOwlA extends WordlistOwl {\n    #accent;\n    /**\n     * Creates a new Wordlist for `locale` using the OWLA `data` and `accent` data and validated against the `checksum`.\n     */\n    constructor(locale, data, accent, checksum) {\n        super(locale, data, checksum);\n        this.#accent = accent;\n    }\n    /**\n     * The OWLA-encoded accent data.\n     *\n     * @ignore\n     */\n    get _accent() {\n        return this.#accent;\n    }\n    /**\n     * Decode all the words for the wordlist.\n     *\n     * @ignore\n     */\n    _decodeWords() {\n        return decodeOwlA(this._data, this._accent);\n    }\n}\n//# sourceMappingURL=wordlist-owla.js.map","import { WordlistOwlA } from './wordlist-owla.js';\nconst words = \"0arertoiotadonoaRteirroenaNonaLsolocoiliaralaorrenadaChoN$n0A>Dom,EjaI!#Oga&O'Or#RazoR*Ue=U<0Ab Adem@Ce<C~Ei)ElgaEn#Ept I&L  NeOg!O<TivoToTrizTu Ud*U!&Us 0Ic#Mit*Opt Or'Ua`Ul#0Reo0Ect Ic~In Irm 0IlIt On@Os#Ot Reg R$UaU&U?aUja0OgoOr+0ReSl 0Ed_zE'Us)1Ac[nAmb_ArmaBaBumCaldeDeaEg_Ej Er%E%F?!GaGo&nIa&I,#Iv$MaMejaMib T TezaTivoToTu[Um'Z 0AbleAn)Apo]ArgoAs B Bi#E'IgoIs%dOrP oPl$0|oC@'C]D D,Em@Gu=Il=ImoIsOt T,aTiguoTojoUalUl Unc$Ad*EjoO1Ag A[#Eti#IoLic O&Or)OyoR,d!Rob Ues%U+1A&A`ArBit+BolBus#|ivoCoD!D?]DuoEaI&IesM.i-esOmaPaP.Reg=RozRugaTeTis%0AA&Al#C,<Egur EoE<rI,#I=Ist*NoOmb+P!oT?]T+Tu#Um*Un#0AjoAqueArEn#EoI>Le%OmoRa!RozUn0DazD$GeLaM,#S,)T^0AlAnceA+EEl]`E`EstruzI.I<2ErU{U'0Af[nArO)Uc Uf_Ul:BaB^|eH@IleJ Lanz/c.LdeMbuN>Nd-oRb(>RnizR+Scu]S#nSu[Tal]T!@T*Tu%UlZ 3BeBid/=S SoSt@3|oEnNgo2An>OqueUsa2ABi`BoCaCi`DaDegaIn//!oLsaMb-{dNi#N}saiRdeRr SqueTeTinVe{Zal2AvoAzoEchaEveIl=In>IsaOcaOmaOnceO)UjaUs>U#2CeoCleE'EyFan{F.HoIt_L#Rbuj(l(+Sc TacaZ.:Bal=BezaBi`B[CaoDav!D,aErFeI{ImanJaJ.LLam Lc$L&Li{dLleLm/^LvoMaMb$Mel=Mi'Mp}c!Nd?Nel-gu+Nic-#N-.ObaOsPazPi%nPo)Pt Puch((b.RcelRe%Rg(i'RneRpe%R+R%SaS>S!oSpaS#rT^ceT_U{lUsaZo3Bol]D!D+Ld/eb_Lo<Lu]M,#Niz-t+Rc(&Rez(oRr R)zaSpedT+2AcalAle>AmpuAnc]ApaAr]I>Is)IvoOqueOzaUle%Up 0Cl.EgoE=EnEr#F[G +M->NeN%P_sR>Rue]SneTaU{d2Am^AnA+AseAveI,)ImaInica2B_Cc~|i'Ci`CoDigoDoF_G!He)JinJoL/ch/eg$Lg Lin/l LmoLum`Mba)M!Mi{Mo&Mpr-deNej}g-oc!Nsej}t PaPi(az.Rba%RchoR&nR.(r!S!SmosS%2AneoAt!E Ec!Ei&EmaIaIm,Ip%IsisOmoOnicaOque%U&Uz2Ad+Ar#At+BoBr*| aEl=En#Er{Es%EvaId Lebr/p/#Mb_Mpl*N-e%O%P.Pul( R$<R<RvaTis:M-z(R&T?3B!B?Ca{C*DoF,saFin*J LfinLga&Li#M^-<N%lP^)RechoR+%Sayu'SeoSf?eSnu&Sti'Sv$TalleT,!U{3AAb=AdemaAman)A`Ar$BujoCt En)E%EzFic?G'Lem/u*N!oRec#Rig*S>Se'Sf[zVaVi'5BleCeL^Ming}N Ra&Rm*R<SSis2Ag.Oga2|aDaE=E'LceOQueR Rez(o:0A'R$0H OUa&r0AdIc~Ific$I#rUc 1Ec#Icaz3EEmp=1Efan)Eg*Em,#Ev IpseI)Ix*Og$Ud*0Bu&It*Oc~Pa)Pe'PleoP_sa0A'C go|ufeC@EmigoE+Fa&F!moGa'Igm/aceOrmeRe&SayoS, T!oTr VaseV$1Oca0Uipo0Izo0Ca]C,aCol Crib*Cu&Enc@F!aFu!zoPa{PejoP@PosaPumaQuiT TeTi=Tufa0ApaEr'Ic-@1Ad*Alu En#It 1Ac#Am,Ce<CusaEn#Ig*Il$Ist*I#P!#Plic P.!T_mo:BricaBu]|a{C?C#rE`J/d/=L<Lt MaM?@Mo<Ra.Rmaci(olRsaSeTigaU`V^X3Br!o|/izORi(ozRt?Rv^Stin3AbleAnzaArB[Cc~|aDeoEb_ElE[Es%Gu[J JoL/e)L@lLt+NNc-g*Ni#Rma2A>Au%EchaOrO%U*UjoU^2B@CaGa%G.L$Lle#N&Rm(+Rtun(z SaTo2Aca<Ag?AnjaAseAudeE*E'EsaIoI#U%2EgoEn)ErzaGaM Nc~Nd(g.R@S?TbolTu+:Ce]FasI%JoL/!i/=Mb- Nch}g-<RajeRzaSoli`St ToV?an3Me=M*NN!}$N)Ran$R,)Rm,S#3Gan)M`s$R Ro2Aci OboOr@2LLfoLo<LpeM(&R?([TaTeoZ 2A{Afi>A'AsaAtisAveIe%Il=IpeIsI#O<rUaUe<UmoUpo2An)ApoArd@Er[IaI'I.I<It [Sa'St :B!B?Bl C!|aD/l Mac(i`ZZa`3B?]B[|oLa&L$Mbr(*Rma'RoeRv*3E=Er+Ga&Gi,eJoM'S#r@5Ci>G Gu!aJaMb_Ng}^Nr((mig('St?Yo5E>ElgaEr%E<EvoI{IrMa'Me&M?deM}d*RacanR#:1O'0EalIomaO=2Lesi/uUal4EgalUs~0Ag,AnIt P P!$P.!Pul<0CapazDiceEr)FielF^meG,$Ic$M,<MuneNa#Sec#S%n)T!esTimoTu*Ut?Vi!'3AIsOn@0L/o):BaliB.M.RabeRdinR[U]Zmin3FeRinga3Ne)5R`d(obaV,Ya5ErgaEvesEzGa&rGoGue)Ic$N>Ngl-$Nt Pit!R S#V,?Zg :7Lo5A]:B$C$C[DoD+nG #GrimaGu`I>M!Mi`Mp --ch-gos%NzaPizRgoRvaStimaTaTexT*U_lV Zo3AlCc~|eC#rErG~Gumb_Ja'Ngu-#NaOnOp &S~TalT[VeY,{3B!%dB+C^D!Di EnzoGaG!oMaMi)M.Mp$NceN&Ne-go)N}t!`Qui&SoS%T!aT$T+2AgaAmaAn#AveEg En Ev Or Ov!Uv@2BoC~CoCu[GicaG+MbrizM}jaTe5|aC*G J}-esPaSt+ToZ:Ce%|oD!aD_Du+Est+F@G@GoIzL{dLe%Ll/oMaMboMutN>N&Nej Ng-iquiNj N}<N%Na`PaQuin(R>Re(f?Rg,Ri&RmolR+nR)sRzoSaSc aSivoT T!@TizTrizXimoY^Z^ca3|aDal]D$Du]J?]J^L,/.M^i-^NsajeN)NuRca&R,gueRi#SS.TaT!To&T+Zc]3E&ElEmb+G/Lag+Lit Ll.M}-!}im}u#OpeR SaS!@S?SmoTadTo5|?aC~DaDe=HoJ LdeL!Li'M,#Mi- c-ed-j-#NoRad(d!Re'R*R+Rs(%lScaStr TivoV!V?Zo5|oD EbleE]Er)Est[G_J!L/e%L%N&Nec(alRoScu=SeoSgoSicaS=:C C~D IpeRanj(izRr SalTalTivoTu[lUseaValVeVi{d3C$Ct G Goc$G+OnRv$ToUt+V V!a3|oDoEb]E#NezNoTi&Vel5Bleza|eMin(i(m()TaTic@Va#Ve]V$5BeCaCleoD?=DoE[EveEzLoM!oTr@:Sis0E<IspoJe#R(!oS!v T,!V$0AA<Ea'H,%HoIoReTavoTub_Ul#Up Urr*0I IoIsea0S)0EnsaEr%Ic$Rec!0Ro1DoR0O1AEa{Fa#IvoLaMoOrVi&0Bligo0DaZa1A>C~E[In On!T TicaUes#1Ac~A&rAlBi%CaD,EjaGa'G@Gul=I,)Ig,Il]OQues%Uga0Ad@Cu+Ez'OT[0O'Ro1EjaU=1I&Ige'0En)0O':C#D_El]Gi`GoIsJ oLabr/>Le%Li&Lm/om/p NNalNi>Nt!-ue=PaPelP?]Que)R Rcel(edR*RoRpa&RqueR[foR)S SeoS~SoS%TaT$Tr@UsaU%VoYa<3A#nCa&C!a|oDalD*G IneL L{'Le/ig+LlejoLoLuc--s N.OnOrPi'Que'R(ch(d!Rez(f?Ri>Rl(mi<R+Rs.aSaScaSimoS%`Ta=T+leoZZu`3C |.EEd[Er`EzaJam/ Lo#Mi,%N}#rNz-aOjoP(a%S Sci`SoS%T.Zca2AcaAnA%AyaAzaEi#E'OmoUmaU[l2B_CoD!D$EmaEs@E%L,Lici/=LvoMa{Me=MoMp-!Rc~R%lSa{Se!SibleS)T,c@T+Zo2A&E>zEgun%Em$EnsaE<Ev$ImoIncipeIs~Iv OaOb Oce<Oduc#OezaOfe<rOg[maOleOmesaOn#Op$OximoUeba2Bli>|!oD^Eb=Er%Es#Lg/*Lm.LpoL<M-#NalNoPaP?(e:99Ed EjaEm Er!E<Ie#ImicaInceIt :Ba'B@BoC~DicalIzMaMp-ch}goPazPi&P#SgoSpaToYoZaZ.3Acc~Ali{dBa'Bo)Ca!Ce%|azoCog!C_oC#Cur<DD.&Duc*FlejoF^maF[nFug$Ga=G*G]G_<H,I'IrJ/a#LevoLieveLle'LojM Med$M}>rNd*N%P #Pet*Po<Pt?SSca)Si`Spe#S#Sum,T*oT^'T[#Un*VesVis%YZ 3CoEgoEn{EsgoFaGi&G^Nc.N.OQuezaSaTmoToZo5BleCeCi D DeoD?]ErJizoJoM!oMp!NN>N{PaP!oSaScaSt+T 5BiB^DoE{G*I&In/e%LoMboM^Ptu[TaTi`:Ba&B!B$BleC GazG[&L/&L!oL*Lm.L.Ls/#LudLv Mb-c~Ndi-e Ng_Ni{dN}#PoQueRdin()nSt_TanU`Xof.3Cc~CoC_#C%DGu*IsL=LvaMa`M?l-d-<rNalN^P  P@Qui(RieRm.Rv*S,%S~TaT,%V!oXoX#3D[Es%E)G=G'Lab/b L,c$L]Mbo=M$R,aS)maT$Tu 5B_C$D$LLap/{&Le{dLi&Lt Luc~Mbr-de}i&No+NrisaPaPl P^)R&Rp_s()oS)nTa'5AveB*Ce<D^Eg[E=E'Er)Fr*Je#L%nM P! Pl*P.!P_moRR>Re'Rg*S#T?:Ba>BiqueB]BuCoC#JoL L>L,#Ll/.Ma'Mb^Ng}quePaPe)P@P.Qu?l(deRe(if(je%RotR+R%TuajeU+ZaZ.3At+|oC]CnicaJa&J!Ji&L/efo'MaM^Mp=NazNd!N!NisN<Ori(api(>Rmi'Rnur(+rSisSo+StigoT!aX#Z3B$Bu+nEmpoEn{Er[E<G_J!/deMb_Mi&M}%OPi>PoR(.TanT!eTu=Za5Al]B?=C Ci'DoG/&M N}#P PeQueRaxR!oRm,%RneoRoRpe&R_R<RtugaSS>S!Xi>2AbajoAc#rA!Afi>AgoAjeAmoAnceA#AumaAz EbolEguaEin%EnEp EsIbuIgoIpaIs)IunfoOfeoOmpaOn>OpaO)OzoU>Ue'Ufa2B!@BoEr#MbaM^NelNic(bin(ismoR'T^:0Ic 9C!a0B[l0I{dIrIv!<OT A3Ba'BeG,)Na0ArU $0IlOp@1A:CaC$Cu`G GoI`J?l/eLi&LleL^Lvu]Mp*oR(i R.So3Ci'C#rHicu=In)JezL/!oLozN-c!Nd-e'Ng N*N%NusRRa'RboRdeRed(j(<Rt!3AAjeBr C$CtimaDaDeoDr$EjoErnesG^LLl-ag_N}e&OlinRalRgoRtudS^Sp!aS%Tami`U&VazV!oV*Vo5LcanLum,Lv!RazT ToZ5E=Lg :::C!Te3GuaM('So9DoGaGur:F*}jaPa#Rza93N(+5MoR&\";\nconst accents = 'aeiou7695@@BZWWavwUJkO@Y-Kn))YEGq#E@O)cI@#ZkMHv$e*))M!!)D**$GW!oKm*Acoh^k&It-pi^SYW)$^n!G)bO!Wkzam(jS#X)Og*^l^RW!bQ#QygBKXfzE))hti!Qm)Cng%%c)mJiI*HJWbmYniCLwNdYyY%WKO^bnT$PuGOr!IvHu&G(GKbtBuhiW&!eO@XMeoYQeCa#!MrTJCq!OW&CHG(WCcW%%)$rfrIegu$)w!G)JGmWWw)MnD%SXXWIT^LWAZuVWB^W)eTL^x&$WGHW(nKWEMA)#$F$x$Waekqs,n7715)W*HM-$WAcCiu(a))VCZ)GG%(*CWWdW%$D!UCO$M';\nconst checksum = '0xf74fb7092aeacdfbf8959557de22098da512207fb9f109cb526994938cf40300';\nlet wordlist = null;\n/**\n * The [Spanish wordlist](https://github.com/bitcoin/bips/blob/master/bip-0039/spanish.txt) for [mnemonic\n * phrases](https://en.bitcoin.it/wiki/BIP_0039).\n *\n * @category Wordlists\n */\nexport class LangEs extends WordlistOwlA {\n    /**\n     * Creates a new instance of the Spanish language Wordlist.\n     *\n     * This should be unnecessary most of the time as the exported {@link langEs} should suffice.\n     *\n     * @ignore\n     */\n    constructor() {\n        super('es', words, accents, checksum);\n    }\n    /**\n     * Returns a singleton instance of a `LangEs`, creating it if this is the first time being called.\n     */\n    static wordlist() {\n        if (wordlist == null) {\n            wordlist = new LangEs();\n        }\n        return wordlist;\n    }\n}\n//# sourceMappingURL=lang-es.js.map","import { LangEn } from './lang-en.js';\nimport { LangEs } from './lang-es.js';\nexport const wordlists = {\n    en: LangEn.wordlist(),\n    es: LangEs.wordlist(),\n};\n//# sourceMappingURL=wordlists-browser.js.map","// VERSION\nexport { version } from './_version.js';\n// APPLICATION BINARY INTERFACE\nexport { AbiCoder, ConstructorFragment, ErrorFragment, EventFragment, Fragment, FallbackFragment, FunctionFragment, NamedFragment, ParamType, StructFragment, checkResultErrors, ErrorDescription, Indexed, Interface, LogDescription, Result, TransactionDescription, Typed, } from './abi/index.js';\n// ADDRESS\nexport { getAddress, computeAddress, recoverAddress, getCreateAddress, getCreate2Address, resolveAddress, validateAddress, formatMixedCaseChecksumAddress, isAddressable, isAddress, isQuaiAddress, isQiAddress, } from './address/index.js';\n//CONSTANTS\nexport { ZeroAddress, WeiPerEther, MaxUint256, MinInt256, MaxInt256, N, ZeroHash, quaisymbol, MessagePrefix, Ledger, Zone, toZone, Shard, toShard, } from './constants/index.js';\n// CONTRACT\nexport { BaseContract, Contract, ContractFactory, ContractEventPayload, ContractTransactionReceipt, ContractTransactionResponse, ContractUnknownEventPayload, EventLog, UndecodedEventLog, } from './contract/index.js';\n// CRYPTO\nexport { computeHmac, randomBytes, keccak256, ripemd160, sha256, sha512, pbkdf2, scrypt, scryptSync, lock, Signature, SigningKey, musigCrypto, } from './crypto/index.js';\n// HASH\nexport { id, hashMessage, verifyMessage, ethHashMessage, ethVerifyMessage, solidityPacked, solidityPackedKeccak256, solidityPackedSha256, TypedDataEncoder, verifyTypedData, } from './hash/index.js';\n// PROVIDERS\nexport { Block, FeeData, Log, TransactionReceipt, AbstractProvider, JsonRpcApiProvider, JsonRpcProvider, JsonRpcSigner, BrowserProvider, SocketProvider, WebSocketProvider, Network, SocketBlockSubscriber, SocketEventSubscriber, SocketPendingSubscriber, SocketSubscriber, UnmanagedSubscriber, copyRequest, } from './providers/index.js';\nexport { AbstractSigner, VoidSigner } from './signers/index.js';\n// TRANSACTION\nexport { accessListify, FewestCoinSelector, QiTransaction, QuaiTransaction, denominations, UTXO, } from './transaction/index.js';\n// UTILS\nexport { \n// data\nconcat, dataLength, dataSlice, getBytes, getBytesCopy, hexlify, isHexString, isBytesLike, stripZerosLeft, zeroPadBytes, zeroPadValue, \n// errors\nisCallException, isError, EventPayload, FetchRequest, FetchResponse, FetchCancelSignal, FixedNumber, makeError, \n// numbers\ngetBigInt, getNumber, getUint, toBeArray, toBigInt, toBeHex, toNumber, toQuantity, fromTwos, toTwos, mask, \n// strings\nformatQuai, parseQuai, formatUnits, parseUnits, uuidV4, getTxType, getZoneForAddress, getAddressDetails, } from './utils/index.js';\nexport { \n// bytes 32\ndecodeBytes32, encodeBytes32, \n// base 58\ndecodeBase58, encodeBase58, \n// base 64\ndecodeBase64, encodeBase64, \n// utf8\ntoUtf8Bytes, toUtf8CodePoints, toUtf8String, } from './encoding/index.js';\n// WALLET\nexport { Mnemonic, QuaiHDWallet, QiHDWallet, Wallet, isKeystoreJson, decryptKeystoreJsonSync, decryptKeystoreJson, encryptKeystoreJson, encryptKeystoreJsonSync, } from './wallet/index.js';\n// WORDLIST\nexport { Wordlist, LangEn, LangEs, WordlistOwl, WordlistOwlA, wordlists } from './wordlists/index.js';\n//# sourceMappingURL=quais.js.map"],"names":["assert","BN_0","BN_1","Nibbles","pb_1","dependency_1.common","Proto.block","locked","getTime","_guard","Zone","Ledger","crypto","u8a","hexToBytes","utf8ToBytes","concatBytes","randomBytes","hash","assertHash","assertExists","assertBytes","assertNumber","pbkdf2","sha256","sha512","getGlobal","_0n","_1n","_2n","_7n","rotl","ripemd160","noble_ripemd160","crypto_random","scrypt","_nobleAsync","_nobleSync","H","_3n","_5n","ut.validateObject","ut.concatBytes","ut.bytesToHex","ut.bytesToNumberBE","mod.mod","mod.invert","ut.numberToBytesBE","ut.hexToBytes","mod.getMinHashLength","mod.mapHashToField","ut.bitMask","ut.createHmacDrbg","taggedHash","N","Shard","passProperties","getValue","BN_MAX_UINT256","_keccak256","_sha256","internal","PanicReasons","words","checksum","wordlist","__classPrivateFieldGet","this","__classPrivateFieldSet","zpad","stall","crypto.hash160","crypto.bs58check","crypto.hmacSHA512","copy","defaultOptions"],"mappings":"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E,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;IAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;IAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;IAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;IAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;IAC/E,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;IAC/E,QAAQ,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EA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AC,EAAE,CAAC,CAAC,CAAC;IACtC,QAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;IACvC,QAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;IACvC,QAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACtC,QAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACtC,QAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;IACvC,QAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;IACvC,QAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACtC,QAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACtC,QAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;IACvC,QAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;IACvC,QAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACtC,QAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACtC,QAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;IACvC,QAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;IACvC,QAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACtC,QAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,G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;IACpC,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACpC,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACpC,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACpC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,C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CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,YAAY,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,Y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AE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;IAC5gggggggggggG,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,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CAAC;IAChC,KAAK;IACL,IAAI,aAAa,CAAC,IAAI,EAAE,SAAS,EAAE;IACnC,QAAQ,MAAM,iBAAiB,CAAC;IAChC,KAAK;IACL;;ICzDA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,UAAU,SAAS,gBAAgB,CAAC;IAC1C;IACA;IACA;IACA;IACA,IAAI,OAAO,QAAQ,GAAG,CAAC,CAAC;IACxB;IACA;IACA;IACA;IACA,IAAI,OAAO,UAAU,GAAG,CAAC,CAAC;IAC1B;IACA;IACA;IACA;IACA,IAAI,OAAO,SAAS,GAAG,GAAG,CAAC;IAC3B;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,gBAAgB,GAAG,IAAI,GAAG,EAAE,CAAC;IACjC;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,mBAAmB,GAAG,EAAE,CAAC;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,aAAa,GAAG,EAAE,CAAC;IACvB;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,iBAAiB,GAAG,EAAE,CAAC;IAC3B;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,uBAAuB,GAAG,EAAE,CAAC;IACjC;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,mBAAmB,GAAG,EAAE,CAAC;IAC7B;IACA;IACA;IACA,IAAI,iBAAiB,GAAG,EAAE,CAAC;IAC3B;IACA;IACA;IACA;IACA,IAAI,kBAAkB,CAAC;IACvB;IACA;IACA;IACA,IAAI,wBAAwB,GAAG,IAAI,GAAG,EAAE,CAAC;IACzC;IACA;IACA;IACA,IAAI,sBAAsB,GAAG,IAAI,GAAG,EAAE,CAAC;IACvC;IACA;IACA;IACA;IACA;IACA,IAAI,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE;IACvC,QAAQ,KAAK,CAAC,KAAK,EAAE,IAAI,EAA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","x_google_ignoreList":[20,21,22,23,24,25,26,27,28,31,33,37,40,41,42,43,44,45,96,97,98,105,106]}